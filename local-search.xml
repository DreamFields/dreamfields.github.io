<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>UE5动画原理浅析与插件AnimToTexture使用</title>
    <link href="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="蒙皮骨骼动画系统"><a class="markdownIt-Anchor" href="#蒙皮骨骼动画系统"></a> 蒙皮/骨骼动画系统</h1><p>对于游戏引擎中常用的蒙皮/骨骼动画系统，骨骼由刚性的“骨头”构建而成，渲染时并不会显示。</p><p>而称为“蒙皮”的光滑三角形网格（骨骼网格体，也可以叫做皮肤）会绑定于骨骼的“关节”上，其顶点会跟随骨骼的“关节”进行移动。</p><h3 id="骨骼"><a class="markdownIt-Anchor" href="#骨骼"></a> 骨骼</h3><p>骨骼由刚性的关节以层阶结构所构成，每个关节有且仅有一个父关节（除根关节）。而父关节与其子关节之间的长度就是一段骨骼的长度（关节可以理解为两根骨骼的连接处）。在骨骼文件中，存储的是关节信息。可以想象，如果旋转下图中的小臂，旋转的是小臂与大臂连接处的关节。<br><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/20230512101152.png" alt></p><h3 id="姿势"><a class="markdownIt-Anchor" href="#姿势"></a> 姿势</h3><p>绑定姿势（参考姿势、放松姿势），是骨骼网格体绑定至骨骼之前的姿势。</p><p>在数学上，关节的姿势就是一个仿射变换，相对于父关节来指定，其仿射变换矩阵由平移矢量、3<em>3对角缩放矩阵、3</em>3旋转矩阵构成，整个骨骼的姿势就是所有关节姿势的仿射变换矩阵的集合。当把关节姿势的仿射变换施加到以<strong>该关节坐标系</strong>表示的点或矢量时，其变换结果是以父关节空间表示的该点或矢量，也就是把该关节坐标系的点或矢量变换到父关节坐标系。</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/20230512101241.png" alt></p><p>上面提到的姿势还只是局部姿势，如果把关节姿势表示为模型空间（或者世界空间），称为全局姿势。</p><p>为了计算某个关节的全局姿势（或者说模型空间姿势），可以从该关节遍历至根关节，在每个关节上乘上其局部姿势即可（因为每乘一次局部姿势，就变换到上一级父关节空间）。</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/20230512101305.png" alt></p><h3 id="蒙皮"><a class="markdownIt-Anchor" href="#蒙皮"></a> 蒙皮</h3><p>把三维网格顶点（骨骼网格体，或称皮肤）联系到骨骼的过程，即为蒙皮。初始时，骨骼网格体的顶点处于骨骼的绑定姿势所对应的位置，因此在资源中，通常骨骼资源和骨骼网格体资源的姿势是一样的。</p><p>三维建模师必须为每个顶点提供以下额外信息：</p><ul><li>该顶点要绑定到的（最多4个）关节的索引；</li><li>每个被该顶点绑定的关节的权重因子（和为1，因此最后一个权重可以略去）。</li></ul><p>游戏引擎通常限制每个顶点能绑定4个关节，原因在于：</p><ul><li>4个8位的关节索引能方便得被包裹为一个32位字；</li><li>每个顶点绑定2、3、4个关节所产生的质量很容易区分，超过4个差别不大了</li></ul><p>由于骨骼（实际上是关节）在动画过程中在不断变换，那么我们就需要<strong>蒙皮矩阵</strong>：把骨骼网格体的顶点从<strong>骨骼的绑定姿势（初始姿势）的模型空间</strong>变换至<strong>骨骼的当前姿势的模型空间。</strong></p><p>下面介绍蒙皮矩阵的求法：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/20230512101327.png" alt></p><p>我们已知的是顶点处于绑定姿势（初始姿势）时在模型空间（初始位置）中的位置，而初始时，骨骼也是处于绑定姿势的。<strong>当某个顶点绑定到关节的位置时，它在该关节坐标空间中的位置是不变的</strong>，因此蒙皮矩阵的思路就是：</p><ul><li>先将顶点处于绑定姿势（初始姿势）时在模型空间（初始位置）中的位置变换到所绑定的关节空间，即乘以该关节在绑定姿势时的全局姿势变换矩阵（将关节空间的点变换到根关节空间，即模型空间）的<strong>逆矩阵</strong></li><li>由于整个的变换过程时关节在进行变换，所以改变的是关节的局部姿势，那么把关节从绑定姿势变换到当前姿势的变换矩阵是已知的，即乘以该<strong>变换矩阵</strong></li><li>最后把顶点再转换回模型空间，乘以该关节在当前姿势时的全局姿势变换矩阵</li></ul><p>联合后即得蒙皮矩阵。</p><h1 id="ue动画原理"><a class="markdownIt-Anchor" href="#ue动画原理"></a> UE动画原理</h1><p><a href="https://blog.csdn.net/qq_23030843/article/details/109103433">UE4 动画系统 源码及原理剖析_ue4 动画更新_Papals的博客-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/62401630">UE4动画系统的那些事（一）：UE4动画系统基础 - 知乎 (zhihu.com)</a></p><ul><li>UE4的角色动画采用了目前最流行的骨骼动画系统。骨骼动画系统大致可以分为两步：</li></ul><ol><li>计算骨骼Pose：每一根骨骼可以看做一个点，而我们的Pose就是所有骨骼Transform（位移+旋转+缩放）的集合，注意，一般来说，这个Pose是基于骨架参考姿势（Reference Pose）的变换矩阵。</li><li>蒙皮：骨骼计算好后我们还是无法看到一个角色的造型，这时需要将3D美术制作好的网格体的顶点按照骨骼Pose进行变化。这里变换的依据是顶点的蒙皮权重和参考姿势的信息（一个顶点可能受到多个骨骼的影响）。</li></ol><ul><li>动画系统更新过程简述</li></ul><p>UE4里主要承担这两步职责的是<code>Skeletal Mesh Component</code>。<code>SkeletalMeshComponent</code>继承自<code>SkinnedMeshComponent</code>。在<code>SkeletalMeshComponent</code>创建时，会创建一个<code>Animation Instance</code>,这就是主要负责计算最终Pose的对象，而我们制作的<code>AnimationBlueprint</code>也是基于<code>UAnimationInstance</code>这个类的。在<code>SkeletalMeshComponent</code>进行Tick时，会调用<code>TickAnimation</code>方法，然后会调用<code>Animation Instance</code>的<code>UpdateAnimation()</code>方法，此方法会调用一遍所有动画蓝图中连接的节点的<code>Update_AnyThread()</code>方法，用来更新所有节点的状态。</p><p>然后后续根据设置的不同会从Tick函数或者Work线程中调用<code>SkeletalMeshComponent</code>的<code>RefreshBoneTransforms()</code>方法，此方法进而会调用动画蓝图所有节点的<code>Evaluate_AnyThread()</code>方法（注：部分节点类型此方法可能被屏蔽，后续拓展动画节点时会进行说明）。</p><p><code>Evaluate</code>的含义就是指根据特定的条件（从<code>Update</code>时获得的参数）计算出动画所有骨骼的Transform信息，最后输出一个Pose给到渲染线程并存在本地Component上。</p><h1 id="插件介绍"><a class="markdownIt-Anchor" href="#插件介绍"></a> 插件介绍</h1><ul><li>AnimToTexture是UE5对VertexAnimToolset插件的改进，能在UE5.1中正常运行。</li><li>它可以将骨骼动画烘焙到材质贴图上，通过材质层读取贴图信息，结合Time实现动画效果。</li><li>该插件同时从选定的骨骼网格体创建静态网格体，可以将前面做好的材质应用到静态网格体上实现动画</li><li>这样一来，利用CPU计算骨骼动画的过程就通过材质信息移植到了GPU来计算，如果有大量网格体的时候，还可以享受合批渲染的性能节省。</li><li>除了骨骼动画贴图，该插件还可以生成顶点动画贴图，但是存储开销会变大，因此下面的介绍只涉及骨骼动画贴图。</li></ul><h1 id="原理简介"><a class="markdownIt-Anchor" href="#原理简介"></a> 原理简介</h1><p>关于骨骼动画原理可见：</p><p><a href="https://www.notion.so/UE-68a64c0cec3749e189085893a6e8bca2">UE 动画原理</a></p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled.png" alt></p><p>通过插件可以生成三张贴图分别存储的是骨骼动画的位置信息、旋转信息和顶点绑定的权重信息。</p><ul><li>右上角的两张贴图（骨骼动画的位置信息、旋转信息），每一列都是一块骨骼（其实是关节），每一行都是一帧动画，第一行是参考姿势（或者说绑定姿势），下面是不同动画片段的信息。如上图包含两段动画，他们是前后衔接的。</li><li>下面的贴图保存了两个信息，一个是静态网格体的顶点所对应的参考姿势下的位置，一个是每个顶点所绑定的的骨骼的权重。</li></ul><p>具体的内部实现，有时间看下源码再补充。</p><h1 id="插件使用"><a class="markdownIt-Anchor" href="#插件使用"></a> 插件使用</h1><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><p>在编辑器中启用：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%201.png" alt></p><p>下载插件帮助工具AnimToTextureHelpers（见参考链接），注意不要用zip下载，用git clone或者单独下载这两个文件：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%202.png" alt></p><p>下载完了移动到UE编辑器的自定义文件夹下：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%203.png" alt></p><h2 id="正式使用"><a class="markdownIt-Anchor" href="#正式使用"></a> 正式使用</h2><p>右键运行编辑器工具控件：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%204.png" alt></p><p>选择一个你要使用的骨骼网格体，点击生成静态网格体：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%205.png" alt></p><p>可以看见左边生成了静态网格体，控件也会自动填充信息：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%206.png" alt></p><p>依次点击创建纹理、创建数据资产：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%207.png" alt></p><p>看到在同一个文件夹下会生成三张空的贴图和一个数据资产：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%208.png" alt></p><p>选择要烘焙的骨骼动画，这里我选择了三段：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%209.png" alt></p><p>点击设置参数，会自动填充到数据资产中：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2010.png" alt></p><p>这一步要注意找到设置参数的蓝图中，修改一下rotation tex和weight tex的位置，应该是作者不小心弄错了：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2011.png" alt></p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2012.png" alt></p><p>此时先不要点击烘焙按钮，先设置我们的动画材质，在原来的材质上做如下修改：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2013.png" alt></p><p>创建材质实例，勾选使用动画纹理的选项，可以看到图层参数这一栏，选择插件内置的一个材质层（<strong>一般是自己定义，这样的话就可以自己设置每一段动画的播放参数，后续会补充这一块的教程）</strong></p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2014.png" alt></p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2015.png" alt></p><p>打开前面创建好的静态网格体，设置其材质插槽的值为刚刚创建的材质实例，会发现静态网格体是一团糟（后面会进行设置）：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2016.png" alt></p><p>接下来最重要的环节——烘焙，点击该按钮，插件会自动把烘焙好的材质应用到材质实例的材质图层上，并设定好参数：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2017.png" alt></p><p>回到静态网格体，看到已经可以按照先前设定好的三个动画片段播放了：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2018.png" alt></p><p>另外，关闭某些资产的时候，会出现下面的消息提示，全都选择“否”，不然会出现顶点位置偏移紊乱的情况，这个后续再看下是哪里的问题：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2019.png" alt></p><h2 id="如何选择要播放的动画片段"><a class="markdownIt-Anchor" href="#如何选择要播放的动画片段"></a> 如何选择要播放的动画片段</h2><p>在材质实例中设置，如下图，我只想播放第二个行走的动画片段，从数据资产“DA_SKM_Manny”中的信息栏-Animations找到索引1（也就是第二段动画），设置为如下参数。含义是将动画的起始位置设置为第二段动画的起始位置，播放的总帧数是第二段动画的总帧数。</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2020.png" alt></p><p>这样一来，在插件内置的材质层中就会解析出对应的动画片段：</p><p><img src="/2023/04/22/UE5%E5%8A%A8%E7%94%BB%E5%8E%9F%E7%90%86%E6%B5%85%E6%9E%90%E4%B8%8E%E6%8F%92%E4%BB%B6AnimToTexture%E4%BD%BF%E7%94%A8/Untitled%2021.png" alt></p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><ul><li>UE4的老插件：<a href="https://github.com/Rexocrates/Vertex_Anim_Toolset">https://github.com/Rexocrates/Vertex_Anim_Toolset</a></li><li>新插件<code>AnimToTexture</code>视频教程：<a href="https://www.youtube.com/watch?v=vrlFozqB0jA">Unreal Engine 5 AnimToTexture Plugin, How to Use it to make Vertex Animation Textures for crowds - YouTube</a></li><li>新插件<code>AnimToTexture</code>的帮助工具：<a href="https://github.com/kromond/AnimToTextureHelpers">https://github.com/kromond/AnimToTextureHelpers</a></li><li>新插件<code>AnimToTexture</code>视频介绍8min：53s：<a href="https://www.youtube.com/watch?v=h_dJtk3BCyg">The Matrix Awakens: Creating the Characters | Tech Talk | State of Unreal 2022 - YouTube</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Unreal</category>
      
      <category>Animation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unreal</tag>
      
      <tag>Niagara</tag>
      
      <tag>Animation</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Niagara Advance-官方用例学习</title>
    <link href="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>来自官方的<code>Content Example -&gt; Maps -&gt; Niagara_Advanced_Particles</code></p><p>部分参考：</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/614315995">Niagara Advance 笔记 - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/362638250">UE4 Niagara源码解析 - 知乎 (zhihu.com)</a></p></li></ul><h1 id="操作"><a class="markdownIt-Anchor" href="#操作"></a> 操作</h1><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled.png" alt></p><p>脚本模块的重命名需要连续三次单击才能重命名</p><h1 id="11-fillrendertarget"><a class="markdownIt-Anchor" href="#11-fillrendertarget"></a> 1.1 FillRenderTarget</h1><p><a href="https://zhuanlan.zhihu.com/p/509101203">UE5 Niagara_Render Target 2D笔记 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/333783850">1.1-1.2 Simulation Stage 和 Grid2dCollection - 知乎 (zhihu.com)</a></p><p>整个发射器是下面这个样子，注意常规模拟阶段设置。其中Data Interface（数据接口，是所有中间数据结构的统称），用来从上到下转递数据的中间结构，即存储上一个模块的迭代结果，给下一个模块或者之后使用。</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%201.png" alt></p><p>Fill Texture to RenderTarget模块如下：</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%202.png" alt></p><p>注意节点内部的引脚连接：</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%203.png" alt></p><p>注意修改渲染器的源模式：</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%204.png" alt></p><p>系统BUG：每次写完暂存区脚本后，需要关闭整个粒子系统的文件，关之前会提示是否应用，之后再打开才能看见报错信息，并且也会显示暂存区脚本在系统总览的输入选项。</p><h1 id="12-advectgrid"><a class="markdownIt-Anchor" href="#12-advectgrid"></a> 1.2 AdvectGrid</h1><p><a href="https://blog.csdn.net/xcinkey/article/details/117450602">Niagara_Advanced  1.2 Advect Grid 2D Collection_niagara grid2d</a></p><p><a href="https://zhuanlan.zhihu.com/p/333783850">1.1-1.2 Simulation Stage 和 Grid2dCollection - 知乎 (zhihu.com)</a></p><p><strong>Grid2D Collection</strong>——是一段缓冲区数组，用来作属性的“缓冲”。Render Target 2D可以认为是一个2维的数组，数组内存着的是一个又一个对应位置的颜色数据。Grid2D Collection是它的超集，即Grid2D Collection也是这样一个数组，其内存着的可以是颜色数据，也可以是其他类型数据，这些数据可以供你模拟，变换等，但是如果希望输出（显示），还是得借助Render Target（所以才说Grid2D Collection是数据的缓冲区）。</p><p><strong>StackContent</strong>——参考【<a href="https://zhuanlan.zhihu.com/p/342315125">UE4：Niagara的变量与HLSL - 知乎 (zhihu.com)</a>】，说白了这就是个懒人命名空间，各个阶段都能用。当你有一些各层级实体都可能具备的一些属性，不想每个命名空间都分别创建这些同名变量，不想随着算法的迭代去调整到底哪个命名空间应该保留这个变量时，就可以使用StackContext命名空间。</p><p>1.1中的流程为：Texture -&gt; RenderTarget2D。</p><p>1.2中只是多了一个步骤：Texture -&gt; Grid2DCollection -&gt; RenderTarget2D。</p><ul><li>Fill Grid with Texture阶段将Texture拿到的数据存到Grid2D Collection里，该阶段的常规模拟阶段设置中，Data Interface（数据接口，是所有中间数据结构的统称）必须是所利用的Grid2DCollection，否则StackContent所填充的数据并不是到Grid2DCollection。</li><li>OperateGrid（示例中的Advect Grid阶段）对Grid里的数据做一些运算从而获得流动的效果。</li><li>Fill Render Target with Grid阶段将Grid2D Collection里的数据写入Render Target里以最终显示出来。</li></ul><h2 id="问题与解决"><a class="markdownIt-Anchor" href="#问题与解决"></a> 问题与解决</h2><p>UE 5.1中找不到对Grid2D Collection的num cell设置，网上的方案在5.1里也找不到：<a href="https://forums.unrealengine.com/t/grid2d-collection-no-cellnums-setting-shown-in-ue5-niagara/531971">Grid2d collection no cellnums setting shown in ue5 niagara - Asset Creation / FX - Epic Developer Community Forums (unrealengine.com)</a></p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%205.png" alt></p><p>下面是官方用例的Grid2D Collection预览效果</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%206.png" alt></p><p>我通过那个论坛提问了一下，果然回复我了，其实就是要下载插件：</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%207.png" alt></p><p>然后在Emitter Update中添加模块，取消勾选”Only Library“就能搜到。</p><h1 id="16-distance-field-traversal"><a class="markdownIt-Anchor" href="#16-distance-field-traversal"></a> <strong><strong>1.6 Distance Field Traversal</strong></strong></h1><p><a href="https://zhuanlan.zhihu.com/p/614315995">Niagara Advance 笔记 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/351610683">1.6 Distance Field Traversal （一） - 知乎 (zhihu.com)</a></p><h1 id="31-color-copy-by-cell"><a class="markdownIt-Anchor" href="#31-color-copy-by-cell"></a> <strong>3.1 Color Copy by Cell</strong></h1><ul><li><a href="https://zhuanlan.zhihu.com/p/589478561">UE5.1 Niagara Advance 案例理解分析 3.1 - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/344191067">3.1 Neighbor Grid 3D - 知乎 (zhihu.com)</a></li><li><a href="https://alicormack.com/spatial-hashing-in-unreals-niagara-with-neighbor-grid-3d/">Spatial Hashing in Unreal’s Niagara with Neighbor Grid 3D – AliCormack</a></li><li><a href="https://zhuanlan.zhihu.com/p/350347223">UE4：Niagara中的Ribbon - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/395801716">Niagara Neighbor Grid 3D 相关节点的解读 和原理（一） - 知乎 (zhihu.com)</a></li></ul><p>整体效果与思路：利用neighbor grid3D实现粒子快速查询，使得大粒子在生成之后填入neighbor grid3D，之后生成的小粒子通过当前所在位置来查询neighbor grid3D存储的最近的大粒子索引，从而获得其颜色。</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%208.png" alt></p><p><strong>Neighbir Grid是先将空间划分为N<em>N</em>N个子空间（Cell）。其中：每个子空间有”Max Neighbor Per Cell“个单位存储一个Int数据（通常用于记录粒子Index），表示每个子空间所能存储信息的最大数量</strong>。</p><p>在Grid中并没有存储任何粒子的属性信息,，而只是用来“加速”的，最终他起到的作用就能够通过：粒子位置-在网格中的索引(NeighborIndex)-粒子的索引(Index)产生联系，给出从属粒子位置就能得到leader粒子的另外两个索引，而Attribute Reader正是通过粒子的Index读取粒子属性的，这样就能通过空间划分的方式来快速查找粒子进行属性相关计算。</p><p>下面解析实现方法：</p><ol><li>整体的发射器由三部分构成：<ol><li>Visualize_Grid3D：neighbor grid 3D的条带渲染可视化</li><li>GridWrite：neighbor grid 3D的信息写入，负责生成大粒子并写入neighbor grid 3D</li><li>GridRead：负责生成小粒子并查询neighbor grid 3D来改变颜色</li></ol></li></ol><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%209.png" alt></p><ol><li>FillNeighborGrid3D模块中的hlsl代码</li></ol><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-comment">// 每一个粒子都会执行该代码</span><br>IsAddedToGrid = <span class="hljs-literal">false</span>;<br><br><span class="hljs-meta">#if GPU_SIMULATION</span><br><br><span class="hljs-comment">// 从世界坐标位置转换到Grid网格的UV 0-1的单位空间的坐标</span><br>float3 UnitPos;<br>NeighborGrid.SimulationToUnit(Position, SimulationToUnit, UnitPos);<br><br><span class="hljs-comment">// 提取Neighbor Grid的Index，相当于把单位空间划分为NumCells.x* NumCells.y*NumCells.z个子空间</span><br><span class="hljs-comment">// 这个Index表示粒子所在的子空间的位置，可以理解为在x y z 方向上的第几个网格上</span><br>int3 Index;<br>NeighborGrid.UnitToIndex(UnitPos, Index.x,Index.y,Index.z);<br><br><span class="hljs-comment">// 判断这个粒子获取的子空间Index是有效的</span><br>int3 NumCells;<br>NeighborGrid.GetNumCells(NumCells.x, NumCells.y, NumCells.z);<br><br><span class="hljs-keyword">if</span> (Index.x &gt;= <span class="hljs-number">0</span> &amp;&amp; Index.x &lt; NumCells.x &amp;&amp; <br>    Index.y &gt;= <span class="hljs-number">0</span> &amp;&amp; Index.y &lt; NumCells.y &amp;&amp; <br>Index.z &gt;= <span class="hljs-number">0</span> &amp;&amp; Index.z &lt; NumCells.z)<br>&#123;<br>    <span class="hljs-comment">// 根据子空间Index（位置，即三维索引）获取子空间的线性索引</span><br>    <span class="hljs-comment">// 源码如下：</span><br>    <span class="hljs-comment">// Out_Linear = In_IndexX + In_IndexY * &#123;NumVoxelsName&#125;.x + In_IndexZ * &#123;NumVoxelsName&#125;.x * &#123;NumVoxelsName&#125;.y;</span><br>    <span class="hljs-type">int</span> LinearIndex;<br>    NeighborGrid.IndexToLinear(Index.x, Index.y, Index.z, LinearIndex);<br><br>    <span class="hljs-comment">// 增加这个LinearIndex对应的子空间的 NeighborCount，即+1，表示当前子空间的存储信息多了一个。（该样例中表示当前子空间所能存储的粒子Index的数量）</span><br>    <span class="hljs-comment">// PreviousNeighborCount : 表示增量之前的Count</span><br>    <span class="hljs-type">int</span> PreviousNeighborCount;<br>    NeighborGrid.SetParticleNeighborCount(LinearIndex, <span class="hljs-number">1</span>, PreviousNeighborCount);<br><br>    <span class="hljs-comment">// Neighbir Grid是先将空间划分为N*N*N个子空间（Cell）。其中：每个子空间有”Max Neighbor Per Cell“个单位存储一个Int数据（通常用于记录粒子Index），</span><br>    <span class="hljs-comment">// 表示每个子空间所能存储信息的最大数量。</span><br>    <span class="hljs-type">int</span> MaxNeighborsPerCell;<br>    NeighborGrid.MaxNeighborsPerCell(MaxNeighborsPerCell);<br><br>    <span class="hljs-comment">// 不让该子空间的当前数量（存储的信息数量）超过MaxNeighborsPerCell</span><br>    <span class="hljs-comment">// 当网格还没有装满时，才会真正执行划分操作</span><br>    <span class="hljs-keyword">if</span> (PreviousNeighborCount &lt; MaxNeighborsPerCell)<br>    &#123;<br>        <span class="hljs-comment">// 判断当前粒子是否被加入Neighbor Grid</span><br>        IsAddedToGrid = <span class="hljs-literal">true</span>;<br><br>        <span class="hljs-comment">// 源码如下：</span><br>        <span class="hljs-comment">// Out_Linear = In_Neighbor </span><br>        <span class="hljs-comment">//                  + In_IndexX * &#123;MaxNeighborsPerVoxelName&#125; </span><br>        <span class="hljs-comment">//                  + In_IndexY * &#123;MaxNeighborsPerVoxelName&#125;*&#123;NumVoxelsName&#125;.x </span><br>        <span class="hljs-comment">//                  + In_IndexZ * &#123;MaxNeighborsPerVoxelName&#125;*&#123;NumVoxelsName&#125;.x*&#123;NumVoxelsName&#125;.y</span><br>        <span class="hljs-comment">// 计算的是：这个粒子在当前子空间的下标In_Neighbor，范围应该是[0,MaxNeighborsPerCell），放到整个Grid空间下的一维下标</span><br>        <span class="hljs-comment">// PreviousNeighborCount : 表示增量之前的Count</span><br>        <span class="hljs-type">int</span> NeighborGridLinear;<br>        NeighborGrid.NeighborGridIndexToLinear(Index.x, Index.y, Index.z, PreviousNeighborCount, NeighborGridLinear);<br><br>        <span class="hljs-comment">// 把粒子的ExecIndex赋值到NeighborGridLinear对应的空间，这样的话就可以通过Neighbor Index得到粒子的Index从而查询粒子的属性</span><br>        <span class="hljs-type">int</span> IGNORE;<br>        NeighborGrid.SetParticleNeighbor(NeighborGridLinear, ExecIndex, IGNORE);<br>    &#125;<br>&#125;<br><span class="hljs-meta">#endif</span><br></code></pre></td></tr></table></figure><ol><li>FindClosestNeighbor模块的hlsl代码</li></ol><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs glsl">NeighborIndex = <span class="hljs-number">-1</span>;<br><br><span class="hljs-meta">#if GPU_SIMULATION</span><br><br><span class="hljs-type">bool</span> Valid;<br><br>float3 UnitPos;<br>NeighborGrid.SimulationToUnit(Position, WorldToUnit, UnitPos);<br><br>int3 Index;<br>NeighborGrid.UnitToIndex(UnitPos, Index.x,Index.y,Index.z);<br><br><span class="hljs-comment">// 用一个比较大的值初始化距离该粒子最近的距离</span><br><span class="hljs-type">float</span> neighbordist =  <span class="hljs-number">3.4e+38</span>;<br><br><span class="hljs-type">int</span> MaxNeighborsPerCell;<br>NeighborGrid.MaxNeighborsPerCell(MaxNeighborsPerCell);<br><br><span class="hljs-comment">// 每个子空间（Cell）中包含有MaxNeighborsPerCell个Neighbor这样的存储数据的结构。</span><br><span class="hljs-comment">// 从上一个GridWrite的粒子发射器所填入的Neighbor Grid3D结构中，遍历该粒子所处的</span><br><span class="hljs-comment">// 子空间的Neighbor，查找距离最近的大粒子</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MaxNeighborsPerCell; ++i)<br>&#123;<br>    <span class="hljs-comment">// 当前子空间（Cell）中第i个Neighbor的NeighborLinearIndex</span><br>    <span class="hljs-type">int</span> NeighborLinearIndex;<br>    NeighborGrid.NeighborGridIndexToLinear(Index.x, Index.y, Index.z, i, NeighborLinearIndex);<br><br>    <span class="hljs-comment">// 读取NeighborLinearIndex中真正保存的数据，也就是之前写入的大粒子的索引Index赋给CurrNeighborIdx</span><br>    <span class="hljs-comment">// 如果这个Neighbor中没有保存数据，就返回-1</span><br>    <span class="hljs-type">int</span> CurrNeighborIdx;<br>    NeighborGrid.GetParticleNeighbor(NeighborLinearIndex, CurrNeighborIdx);<br><br>    <span class="hljs-comment">// 如果读取到的大粒子的索引Index!=-1，此时有效，说明这个Neighbor中存了大粒子的索引</span><br>    <span class="hljs-keyword">if</span> (CurrNeighborIdx != <span class="hljs-number">-1</span>)<br>    &#123;<br>        <span class="hljs-comment">// 使用 Attribute Reader + CurrNeighborIdx 来查询大粒子的位置</span><br>        float3 NeighborPos;<br>        AttributeReader.GetVectorByIndex&lt;Attribute=&quot;Position&quot;&gt;(CurrNeighborIdx, Valid, NeighborPos);<br><br>        <span class="hljs-comment">// Position是每个执行该代码的小粒子的位置</span><br>        <span class="hljs-comment">// 比较它和查找到的大粒子的距离</span><br>        <span class="hljs-keyword">const</span> float3 delta = Position - NeighborPos;<br>        <span class="hljs-keyword">const</span> <span class="hljs-type">float</span> dist = <span class="hljs-built_in">length</span>(delta);<br><br>        <span class="hljs-keyword">if</span>( dist &lt; neighbordist )<br>        &#123;<br>            <span class="hljs-comment">// 在小粒子所在的子空间（Cell）中更新距离该小粒子最近的那个大粒子的真实索引Index</span><br>            neighbordist = dist;<br>            NeighborIndex = CurrNeighborIdx;<br>        &#125;<br>    &#125;  <br>&#125;    <br><br><span class="hljs-meta">#endif</span><br></code></pre></td></tr></table></figure><h1 id="36-position-based-dynamics"><a class="markdownIt-Anchor" href="#36-position-based-dynamics"></a> <strong><strong>3.6 Position Based Dynamics</strong></strong></h1><p>（待完善）</p><h1 id="39-boids"><a class="markdownIt-Anchor" href="#39-boids"></a> 3.9 Boids</h1><p><a href="https://zhuanlan.zhihu.com/p/441231656">【Unreal从0到1】【第九章：粒子系统与物理引擎】9.4，Boid群集算法浅析 - 知乎 (zhihu.com)</a></p><h2 id="集群行为模型-boids"><a class="markdownIt-Anchor" href="#集群行为模型-boids"></a> 集群行为模型-Boids</h2><p><a href="https://scholar.google.com/scholar?q=Flocks,+herds+and+schools:+A+distributed+behavioral+model&amp;hl=zh-CN&amp;as_sdt=0&amp;as_vis=1&amp;oi=scholart">Flocks, herds and schools: A distributed behavioral model - Google 学术搜索</a></p><p>克雷格的Boids模型正是以“自下而上的控制”为核心，提出了一个在二维或三维空间上模拟集群行为的模型，该模型要求集群的个体遵守三条基本原则：</p><h3 id="分离seperation"><a class="markdownIt-Anchor" href="#分离seperation"></a> 分离（seperation）</h3><p>与邻域内的集群个体避免碰撞。对于一个集群个体来言，每一个在其邻域范围内的集群个体与它之间都有一个排斥力，这个排斥力是与它们之间的距离成反比的。每一个集群个体所受到的排斥力是它邻域范围内其它集群个体对它的排斥力的累加。</p><h3 id="聚合cohesion"><a class="markdownIt-Anchor" href="#聚合cohesion"></a> 聚合（cohesion）</h3><p>与邻域内的集群个体保持紧凑。集群个体需要获得其邻域内其它集群个体的位置信息，并计算出邻域内集群个体位置的平均值，由此产生一个作用于该邻域内所有集群个体的吸引力</p><h3 id="对齐alignment"><a class="markdownIt-Anchor" href="#对齐alignment"></a> 对齐（alignment）</h3><p>与邻域内的集群个体速度保持一致。为了能够实现速度一致，每个集群个体需要获得邻域内其它集群个体速度信息，计算出邻域内集群个体的平均速度。通过速度对齐，可以使得集群个体速度大小和方向与这个邻域内所有集群个体速度的平均值保持一致。</p><h2 id="特化-鱼群模拟"><a class="markdownIt-Anchor" href="#特化-鱼群模拟"></a> 特化-鱼群模拟</h2><p><a href="https://www.sciencedirect.com/science/article/abs/pii/S0022519305806812">The simulation of the movement of fish schools - ScienceDirect</a></p><p>模拟的基本假设是: (1)鱼的运动只受其最近邻的位置和方向的影响。(2)在考虑随机影响的情况下，利用概率分布计算每条鱼(经过一个时间步后)的新速度和转向角。(3)每条模型鱼的运动都基于相同的行为模式，即模型鱼群在没有领导者的情况下游动。</p><p>基本的行为模式是吸引、排斥和平行取向。我们的调查表明，鱼类如何混合其邻居的影响是非常重要的。如果一条鱼对其邻近鱼群的影响取平均值，则模型鱼群表现出真实鱼群的典型特征: 强凝聚力和高极化程度。如果一条鱼只对一个邻居作出反应，那么这个模型就创建了一个混乱的鱼群。</p><p><img src="/2023/04/10/Niagara-Advance-%E5%AE%98%E6%96%B9%E7%94%A8%E4%BE%8B%E5%AD%A6%E4%B9%A0/Untitled%2010.png" alt></p><p>Boid Force模块：</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><br>OutForce = float3 (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>); <br><span class="hljs-comment">// 寻找所有能够影响当前执行代码的粒子的数量</span><br>NeighborCount = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">//----传出变量-----</span><br><span class="hljs-comment">// 分离（seperation）</span><br>ParticleAvoidanceForce = float3 (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>); <br><span class="hljs-comment">// 聚合（cohesion）</span><br>ParticleCohesionCenter = float3 (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>); <br>ParticleCohesionForce = float3 (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>); <br><span class="hljs-comment">// 对齐（alignment）</span><br>ParticleVelocityMatchingForce = float3 (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>); <br><br><span class="hljs-meta">#if GPU_SIMULATION</span><br><br><span class="hljs-comment">//--------------------------</span><br><br><span class="hljs-comment">// 归一化朝向矢量用于后续矫正速度的计算</span><br><span class="hljs-type">float</span> VelocityVectorLength = <span class="hljs-built_in">distance</span>(Velocity, float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>));<br>float3 NormalizedFacingVector = float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (VelocityVectorLength &gt; <span class="hljs-number">0</span>)&#123;<br>    NormalizedFacingVector = (Velocity/VelocityVectorLength);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// SafeFacingVector从Update Mesh Orientation模块得到</span><br>NormalizedFacingVector = SafeFacingVector;<br>&#125;<br><br><span class="hljs-comment">//---临时变量-----</span><br><span class="hljs-comment">// 分离（seperation）</span><br>float3 RepulsiveForce = float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-comment">// 对齐（alignment）</span><br>float3 VelocityMatchingForce = float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-comment">// 聚合（cohesion）</span><br>float3 CohesionCenter = float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><br><span class="hljs-comment">// 寻找所有当前执行代码的粒子需要躲避的数量（从后面代码看出）</span><br><span class="hljs-type">int</span> MinDistanceNeighborCount = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">const</span> int3 IndexOffsets [ <span class="hljs-number">27</span> ] = <br>&#123;<br>int3(<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>),<br>int3(<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),<br>int3(<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>),<br><br>int3(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>),<br>int3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),<br>int3(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>),<br><br>int3(<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>, <span class="hljs-number">1</span>),<br>int3(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>),<br>int3(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>,<span class="hljs-number">-1</span>),<br>int3(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>),<br>int3(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>),<br>&#125;;<br><br><span class="hljs-comment">// 当前粒子从世界坐标位置转换到Grid网格的UV 0-1的单位空间的坐标</span><br>float3 UnitPos;<br>myNeighborGrid.SimulationToUnit(Position, SimulationToUnit, UnitPos);<br><br><span class="hljs-comment">// Index表示粒子所在的子空间的位置</span><br>int3 Index;<br>myNeighborGrid.UnitToIndex(UnitPos, Index.x,Index.y,Index.z);<br><br>int3 NumCells;<br>myNeighborGrid.GetNumCells(NumCells.x, NumCells.y, NumCells.z);<br><br><span class="hljs-type">int</span> MaxNeighborsPerCell;<br>myNeighborGrid.MaxNeighborsPerCell(MaxNeighborsPerCell);<br><br><span class="hljs-comment">// Index表示粒子所在的子空间的位置，Index + IndexOffsets[xxx]表示遍历当前所在子空间的周围</span><br><span class="hljs-comment">// 27个相邻空间数据</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> xxx = <span class="hljs-number">0</span>; xxx &lt; <span class="hljs-number">27</span>; ++xxx) <br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; MaxNeighborsPerCell; ++i)<br>&#123;<br><span class="hljs-keyword">const</span> int3 IndexToUse =Index + IndexOffsets[xxx];<br><span class="hljs-comment">// 当前子空间（Cell）中第i个Neighbor的NeighborLinearIndex，以下得到的粒子称为OtherParticle</span><br><span class="hljs-type">int</span> NeighborLinearIndex;<br>myNeighborGrid.NeighborGridIndexToLinear(IndexToUse.x, IndexToUse.y, IndexToUse.z, i, NeighborLinearIndex);<br><span class="hljs-comment">// 该Neighbor中的Idx</span><br><span class="hljs-type">int</span> CurrNeighborIdx;<br>myNeighborGrid.GetParticleNeighbor(NeighborLinearIndex, CurrNeighborIdx);<br><br><span class="hljs-comment">// 临时bool，捕获每次读取Neighbor中获取的粒子属性</span><br><span class="hljs-type">bool</span> myBool; <br>float3 OtherPos;<br>DirectReads.GetVectorByIndex&lt;Attribute=&quot;Position&quot;&gt;(CurrNeighborIdx, myBool, OtherPos);<br>float3 OtherVel;<br>DirectReads.GetVectorByIndex&lt;Attribute=&quot;Velocity&quot;&gt;(CurrNeighborIdx, myBool, OtherVel);<br><span class="hljs-type">bool</span> OtherAwake;<br>DirectReads.GetBoolByIndex&lt;Attribute=&quot;Awake&quot;&gt;(CurrNeighborIdx, myBool, OtherAwake);<br><span class="hljs-comment">// 判断是否在Neighbor Grid 3D中。InstanceIdx 是当前执行代码的粒子的index</span><br><span class="hljs-keyword">if</span> (IndexToUse.x &gt;= <span class="hljs-number">0</span> &amp;&amp; IndexToUse.x &lt; NumCells.x &amp;&amp; <br>IndexToUse.y &gt;= <span class="hljs-number">0</span> &amp;&amp; IndexToUse.y &lt; NumCells.y &amp;&amp; <br>IndexToUse.z &gt;= <span class="hljs-number">0</span> &amp;&amp; IndexToUse.z &lt; NumCells.z &amp;&amp; <br>CurrNeighborIdx != InstanceIdx &amp;&amp; CurrNeighborIdx != <span class="hljs-number">-1</span> &amp;&amp; OtherAwake == <span class="hljs-literal">true</span>)<br>&#123;<br><span class="hljs-comment">//////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="hljs-comment">//otherawake == 1.0 有可能不能正常工作，应该涉及到bool转型的问题</span><br><span class="hljs-comment">//////////////////////////////////////////////////////////////////////////////////////////</span><br><span class="hljs-comment">// 计算从Neighbor中取得的粒子（OtherParticle）与当前执行代码的粒子的距离</span><br><span class="hljs-type">float</span> CurrentDistance = <span class="hljs-built_in">distance</span> ( OtherPos , Position );<br>float3 VectorToOtherParticle = float3(OtherPos - Position); <br>float3 NormalizedVectorToOtherParticle = float3( <span class="hljs-built_in">normalize</span>(VectorToOtherParticle) );<br><span class="hljs-type">float</span> CurrentViewToOtherBirdPercentage = <span class="hljs-built_in">dot</span>(NormalizedVectorToOtherParticle, NormalizedFacingVector);<br><span class="hljs-comment">// 求当前执行代码的粒子的朝向与从Neighbor中取得的粒子的夹角cos值（-1~1之间）并映射到0~1之间。如果是1，说明其它粒子在当前执行代码的粒子的正前方；0就是正后方</span><br>CurrentViewToOtherBirdPercentage = (CurrentViewToOtherBirdPercentage + <span class="hljs-number">1.0</span>f) * <span class="hljs-number">0.5</span>f;<br>            <br><span class="hljs-keyword">if</span> (<br>                    <span class="hljs-comment">// 如果在最小的可视cos值内，且距离在最大感知距离之内，就会对当前执行代码的粒子产生影响</span><br>CurrentViewToOtherBirdPercentage &gt;= MinVisionConeAngle &amp;&amp; <br>CurrentDistance &lt;= MaxDistance)<br>&#123;<br><span class="hljs-comment">//This bird will be considered an influencer now</span><br><span class="hljs-comment">//We need to make them avoid each other if they are too close</span><br><span class="hljs-comment">//match each others velocities if they are roughly in line with each other</span><br><span class="hljs-comment">//form an attraction with the center of the clump for cohesion</span><br><span class="hljs-comment">//Avoid each other if they&#x27;re heading toward each other</span><br><br>                    <span class="hljs-comment">// 根据距离计算影响权重</span><br><span class="hljs-type">float</span> DistanceWeighting = <span class="hljs-number">1.0</span>f - saturate (CurrentDistance / MaxDistance);<br><span class="hljs-comment">//Make the particles match each others velocities if they&#x27;re vaguely aligned</span><br><span class="hljs-type">float</span> OtherVelocityVectorLength = <span class="hljs-built_in">distance</span>(OtherVel, float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>));<br>float3 NormalizedOtherVelocity = float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (OtherVelocityVectorLength &gt; <span class="hljs-number">0</span>)<br>&#123;<br>NormalizedOtherVelocity=(OtherVel/OtherVelocityVectorLength);<br>&#125;<br>                    <span class="hljs-comment">// 源代码没有*DistanceWeighting，说明没有进行距离加权</span><br>CohesionCenter += OtherPos;<br><br><span class="hljs-comment">// Avoidance，或者叫分离（seperation）</span><br><span class="hljs-comment">// OtherParticle指向当前执行代码的粒子的向量</span><br>float3 VectorTowardCurrentBird = NormalizedVectorToOtherParticle * float3(<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>);<br>                    <span class="hljs-comment">// 此时的CollisionAvoidanceVector垂直于NormalizedFacingVector、VectorTowardCurrentBird，注意hlsl是左手坐标系，cross是左手法则</span><br>float3 CollisionAvoidanceVector = <span class="hljs-built_in">cross</span>( NormalizedFacingVector, VectorTowardCurrentBird );<br>                    <span class="hljs-comment">// 此时的CollisionAvoidanceVector是垂直于VectorTowardCurrentBird，面向OtherParticle的右向量</span><br>CollisionAvoidanceVector = <span class="hljs-built_in">cross</span>( CollisionAvoidanceVector, VectorTowardCurrentBird );<br>                    <span class="hljs-comment">// MovementPreferenceVector是模块输入，注释：We can bend the resulting forces in a given direction before combining them with Transient.PhysicsForces. A value of 1,1,.5 would allow the boid to move naturally on x and y but less so on z.</span><br>                    <span class="hljs-comment">// 意思是对xyz三个方向设置混合的权重，(1,1,.5)表示保持xy值而z变为原来的0.5，意义是在z方向上的Avoidance会小一些，不让粒子在上下方向移动过大而主要是在xy平面移动，符合鸟的躲避行为</span><br>CollisionAvoidanceVector *= MovementPreferenceVector;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">length</span>(CollisionAvoidanceVector)&gt;<span class="hljs-number">0.0</span>f)<br>&#123;<br>CollisionAvoidanceVector = <span class="hljs-built_in">normalize</span>(CollisionAvoidanceVector); <br>&#125; <span class="hljs-keyword">else</span> &#123;<br>CollisionAvoidanceVector = float3 (<span class="hljs-number">0.0</span>f,<span class="hljs-number">0.0</span>f,<span class="hljs-number">0.0</span>f); <br>&#125;<br>                    <span class="hljs-comment">// OtherParticle的速度方向和当前执行代码的粒子的朝向cos值并截取到0~1之间</span><br><span class="hljs-type">float</span> FlightDirectionAngleComparison = saturate(<span class="hljs-built_in">dot</span>(NormalizedOtherVelocity, NormalizedFacingVector));<br>                    <span class="hljs-comment">// MinDistance模块输入，注释：Boids will attempt to avoid other boids that are within this distance and their cone of vision based on the &quot;Avoidance&quot; force.</span><br>                    <span class="hljs-comment">// 意思是当前距离小于这个阈值了，就一定要执行躲避防止碰撞</span><br><span class="hljs-keyword">if</span> (CurrentDistance &lt;= MinDistance) &#123;<br>MinDistanceNeighborCount += <span class="hljs-number">1</span>;<br>                        <span class="hljs-comment">// 根据距离计算排斥力权重</span><br><span class="hljs-type">float</span> RespulsionForceDistanceWeighting = <span class="hljs-number">1.0</span>f - saturate(CurrentDistance / MinDistance);<br><span class="hljs-keyword">if</span> ( FlightDirectionAngleComparison &lt;= <span class="hljs-number">0.0</span> ) &#123; <br><span class="hljs-comment">// OtherParticle没有朝向正在执行代码的粒子飞来，排斥力朝向面向OtherParticle的右向量，应该是进行了聚合（cohesion）的效果</span><br>RepulsiveForce += CollisionAvoidanceVector * RespulsionForceDistanceWeighting;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-comment">// OtherParticle大致朝向正在执行代码的粒子飞来，那么排斥力就设置为远离OtherParticle的方向，同时进行速度对齐（alignment）</span><br>RepulsiveForce += <span class="hljs-built_in">normalize</span> (VectorToOtherParticle * float3(<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">-1</span>)) * RespulsionForceDistanceWeighting;<br>VelocityMatchingForce += (OtherVel - Velocity); <span class="hljs-comment">//* FlightDirectionAngleComparison;</span><br>&#125;<br>&#125;<br>NeighborCount += <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125; <span class="hljs-comment">//end for loop</span><br><br><span class="hljs-keyword">if</span> ( MinDistanceNeighborCount &gt; <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-comment">///////////////////对齐（alignment）的力和分离（seperation）的力///////////////////</span><br>    <span class="hljs-comment">// 平均一下（并没有加权）</span><br>VelocityMatchingForce = VelocityMatchingForce / MinDistanceNeighborCount;<br>    <span class="hljs-comment">// VelocityMatchingStrength模块输入，注释：Enter a 0-1 value. 1 will force particles to attempt to match their neighbors velocity. </span><br>VelocityMatchingForce *= VelocityMatchingStrength;<br>    <br>    <span class="hljs-comment">// 加权平均排斥力，因为上面有*RespulsionForceDistanceWeighting</span><br>RepulsiveForce = RepulsiveForce / MinDistanceNeighborCount;<br>RepulsiveForce *= RepulsiveForceStrength;<br><br>    <span class="hljs-comment">// 赋值给输出变量</span><br>ParticleAvoidanceForce = RepulsiveForce;<br>ParticleVelocityMatchingForce = VelocityMatchingForce;<br>&#125;<br><br><span class="hljs-keyword">if</span> ( NeighborCount &gt; <span class="hljs-number">0</span>)<br>&#123;<br>    <span class="hljs-comment">///////////////////聚合（cohesion）的力///////////////////</span><br>float3 AveragedCohesionCenter = float3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-comment">//CohesionCenter += Position; </span><br>AveragedCohesionCenter = float3 (CohesionCenter / NeighborCount + <span class="hljs-number">1</span> );<br>float3 VectorToCenter = float3 (AveragedCohesionCenter - Position);<br><span class="hljs-type">float</span> VectorToCenterDistance = <span class="hljs-type">float</span> (<span class="hljs-built_in">length</span> (VectorToCenter));<br>    <span class="hljs-comment">// 距离聚合中心越远，distanceToCenterFalloffMultiplier系数就越大</span><br><span class="hljs-type">float</span> distanceToCenterFalloffMultiplier = saturate (VectorToCenterDistance/MaxDistance);<br>distanceToCenterFalloffMultiplier = <span class="hljs-number">1.0</span>f - distanceToCenterFalloffMultiplier;<br>float3 normalizedVectorToCenter = float3 (<span class="hljs-built_in">normalize</span>(VectorToCenter)); <br><span class="hljs-comment">//consider a power op etc here.</span><br>float3 CohesionForce = float3(normalizedVectorToCenter * CohesionForceStrength); <span class="hljs-comment">//* distanceToCenterFalloffMultiplier</span><br><br>    <span class="hljs-comment">// 赋值给输出变量</span><br>ParticleCohesionCenter = AveragedCohesionCenter;<br>ParticleCohesionForce = CohesionForce;<br>OutForce = CohesionForce + RepulsiveForce + VelocityMatchingForce;<br>&#125;<br><span class="hljs-meta">#endif</span><br></code></pre></td></tr></table></figure><p>注意：<code>Transient</code>类型的变量仅在给定的堆栈上下文(例如Particle Update)中是局部的，并且每帧从头开始重新计算，它们的值不会从一帧持续到另一帧。这使得它们与Particle不同。这些变量保存在粒子有效载荷中，并从一帧到另一帧持续存在，这是以内存和性能为代价的。大致意思应该是保存从上一帧到这一帧的数据，具体还不太理解。</p>]]></content>
    
    
    <categories>
      
      <category>Unreal</category>
      
      <category>Niagara</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unreal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>UE 渲染体系浅析</title>
    <link href="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/"/>
    <url>/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>UE（Unreal Engine）是一种广泛使用的游戏引擎，它的渲染体系是其最重要的组成部分之一。UE的渲染体系包含许多不同的渲染技术，涵盖了从基本的几何形状、材质和光源到复杂的全局照明和后期处理。</p><ul><li>Engine\Source\Runtime\RendererCore。</li><li>Engine\Source\Runtime\Renderer。</li><li>Engine\Source\Runtime\RHI。</li><li>部分RHI模块（为了跨多种图形API，加入了RHI体系，解决用户层裸调用图形API的问题）：D3D12RHI，OpenGLDrv，VulkanRHI等。</li><li>部分基础模块：Core，CoreUObject等。</li></ul><h1 id="ue的渲染流程"><a class="markdownIt-Anchor" href="#ue的渲染流程"></a> UE的渲染流程</h1><p>UE存在游戏线程（Game Thread）、渲染线程（Render Thread）、RHI线程（RHI Thread），它们都独立地运行在专门的线程上（FRunnableThread）。</p><p><strong>游戏线程</strong>通过某些接口向渲染线程的Queue入队回调接口，以便渲染线程稍后运行时，从渲染线程的Queue获取回调，一个个地执行，从而生成了Command List。</p><p><strong>渲染线程</strong>作为前端（frontend）产生的Command List是平台无关的，是抽象的图形API调用。</p><p><strong>RHI线程</strong>作为后端（backtend）会执行和转换渲染线程的Command List成为指定图形API的调用（称为Graphical Command），并提交到GPU执行。</p><p>事实上，多线程并非多个渲染线程，渲染线程从始至终只有一个。这里的多线程指的是游戏线程、渲染线程、RHI线程同时存在，并行处理整个渲染过程。每个线程负责不同的任务而已。</p><p>此外，三个线程的处理速度并不一致，渲染线程在游戏线程的一两帧后操作。如果游戏线程跑的太快，游戏线程会在每个Tick事件的末尾阻塞，直到渲染线程赶上一到两帧的差距，才继续处理下一帧。</p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled.png" alt="Untitled"></p><h2 id="游戏线程"><a class="markdownIt-Anchor" href="#游戏线程"></a> <strong>游戏线程</strong></h2><p>游戏线程被称为主线程，是引擎运行的心脏，承载主要的游戏逻辑、运行流程的工作，也是其它线程的数据发起者。游戏线程的创建是运行程序入口的线程，由系统启动进程时被同时创建的（因为进程至少需要一个线程来工作），在引擎启动时直接存储到全局变量中。</p><p>游戏线程在Tick时，会通过UGameEngine、FViewport、UGameViewportClient等对象，才会进入渲染模块的调用。该线程完成的主要任务是：</p><ul><li>资源加载：加载本地模型、材质等资源</li><li>场景搭建：将场景中的物体以特定的数据结构组织起来</li><li>之后会创<strong>建场景渲染器</strong>，并向渲染线程发送绘制场景指令，会进入渲染模块的调用</li></ul><p>整个的Tick函数中跟渲染相关的逻辑精简后如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">UGameEngine::Tick</span><span class="hljs-params">( <span class="hljs-keyword">float</span> DeltaSeconds, <span class="hljs-keyword">bool</span> bIdleMode )</span></span><br><span class="hljs-function"></span>&#123;<br>    UGameEngine::<span class="hljs-built_in">RedrawViewports</span>()<br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">FViewport::Draw</span><span class="hljs-params">( <span class="hljs-keyword">bool</span> bShouldPresent)</span></span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">UGameViewportClient::Draw</span><span class="hljs-params">()</span></span><br><span class="hljs-function">            </span>&#123;<br>                <span class="hljs-comment">// 计算ViewFamily、View的各种属性</span><br>                ULocalPlayer::<span class="hljs-built_in">CalcSceneView</span>();<br>                <span class="hljs-comment">// 发送渲染命令</span><br>                FRendererModule::<span class="hljs-built_in">BeginRenderingViewFamily</span>()<br>                &#123;<br>                    World-&gt;<span class="hljs-built_in">SendAllEndOfFrameUpdates</span>();<br>                    <span class="hljs-comment">// 创建场景渲染器</span><br>                    FSceneRenderer* SceneRenderer = FSceneRenderer::<span class="hljs-built_in">CreateSceneRenderer</span>(ViewFamily, ...);<br>                    <span class="hljs-comment">// 向渲染线程发送绘制场景指令.</span><br>                    <span class="hljs-built_in">ENQUEUE_RENDER_COMMAND</span>(FDrawSceneCommand)(<br>                    [SceneRenderer](FRHICommandListImmediate&amp; RHICmdList)<br>                    &#123;<br>                        <span class="hljs-built_in">RenderViewFamily_RenderThread</span>(RHICmdList, SceneRenderer)<br>                        &#123;<br>                            (......)<br>                            <span class="hljs-comment">// 调用场景渲染器的绘制接口.</span><br>                            SceneRenderer-&gt;<span class="hljs-built_in">Render</span>(RHICmdList);<br>                            (......)<br>                        &#125;<br>                        <span class="hljs-built_in">FlushPendingDeleteRHIResources_RenderThread</span>();<br>                    &#125;);<br>                &#125;<br>&#125;&#125;&#125;&#125;<br></code></pre></td></tr></table></figure><p>下面的一系列截图是从Tick函数开始到渲染线程的整个调用过程：</p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%201.png" alt="Untitled"></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%202.png" alt="Untitled"></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%203.png" alt="Untitled"></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%204.png" alt="Untitled"></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%205.png" alt="Untitled"></p><p><code>FSceneRenderer</code>是UE场景渲染器父类，是UE渲染体系的大脑和发动机，在整个渲染体系拥有举足轻重的位置，主要用于处理和渲染场景，生成RHI层的渲染指令。</p><p><code>FSceneRenderer</code>由游戏线程的<code>FRendererModule::BeginRenderingViewFamily</code>负责创建和初始化，然后传递给渲染线程。</p><p>渲染线程会调用<code>FSceneRenderer::Render()</code>，渲染完返回后，会删除<code>FSceneRenderer</code>的实例。也就是说，<code>SceneRenderer</code>会被每帧创建和销毁。</p><h2 id="渲染线程"><a class="markdownIt-Anchor" href="#渲染线程"></a> <strong>渲染线程</strong></h2><p>渲染线程与游戏不同，是一条专门用于生成渲染指令和渲染逻辑的独立线程。游戏线程的对象通常做逻辑更新，在内存中有一份持久的数据，为了避免游戏线程和渲染线程产生竞争条件，会<strong>在渲染线程额外存储一份内存拷贝，并且使用的是另外的类型：</strong></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%206.png" alt="Untitled"></p><p><strong>FScene</strong>是UWorld在渲染模块的代表，存在于<code>FSceneRenderer</code>中，只有加入到FScene的物体才会被渲染器感知到。渲染线程拥有FScene的所有状态（游戏线程不可直接修改）。</p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%207.png" alt="Untitled"></p><p><code>FSceneRenderer</code>拥有两个子类：<code>FMobileSceneRenderer</code>和<code>FDeferredShadingSceneRenderer</code>。</p><p><code>FDeferredShadingSceneRenderer</code>虽然名字叫做延迟着色场景渲染器，但其实集成了包含前向渲染和延迟渲染的两种渲染路径，是PC和主机平台的默认场景渲染器。在渲染线程中会着重讨论<code>FDeferredShadingSceneRenderer</code>。</p><p>细分<code>FDeferredShadingSceneRenderer::Render</code>的逻辑，则可以划分成以下主要阶段（在源码中可找到对应的函数）：</p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%208.png" alt="Untitled"></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%209.png" alt="Untitled"></p><h3 id="updateallprimitivesceneinfos"><a class="markdownIt-Anchor" href="#updateallprimitivesceneinfos"></a> UpdateAllPrimitiveSceneInfos</h3><p><code>FScene::UpdateAllPrimitiveSceneInfos</code>的主要作用是删除、增加、更新CPU侧的图元数据，包含变换矩阵、自定义数据、距离场数据等，并同步到GPU端。</p><h3 id="initviews"><a class="markdownIt-Anchor" href="#initviews"></a> <strong><strong>InitViews</strong></strong></h3><p>这是渲染管线的开始，这步是为渲染管线准备绘制当前帧所需要的各种资源。</p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%2010.png" alt="Untitled"></p><ul><li><strong><code>PreVisibilityFrameSetup</code></strong>：可见性判定预处理阶段，主要是初始化和设置静态网格、Groom、SkinCache、特效、TAA、ViewState等等。</li><li>初始化特效系统（<code>FXSystem</code>）。</li><li><strong><code>ComputeViewVisibility</code></strong>：计算视图相关的可见性，执行视锥体裁剪、遮挡剔除，收集动态网格信息，创建光源信息等。<ul><li>FPrimitiveSceneInfo::UpdateStaticMeshes：更新静态网格数据。</li><li>ViewState::GetPrecomputedVisibilityData：获取预计算的可见性数据。</li><li>FrustumCull：视锥体裁剪。</li><li><strong>ComputeAndMarkRelevanceForViewParallel</strong>：计算和标记视图并行处理的关联数据。</li><li><strong>GatherDynamicMeshElements</strong>：收集view的动态可见元素。</li><li><strong>SetupMeshPass</strong>：设置网格Pass的数据，将FMeshBatch转换成FMeshDrawCommand。</li></ul></li><li><code>UpdateSkyIrradianceGpuBuffer</code>：更新天空体环境光照的GPU数据。</li><li><code>InitSkyAtmosphereForViews</code>：初始化大气效果。</li><li><strong><code>PostVisibilityFrameSetup</code></strong>：可见性判定后处理阶段，利用view的视锥裁剪光源，处理贴花排序，调整之前帧的RT和雾效、光束等。</li><li><code>View.InitRHIResources</code>：初始化视图的部分RHI资源。</li><li><code>OnStartRender</code>：通知RHI已经开启了渲染，以初始化视图相关的数据和资源。</li></ul><h3 id="renderprepass"><a class="markdownIt-Anchor" href="#renderprepass"></a> RenderPrePass</h3><p>提前深度pass，只写入非透明物体的深度。</p><p><a href="https://zhuanlan.zhihu.com/p/81011375">虚幻4渲染编程(Shader篇)【第十四卷：PreZ And EarlyZ In UE4】 - 知乎 (zhihu.com)</a></p><h3 id="basepass"><a class="markdownIt-Anchor" href="#basepass"></a> <strong><strong>BasePass</strong></strong></h3><p><strong>延迟渲染里的几何通道</strong>，用来渲染不透明物体的几何信息，包含<strong>法线、深度、颜色、AO、粗糙度、金属度</strong>等等，这些几何信息会写入若干张GBuffer中。</p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%2011.png" alt="Untitled"></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%2012.png" alt="Untitled"></p><p><img src="/2023/03/08/UE-%E6%B8%B2%E6%9F%93%E4%BD%93%E7%B3%BB%E6%B5%85%E6%9E%90/Untitled%2013.png" alt="Untitled"></p><p><code>FParallelMeshDrawCommandPass::DispatchDraw</code>这个部分应该是当渲染命令设置完成后就执行<code>RenderBasePassInternal</code>函数中的<code>SetupBasePassState</code>所设置的着色器，再往下需要更多的研究才能看懂。</p><hr><p>（待更新）</p><h3 id="lightingpass"><a class="markdownIt-Anchor" href="#lightingpass"></a> <strong><strong>LightingPass</strong></strong></h3><p>UE的LightingPass就是前面章节所说的光照通道。此阶段会计算开启阴影的光源的阴影图，也会计算每个灯光对屏幕空间像素的贡献量，并累计到Scene Color中。此外，还会计算光源也对translucency lighting volumes的贡献量。</p><p>Lighting Pass的负责的渲染逻辑多而杂，包含间接阴影、间接AO、透明体积光照、光源计算、LPV、天空光、SSS等等，但光照计算的核心逻辑在<code>RenderLights</code></p><h3 id="translucency"><a class="markdownIt-Anchor" href="#translucency"></a> <strong>Translucency</strong></h3><p>Translucency是渲染半透明物体的阶段，所有半透明物体在视图空间由远到近逐个绘制到离屏渲染纹理（separate translucent render target）中，接着用单独的pass以正确计算和混合光照结果。</p><h3 id="postprocessing"><a class="markdownIt-Anchor" href="#postprocessing"></a> <strong>PostProcessing</strong></h3><p>后处理阶段，也是<code>FDeferredShadingSceneRenderer::Render</code>的最后一个阶段。包含了不需要GBuffer的Bloom、色调映射、Gamma校正等以及需要GBuffer的SSR、SSAO、SSGI等。此阶段会将半透明的渲染纹理混合到最终的场景颜色中。</p><h2 id="rhi线程render-hardware-interface"><a class="markdownIt-Anchor" href="#rhi线程render-hardware-interface"></a> <strong>RHI线程（Render Hardware Interface）</strong></h2><p><strong>RHI</strong>全称是<strong>Render Hardware Interface（渲染硬件接口）</strong>，是UE渲染体系中非常基础且重要的模块，封装了众多图形API（DirectX、OpenGL、Vulkan、Metal）之间的差异，对Game和Renderer模块提供了简便且一致的概念、数据、资源和接口，实现一份渲染代码跑在多个平台的目标。</p><p>RHI线程的工作是转换渲染指令到指定图形API，创建、上传渲染资源到GPU。<code>FRenderResource</code>是渲染线程的渲染资源代表，由渲染线程管理和传递，介于游戏线程和RHI线程的中间数据。</p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://www.cnblogs.com/timlly/p/14327537.html#25-ue%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%B8%B2%E6%9F%93">剖析虚幻渲染体系（02）- 多线程渲染 - 0向往0 - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/timlly/p/14732412.html">剖析虚幻渲染体系（04）- 延迟渲染管线 - 0向往0 - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/timlly/p/15156626.html">剖析虚幻渲染体系（10）- RHI - 0向往0 - 博客园 (cnblogs.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/484960867">虚幻引擎UE渲染框架 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/36630694?utm_campaign=shareopn&amp;utm_medium=social&amp;utm_oi=913827360451735552&amp;utm_psn=1614073247485652992&amp;utm_source=wechat_session">虚幻4渲染编程（Shader篇）【第一卷：虚幻自身的延迟渲染管线】 - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>Unreal</category>
      
      <category>渲染体系</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unreal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-08工业界的实时渲染</title>
    <link href="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/"/>
    <url>/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/</url>
    
    <content type="html"><![CDATA[<h1 id="temporal-anti-aliasingtaa"><a class="markdownIt-Anchor" href="#temporal-anti-aliasingtaa"></a> Temporal Anti-Aliasing（TAA）</h1><p>最早temporal的思路是用来解决Anti-Aliasing的，先有TAA的巨大成功才会有RTRT里的应用。</p><blockquote><p>参考：<a href="https://zhuanlan.zhihu.com/p/20786650">Temporal Anti-Aliasing - 知乎 (zhihu.com)</a></p></blockquote><h2 id="为什么出现走样"><a class="markdownIt-Anchor" href="#为什么出现走样"></a> 为什么出现走样？</h2><p>回顾101学习的关于采样的过程：</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled.png" alt="https://www.researchgate.net/figure/The-evolution-of-sampling-theorem-a-The-time-domain-of-the-band-limited-signal-and-b_fig5_301556095"></p><p>（a）是时域上的某个信号，到了频域上（b）是一个连续的频谱（Tips：频谱是左右对称的，即使不存在负的频率）</p><p>（c）是冲激函数，只在特定时域上有值，反映到频域上是（d）</p><p>（e）是冲激函数对（a）进行采样（也就是二者相乘），得到离散的点，反映到频域上是（f）</p><p><strong>采样就等价于把信号在频域上以采样信号的周期进行延拓</strong>。</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%201.png" alt></p><p><strong>走样原理</strong>：之所以会出现走样现象是因为采样比较稀疏，也就是采样点之间的间隔比较大，就意味着频谱之间的间隔小，那么延拓之后会产生频谱重叠的现象从而发生走样。</p><p>下面是相关参考资料：</p><blockquote><p>关于采样的通俗理解：<a href="https://www.zhihu.com/question/431920644/answer/1597049082">https://www.zhihu.com/question/431920644/answer/1597049082</a></p></blockquote><blockquote><p>关于傅里叶变换的通俗理解：<a href="https://zhuanlan.zhihu.com/p/19763358">https://zhuanlan.zhihu.com/p/19763358</a></p></blockquote><blockquote><p><strong>采样 == 重复的搬移频谱：</strong><a href="https://blog.csdn.net/qq_38972634/article/details/119832068">https://blog.csdn.net/qq_38972634/article/details/119832068</a></p></blockquote><h2 id="taa反走样"><a class="markdownIt-Anchor" href="#taa反走样"></a> TAA反走样</h2><p>对于走样的终极解决方案就是：用更多的样本。常用的反走样方法有：SSAA、MSAA、TAA。</p><p>TAA的思路也是需要用更多的sample，只不过是当前帧会复用上一帧的sample，使得这一帧仍然用1SPP，但是无形中通过时间上的复用，增加了SPP（sample per pixel），其思路与RTRT中如何运用temporal的思路完全相同。</p><p>Temporal AA尝试用在避免性能损失的情况近似Super Sampling AA的结果。它的做法一句话总结就是，把样本分布到过去的N帧中去，然后每一帧从过去的N帧中取得样本信息然后Filter，达到N倍Super Sampling的效果，如下图：</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%202.png" alt="Temporal Anti-Aliasing - 知乎 (zhihu.com)"></p><h3 id="静止场景"><a class="markdownIt-Anchor" href="#静止场景"></a> <strong>静止场景</strong></h3><p>通过TAA提供的一个叫Jittered sampling的方法去复用上一帧的sample，认为连续的四帧之间有一个移动的pattern，它们在时间上各不相同，样本就这样随时间从左上，左下，右上，右下交替采样。</p><p>由于在时间上复用，到了frame3的时候，采样的是右下角的点，其实它已经复用了前面4帧的4个点（frame-1，frame0，frame1，frame2），那么到了当前帧继续复用，于是就把temporal的这些样本都考虑进去了，由于场景静止，该操作相当于把之前各自样本的结果在一起做了一个加权平均，这样就等价于在当前帧中做了一个2*2的upsampling：</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%203.png" alt></p><p>之所以不随机采样点是因为<strong>随机的效果不一定好</strong>。在temporal中可能会引入额外的高频的信息，因此使用规定好的样本点，如上图每四帧一个，这样固定样本点位置避免了分布不均匀的情况。</p><h3 id="运动场景"><a class="markdownIt-Anchor" href="#运动场景"></a> 运动场景</h3><p>原本在静止情况下我们是在一个像素里找sample的结果并复用上一帧中的样本点的结果，在运动场景中，当前帧几何的位置通过motion vector找到上一帧中对应的位置，并复用其结果，如果temporal的信息不太可信时，使用clamping方法，也就是把上一帧的结果拉到接近当前帧的结果。</p><h2 id="拓展对比-msaa-与-ssaa"><a class="markdownIt-Anchor" href="#拓展对比-msaa-与-ssaa"></a> 拓展：对比 MSAA 与 SSAA</h2><h3 id="ssaa"><a class="markdownIt-Anchor" href="#ssaa"></a> SSAA</h3><p>SSAA可以看作是将一个场景按照几倍的分辨率先渲染后再降采样，把几个像素的结果平均起来，思路是完全正确的，但开销较大，因此帧率会严格按照倍数下降。</p><h3 id="msaa"><a class="markdownIt-Anchor" href="#msaa"></a> MSAA</h3><p>MSAA则是在SSAA的基础上做了一个近似从而使得其效率提升开销没那么大。</p><p><strong>核心思想：MSAA同样对于每个像素进行了4次子采样（Sample），但是只在像素中心位置运行一次像素着色。</strong></p><p><strong>尤其注意：“只在像素中心位置运行一次像素着色”指的是对于同一个primitive（几何体），如果一个像素感知到多个primitive，就进行多次像素着色，原因在于子采样点的深度会随着多个不同的primitive而改变，最终呈现出来的像素颜色是最后一个primitive进行的着色。</strong></p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%204.png" alt></p><p>为了实现这样的操作，MSAA内部会对每个像素维护一张表，记录每个子采样点的<strong>颜色值和深度值。</strong></p><p>上图为例，在前向渲染中，三角形的绘制是依次进行的。绘制粉色三角形时，MSAA的具体执行步骤如下：</p><ol><li>光栅化阶段，对四个位置的Sample执行三角形覆盖判断，并把深度写入表中。</li><li>像素着色阶段，在像素中心圆点处执行像素着色器。该点的位置、深度、法线、纹理坐标等信息由三角形三个顶点重心插值得到。</li><li>对四个Sample执行模板测试与深度测试，并将测试通过的Sample数据写入四倍分辨率的模板缓冲与深度缓冲。每个Sample都拥有自己的深度值，依然是重心插值得到。</li><li>上图中0、3、2号Sample通过了深度测试，将粉色复制到这3个Sample对应的颜色缓冲中剩下的1个Sample暂为背景色。</li><li>上述的子采样点操作结束后，对最终像素颜色进行变更，位置是该像素中心点，求四个Sample的颜色的均值（或者插值）作为最终像素颜色。</li><li>重复上述流程绘制第二个蓝色三角形，将像素着色获得的蓝色复制到1号Sample中。</li><li>上述的子采样点操作结束后，继续对最终像素颜色进行变更，位置依旧是该像素中心点，求四个Sample的颜色的均值（或者插值）作为最终像素颜色。</li></ol><p>可以看到在MSAA流程中所使用的所有缓冲区都变成了原来的四倍大小，这也是为什么MSAA增加了非常多的显存和带宽消耗。</p><p>由此可见，上图一个像素有四个sample，感知到两个primitive，只做两次shading：</p><ul><li>第一次，粉色三角形覆盖到了0，3，2号样本点，更新缓冲区，在像素中心做shading。</li><li>第二次，蓝色三角形覆盖到了1号样本点，更新缓冲区，在像素中心做shading。</li></ul><p>另外，MSAA还允许进行空间上的sample reuse：</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%205.png" alt="https://www.sapphirenation.net/"></p><p>如图，在1和2两个像素内，在两个像素的连接处有两个采样点，这两个采样点既可以贡献给像素1也可以贡献给像素2，因此实际上等于通过reuse在6个采样点的情况下得到了8个采样点的结果，减少了采样点的数量，提升了效率。</p><h2 id="拓展基于图像的反走样"><a class="markdownIt-Anchor" href="#拓展基于图像的反走样"></a> 拓展：基于图像的反走样</h2><h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>基于图像的反走样（image based anti-aliasing solution）的思路是先渲染出有锯齿的图，然后通过图像处理的方法将锯齿给提取出来并替换成没有锯齿的图。目前最流行的方法叫</p><p>基于图像的反走样的方法从FXAA发展而来：FXAA → MLAA → SMAA</p><h3 id="算法介绍"><a class="markdownIt-Anchor" href="#算法介绍"></a> 算法介绍</h3><p><strong>FXAA</strong></p><p>FXAA（Fast Approximate Anti-Aliasing）：<strong>快速近似抗锯齿</strong>，是一种典型的边缘检查取样操作，通过提取像素界面周围的颜色信息并完成混合来消除高对比度界面所产生的锯齿。因此FXAA算法的核心思路就两点：</p><ol><li><strong>边缘判定算法</strong></li><li><strong>边缘像素的混合因子计算</strong></li></ol><p>具体学习：<a href="https://zhuanlan.zhihu.com/p/373379681">FXAA算法演义 - 知乎 (zhihu.com)</a></p><p><strong>MLAA</strong></p><p>MLAA (Morphological Anti-Aliasing) ：形态抗锯齿，是对FXAA的改进（应该是增加了矢量化的方法）。</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%206.png" alt></p><p>MLAA处理的流程：</p><ol><li>边缘检测， 得到每个像素的边缘，也就是锯齿边界；</li><li>沿着锯齿边界，向两侧搜索锯齿边界的终点，也就是锯齿边界结束的位置；</li><li>根据两侧锯齿边界结束的位置，将像素矢量化，作出一条蓝色的线，作为重矢量化线；</li><li>算出重矢量化线覆盖像素的面积，作为像素间的混合系数；</li><li>根据混合系数对像素进行混合。</li></ol><p>具体学习：<a href="https://zhuanlan.zhihu.com/p/342211163">主流抗锯齿方案详解（四）SMAA - 知乎 (zhihu.com)</a></p><p><strong>SMAA</strong></p><p>SMAA（Enhanced subpixel morphological Anti-Aliasing）：增强的亚像素形态抗锯齿 ，是对MLAA的改进，进行了更准确的边界判断等优化，并且结合了MLAA与超采样的策略（MSAA、SSAA）。·</p><p>具体学习：<a href="https://zhuanlan.zhihu.com/p/342211163">主流抗锯齿方案详解（四）SMAA - 知乎 (zhihu.com)</a></p><h2 id="拓展关于g-buffer"><a class="markdownIt-Anchor" href="#拓展关于g-buffer"></a> 拓展：关于G－Buffer</h2><p><strong>G-Buffer的底层结构</strong></p><p>G-Buffer，全称Geometric Buffer ，译作几何缓冲区，本质就算一个帧缓冲对象。它主要用于存储每个像素对应的<strong>位置（Position），法线（Normal），漫反射颜色（Diffuse Color）以及其他有用材质参数</strong>。根据这些信息，就可以在像空间（二维空间）中对每个像素进行光照处理。</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%207.png" alt></p><p>要注意一点：<strong>G-buffers是绝对不能做反走样的</strong>！因为这是有意义的数值，如果进行混合，数值就失去了原本的意义，无法对混合后的数值进行解释。</p><h1 id="时域超分辨率-temporal-super-resolution"><a class="markdownIt-Anchor" href="#时域超分辨率-temporal-super-resolution"></a> 时域超分辨率 Temporal Super Resolution</h1><p>超分辨率：Super resolution (or super sampling) 就是把低分辨率变成高分辨率。DLSS就是这么一种技术，将一张低分辨率的图输入最后得到一张高分辨率的输出。</p><h2 id="dlss"><a class="markdownIt-Anchor" href="#dlss"></a> DLSS</h2><p>DLSS（Deep Learning Super Sampling）：深度学习超采样。</p><h3 id="dlss-10"><a class="markdownIt-Anchor" href="#dlss-10"></a> DLSS 1.0</h3><p><strong>思路</strong></p><p>通过数据驱动的方法来做，针对于每个游戏或者场景单独训练出一个神经网络，去学习一些常见的物体边缘，从而在低分辨率拉成高分辨率之后将模糊的边缘换成不模糊的边缘。</p><p><strong>特点</strong></p><p>只在当前帧中进行，不依靠temporal的累积，等于没有任何的额外信息来源。但我们将低分辨率硬拉成高分辨率，如果不想让最后的结果模糊，必须需要一些额外的信息，DLSS1.0是<strong>通过猜测</strong>来提供额外信息的。</p><h3 id="dlss-20"><a class="markdownIt-Anchor" href="#dlss-20"></a> DLSS 2.0</h3><p><strong>思路</strong></p><p>DLSS 2.0则摒弃了通过神经网络猜测的结果，而是更希望去利用temporal的信息，因此其核心思路在于TAA，更多的去结合上一帧的信息运用到当前帧中，仍然是temporal reuse。对于静止场景中，连续四帧我们使用不同的感知sample点，当前帧使用上一帧的信息就等于是变相的提升了分辨率。</p><p><strong>存在的问题</strong></p><ul><li><p>如果有temporal failure时，不能使用clamping的方法来解决。原因在于：</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%208.png" alt></p><ul><li>最终要的是一个增大了分辨率的图，分辨率提高也就是像素点增多，那么我们需要知道新增加的小的pixel的像素值是多少。如果此时我们用上一帧的结果盲目的clamping势必会因为一些小的像素的值是根据周围的点的颜色猜测出来的，而且猜测的值很像周围的点，也就是得到了一个高分辨率的图但是很模糊。</li><li>总结来说由于DLSS真正的提升了分辨率，因此我们要求新产生的像素的值是要与之前有本质的不同的，否则就会得到一个糊掉的结果。</li></ul></li></ul><p><strong>解决</strong></p><p>因此我们需要一个比clamping更好的复用temporal信息的方案。</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%209.png" alt></p><p>左边中的蓝色代表上一帧，绿色代表当前帧。</p><p>绿点是当前帧给了一个采样信号得到的值，在上一帧也就是蓝色曲线中我们可以从另一个信号采样出来值，最后我们要把二者综合在一起得出一个当前帧增加了采样点后的值。DLSS2.0中的神经网络没有输出任何混合后的颜色，而是去告诉你应该怎么将上一帧找到的信息和当前帧结合在一起。</p><p><strong>效果</strong></p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%2010.png" alt></p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%2011.png" alt></p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%2012.png" alt></p><p><strong>工业方面</strong></p><p>如果DLSS每一帧需要消耗30ms，那DLSS就太慢了，因此训练出这个网络之后去提升inference性能，针对Nvidia的硬件进行优化，但具体如何做的就是Nvidia内部的事情了。</p><p><strong>其他公司的“DLSS”算法</strong></p><ul><li>By AMD：FidelityFX Super Resolution</li><li>By Facebook：Neural Supersampling for Real-time Rendering [Xiao et al.]</li></ul><h1 id="延迟渲染-deferred-shading"><a class="markdownIt-Anchor" href="#延迟渲染-deferred-shading"></a> 延迟渲染 Deferred Shading</h1><h2 id="为何出现延迟渲染why"><a class="markdownIt-Anchor" href="#为何出现延迟渲染why"></a> 为何出现延迟渲染？Why</h2><p><strong>目标</strong></p><p>Deferred Shading是一个节省shading时间的方法，是为了让shading变得更高效更快。</p><p><strong>传统光栅化过程</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>r</mi><mi>i</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>l</mi><mi>e</mi><mi>s</mi><mo>→</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>g</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi><mo>→</mo><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>h</mi><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mo>→</mo><mi>s</mi><mi>h</mi><mi>a</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>→</mo><mi>p</mi><mi>i</mi><mi>x</mi><mi>e</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">Triangles → fragments → depth test → shading → pixel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord mathdefault">p</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">h</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">i</span><span class="mord mathdefault">x</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span></span></p><p>这可能会出现每一个fragment都需要shading的情况，比如需要从远处到近处渲染时，需要将每一个fragment都进行shading，因为每个fragment都会通过深度测试，但最后呈现到图像上只有最后一个fragment的着色结果。</p><p>此时的复杂度为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>g</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>∗</mo><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(fragment * light)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span> ，因为每一个fragment针对每一个light都要计算着色。</p><p><strong>关键</strong></p><p>很多fragment在渲染过程中会通过depth test，但最终可能会因为被后续的fragment所覆盖而不会被看到，因此这些在中间过程中被shading的fragment浪费了很多的资源。</p><p><strong>解决思路</strong></p><p>只去渲染可见的fragment，这就是延迟渲染出现的原因。</p><h2 id="什么是延迟渲染what"><a class="markdownIt-Anchor" href="#什么是延迟渲染what"></a> 什么是延迟渲染？What</h2><p>延迟渲染( Deferred Rendering) ，即延迟着色（Deferred Shading），是将着色计算延迟到深度测试之后进行处理的一种渲染方法。</p><p>可以将延迟渲染( Deferred Rendering) 理解为先将所有物体都先绘制到 <strong>屏幕空间的缓冲（即G-buffer，Geometric Buffer，几何缓冲区）</strong> 中，再逐光源对该缓冲进行着色的过程，从而避免了因计算被深度测试丢弃的片元的着色而产生的不必要的开销。也就是说延迟渲染基本思想是，先执行深度测试，再进行着色计算，将本来在物空 间（三维空间）进行光照计算放到了像空间（二维空间）进行处理。</p><p>其本质是通过将几何通道与光照通道分离，能够以比标准多通道前向渲染器更低的成本渲染更多的灯光。</p><h2 id="如何进行延迟渲染how"><a class="markdownIt-Anchor" href="#如何进行延迟渲染how"></a> 如何进行延迟渲染？How</h2><p>可以将延迟渲染理解为两个Pass的过程：</p><ul><li>Pass1（几何通道的光栅化，Geometry Pass）：在第一次光栅化中得到fragment之后我们不做shading，所有的fragment只对深度缓存（depth buffer）做一个更新。在更新深度缓存的同时获取最前深度对象的各种几何信息，并存储到多个G-buffer中（要开启MRT，一次性将不同数据存储到不同的缓冲区）；</li><li>Pass2（光照通道的光栅化，Light Pass）：由于在Pass1中我们已经写好了depth buffer并且知道了最前深度，因此在pass2中只有深度等于最浅深度的fragment才可以通过depth test并进行shading，从而实现了只对visible fragment着色。光照计算的过程还是和正向渲染一样，只是现在我们需要从对应的G-buffer而不是顶点着色器(和一些uniform变量)那里获取输入变量了。</li></ul><p><strong>隐含的信息</strong>：光栅化场景的开销小于对所有fragment着色的开销。</p><h3 id="前向渲染-vs-延迟渲染"><a class="markdownIt-Anchor" href="#前向渲染-vs-延迟渲染"></a> <strong>前向渲染 vs 延迟渲染</strong></h3><p><strong>前向渲染</strong>（对于每一个需要渲染的物体，都要逐光源渲染，每个光源都会带来一定的渲染成本）</p><ul><li>正向渲染（Forward Rendering），先执行着色计算，再执行深度测试。</li><li>正向渲染渲染g个物体，物体着色的片元数量为f，在l个光源下的着色，复杂度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo>⋅</mo><mi>f</mi><mo>⋅</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(g\cdot f\cdot l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span>。</li><li>Forward Rendering，光源数量对计算复杂度影响巨大，所以比较适合户外这种光源较少的场景。</li></ul><p><strong>延迟渲染</strong>（将计算量非常大的渲染(如光照)延时到后期进行处理）</p><ul><li>延迟渲染( Deferred Rendering)，先执行深度测试，再执行着色计算。</li><li>由于最耗时的光照计算延迟到后处理阶段，所以跟场景的物体数量解耦，只跟Render Targe尺寸相关，复杂度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mrow><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>×</mo><mi>W</mi><mi>i</mi><mi>d</mi><mi>t</mi><msub><mi>h</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo>×</mo><mi>H</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N_{light} \times Width_{RT} \times Height_{RT})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li><li>Deferred Rendering 的最大的优势就是将光源的数目和场景中物体的数目在复杂度层面上完全分开。也就是说场景中不管是一个三角形还是一百万个三角形，最后的着色复杂度不会随光源数目变化而产生巨大变化。</li></ul><table><thead><tr><th></th><th>前向渲染</th><th>延迟渲染</th></tr></thead><tbody><tr><td>场景复杂度</td><td>简单</td><td>复杂</td></tr><tr><td>光源支持数量</td><td>少</td><td>多</td></tr><tr><td>时间复杂度</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>g</mi><mo>⋅</mo><mi>f</mi><mo>⋅</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(g\cdot f\cdot l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mrow><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>×</mo><mi>W</mi><mi>i</mi><mi>d</mi><mi>t</mi><msub><mi>h</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo>×</mo><mi>H</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N_{light} \times Width_{RT} \times Height_{RT})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>抗锯齿</td><td>MSAA, FXAA, SMAA</td><td>TAA, SMAA</td></tr><tr><td>显存和带宽</td><td>较低</td><td>较高</td></tr><tr><td>Pass数量</td><td>少</td><td>多</td></tr><tr><td>MRT</td><td>无要求</td><td>要求</td></tr><tr><td>过绘制</td><td>严重</td><td>良好避免</td></tr><tr><td>材质类型</td><td>多</td><td>少</td></tr><tr><td>画质</td><td>清晰，抗锯齿效果好</td><td>模糊，抗锯齿效果打折扣</td></tr><tr><td>透明物体</td><td>不透明物体、Masked物体、半透明物体</td><td>不透明物体、Masked物体，不支持半透明物体</td></tr><tr><td>屏幕分辨率</td><td>低</td><td>高</td></tr><tr><td>硬件要求</td><td>低，几乎覆盖100%的硬件设备</td><td>较高，需MRT的支持，需要Shader Model 3.0+</td></tr><tr><td>实现复杂度</td><td>低</td><td>高</td></tr><tr><td>后处理</td><td>无法支持需要法线和深度等信息的后处理</td><td>支持需要法线和深度等信息的后处理，如SSAO、SSR、SSGI等</td></tr></tbody></table><h3 id="延迟渲染的缺点"><a class="markdownIt-Anchor" href="#延迟渲染的缺点"></a> 延迟渲染的缺点</h3><ul><li>内存开销较大，需要缓存的信息（G-buffer）很多</li><li>读写G-buffer的内存带宽用量是性能瓶颈</li><li>对透明物体：所有半透明的物体都需要等待不透明物体以延迟渲染完成之后，在用前向渲染的方式渲染半透明物体。</li><li>延迟渲染不可以使用MSAA<ul><li>MSAA本质上是一种发生在光栅化阶段的技术，也就是几何阶段后，着色阶段前，用这个技术需要用到场景中的几何信息（交界处的几何体的深度值）</li><li>延迟渲染因为需要节省光照计算的原因，事先把所有信息都放在了G-buffer上，着色计算的时候已经丢失了几何信息</li><li>解决方法：可以通过TAA或者是imaged based AA来解决；或者参考如何在延迟渲染中进行MSAA（<a href="https://diglib.eg.org/bitstream/handle/10.2312/egs20201008/021-024.pdf?sequence=1&amp;isAllowed=y">《Multisample anti-aliasing in deferred rendering》</a>），它的核心思想在于Geometry Pass除了存储标准的GBuffer，还额外增加了GBuffer对应的扩展数据，这些扩展数据仅仅包含了需要多采样像素的MSAA数据，以供Lighting Pass着色时使用。这样既能满足MSAA的要求，又可以降低GBuffer的占用。</li></ul></li></ul><p>到此，对fragment已经优化了很多，而为了更优方法，就将目光放在了light身上，从而引出Tiled Shading。</p><h2 id="tile-based-deferred-renderingtbdr"><a class="markdownIt-Anchor" href="#tile-based-deferred-renderingtbdr"></a> Tile-Based Deferred Rendering（TBDR）</h2><p>TBDR是建立在Deferred Shading的基础之上，将屏幕分成若干个小块，比如一个小块是32 * 32，然后对每个小块单独的做shading。</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%2013.png" alt></p><p>上图是从camera（下方）看向屏幕（上方）的俯视平面图，将屏幕分成了若干个小块，圆代表的是光源的范围，每个圆代表一个光源。上图中的数字代表该区域内会感知到的光源数量。</p><p><strong>核心思想</strong>：节省每个小块要考虑的light数量，每个切出来的小块代表场景中3D的区域，并不是所有的光源都会跟这片区域相交。</p><p>在做light sampling时知道光照强度会随着距离的平方衰减，因此面光源或点光源的覆盖范围是很小的，因此可以设定一个范围，把光源的覆盖范围看做一个球形。在渲染时，只需要找该区域能够感知到的光源即可，不需要考虑所有的光源。</p><p><strong>复杂度</strong>：从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mrow><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>×</mo><mi>W</mi><mi>i</mi><mi>d</mi><mi>t</mi><msub><mi>h</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo>×</mo><mi>H</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N_{light} \times Width_{RT} \times Height_{RT})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>提升到了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mrow><mi>a</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo>−</mo><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>−</mo><mi>p</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>t</mi><mi>i</mi><mi>l</mi><mi>e</mi></mrow></msub><mo>×</mo><mi>W</mi><mi>i</mi><mi>d</mi><mi>t</mi><msub><mi>h</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo>×</mo><mi>H</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N_{average-light-per-tile} \times Width_{RT} \times Height_{RT})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，即光源数量从总光源数降低为每小块区域的平均光源数量。</p><p>但在此之后，又有人对其进行了一个复杂的优化。</p><h2 id="clustered-deferred-rendering"><a class="markdownIt-Anchor" href="#clustered-deferred-rendering"></a> <strong><strong>Clustered Deferred Rendering</strong></strong></h2><p>在刚才的基础上，不仅将其分成若干个小块，还要在深度对其进行切片，也就是将整个3D空间拆分成了若干个网格。</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%2014.png" alt></p><p><strong>核心思想</strong>：如果只分成若干个小块区域的话，区域内的深度可能会十分大，因此光源可能会对这个小块区域有贡献，但不一定会对根据深度细分后的网格有贡献。所以再划分过后我们可以发现每个网格内的光源数量更少了。</p><p><strong>复杂度</strong>：从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mrow><mi>a</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo>−</mo><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>−</mo><mi>p</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>t</mi><mi>i</mi><mi>l</mi><mi>e</mi></mrow></msub><mo>×</mo><mi>W</mi><mi>i</mi><mi>d</mi><mi>t</mi><msub><mi>h</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo>×</mo><mi>H</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N_{average-light-per-tile} \times Width_{RT} \times Height_{RT})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>提升到了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msub><mi>N</mi><mrow><mi>a</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>a</mi><mi>g</mi><mi>e</mi><mo>−</mo><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo>−</mo><mi>p</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>u</mi><mi>s</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>×</mo><mi>W</mi><mi>i</mi><mi>d</mi><mi>t</mi><msub><mi>h</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo>×</mo><mi>H</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msub><mi>t</mi><mrow><mi>R</mi><mi>T</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N_{average-light-per-cluster} \times Width_{RT} \times Height_{RT})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">e</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault">e</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>以上两种改进的共同点：<strong>避免没有意义的shading从而提高效率</strong>。</p><h1 id="层次细节-level-of-detail-solutions"><a class="markdownIt-Anchor" href="#层次细节-level-of-detail-solutions"></a> 层次细节 Level of Detail Solutions</h1><p>LOD的核心思路：生成不同的level，在任何计算过程中能够快速准确的找出一个正确的level去进行各种运算。在工业界中运用LOD方法或者在不同情况下选用不同层级的思路称之为”<strong>Cascaded方法</strong>“。</p><p>例如texture的mip-map就是一个LOD，在high level时detail少一点，但可以很快的计算出一个区域的平均。</p><h3 id="cascaded-shadow-maps"><a class="markdownIt-Anchor" href="#cascaded-shadow-maps"></a> Cascaded shadow maps</h3><p>当shadow map上的一个texel离camera越近，其在屏幕中所覆盖的内容越多，反之离camera越远，其所覆盖的内容越少，因此我们可以知道从camera出发看向场景，离camera远的我们可以用粗糙的shadow map。</p><p>但我们是无法拥有一个会变化的shadow map的，因此在实际操作过程中，通常会生成两种或以上不同分辨率的shadow map进行使用的，如图，红色区域是一个高分辨率的shadow map，蓝色区域是覆盖范围更大但分辨率相同也就是更粗糙的shadow map。</p><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%2015.png" alt></p><p>从而根据物体在场景的位置来选用shadow map，远点的就用粗糙的，近处的就用精细的。但是从图中可以看到会有重叠区域内，因为在突然切换层级时会有一个突变的artifact，为了有一个平滑的过渡，在这个区域内，根据离摄像机的距离把两种shadow map进行blend。</p><h3 id="cascaded-lpv"><a class="markdownIt-Anchor" href="#cascaded-lpv"></a> Cascaded LPV</h3><p><img src="/2023/01/25/Games202%E5%B7%A5%E4%B8%9A%E7%95%8C%E7%9A%84%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93/Untitled%2016.png" alt></p><p>同样的，先在细小的格子上，之后随着距离的增加到大一点的格子，再远就更大，从而省去了很多的计算量。</p><h3 id="geometric-lod"><a class="markdownIt-Anchor" href="#geometric-lod"></a> Geometric LOD</h3><p>如果有一个精细的有许多三角形的模型（高模），我们可以将其减化，减少其三角形使其变成一个低模，我们可以生成一系列的低模。</p><ul><li>可以根据物体离camera的距离，来选择放什么层级的模型进去（高模还是低模）；</li><li>并且一个物体的不同部分也可以做不同的LOD，只需要提供一个标准，比如说这个标准是保证任何时候三角形都不会超过一个像素的大小。</li></ul><p>这样可以保证一个模型可以根据camera在哪，从而动态的告诉渲染管线需要渲染什么层级的模型或者部分。</p><p><strong>问题</strong>：如果camera推进，在推进过程中由于是突变的，会出现突然变化几何的现象，也就是popping artifacts，但TAA可以很好的解决这个现象。</p><p>而在UE5中的Nanite技术，本质就是一个复杂的LOD，它所作的就是将LOD存在的问题（不同LOD如何正确连接而不出现缝隙、高模与低模如何进行调度、物体的几何表示用三角形网格还是几何纹理、裁剪与剔除）去寻找已有的论文进行复现与对比，参考：<a href="https://zhuanlan.zhihu.com/p/445634734">UE5开发路线图及技术解析-Nanite、Lumen及其它 - 知乎 (zhihu.com)</a></p><h1 id="工业界的全局光照-global-illumination-solutions"><a class="markdownIt-Anchor" href="#工业界的全局光照-global-illumination-solutions"></a> 工业界的全局光照 Global Illumination Solutions</h1><p>没有任何的GI解决方法可以将所有的情况都给解决掉，除了RTRT（实时光线追踪），因为它理论上是一个正确的path tracing，肯定可以解决各种情况。但是RTRT在现如今只适用于部分，如果整体都用RTRT那么帧率自然而然会下降。</p><p>因此工业界经常使用hybrid solutions，也就是将许多中方法结合在一起。</p><p>下面是一个可能的GI思路：</p><ul><li>先做一遍SSR，得到一个近似的GI，对于SSR无法得到的结果，专用其它的ray tracing方法去弥补（用硬件或者软光追）</li><li>软光追（Software ray tracing）<ul><li><strong>近处：在任意一个shading point，在其周围的一定范围内的物体用一个较高分辨率或较高质量的SDF，SDF可以让我们在shader中快速地tracing</strong></li><li><strong>远处：用一个稍低质量的SDF将整个场景覆盖，至此不论近处还是远处我们都可以通过SDF得到最终光照打到的结果。</strong></li><li><strong>如果场景中有强烈的方向光源或者点光源（如手电筒），则通过RSM来解决。</strong></li><li>如果场景中有diffuse的物体，则通过DDGI（Dynamic Diffuse GI）来解决，这是一种基于探针的全局光照方法，用探针来存储3D网格中的irradiance，再照亮其它物体。</li></ul></li><li>硬件光追（Hardware ray tracing）<ul><li><strong>使用简化模型。由于我们要计算的是间接光照，因此没有必要去使用原始geometry，可以用一些简化了的模型去代替原始模型从而加快trace的速度，这样RTRT就十分快了。</strong></li><li>Probes (RTXGI)，用RTRT的思路结合探针的思路，叫做RTXGI。</li></ul></li></ul><p>上述中加粗的四条结合在一起就是UE5的lumen思路。</p><h1 id="笔记参考"><a class="markdownIt-Anchor" href="#笔记参考"></a> 笔记参考</h1><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY/?p=14&amp;vd_source=fe75c02381cf9faf4ece63051ea5c7de">Lecture 14 A Glimpse of Industrial Solution_哔哩哔哩_bilibili</a></p><p><a href="https://zhuanlan.zhihu.com/p/397575842">GAMES202 Lecture14:Glimpse of Industry Solution - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/28489928">【《Real-Time Rendering 3rd》 提炼总结】(七) 第七章续 · 延迟渲染(Deferred Rendering)的前生今世 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/562673914">虚幻5的移动端延迟渲染技术到底有多好用？ - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/547943994">剖析虚幻渲染体系（04）- 延迟渲染管线（1/3） - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/445634734">UE5开发路线图及技术解析-Nanite、Lumen及其它 - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-07实时光追降噪</title>
    <link href="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/"/>
    <url>/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/</url>
    
    <content type="html"><![CDATA[<h1 id="rtrtreal-time-ray-tracing介绍"><a class="markdownIt-Anchor" href="#rtrtreal-time-ray-tracing介绍"></a> RTRT(Real-Time Ray Tracing)介绍</h1><h2 id="光追硬件-rtx"><a class="markdownIt-Anchor" href="#光追硬件-rtx"></a> 光追硬件 RTX</h2><p>RTX其本质上只是硬件的提升，并不涉及任何算法部分，其本身是作为硬件上的一个突破，因为在显卡加装了一个用来做光追的部件。</p><p>由于光线追踪做的是光线与场景的求交，结合games101我们知道光线要经历BVH或者KD-tree这种加速结构，也就是做一个树的遍历从而快速判断光线是否与三角形求交，这部分对于GPU来说是不好做的，因此NVIDA设计了专门的硬件来帮助我们每秒可以trace更多的光线。</p><p>虽然trace那么多光线，但一根光线并不代表一个光路样本。RTX每秒可以trace 10 Giga（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi>G</mi><mi>i</mi><mi>g</mi><mi>a</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">1Giga=10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord mathdefault">G</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>）的rays，也就是100亿根光线.，看起来虽然多，但是要对每个像素都trace，因此：</p><ul><li>除以分辨率，比如1K或者2K</li><li>还要除以每秒的帧数</li><li>而且我们并不是用所有的时间都只去做光线追踪，剩余的时间我们还需要做降噪，后期处理，gameplay本身，因此1秒中并不是全部时间都在做ray tracing</li></ul><p>10 Giga rays per second == 1 sample per pixel，其实就是每个像素采样一个样本，从而得到最后的光追结果，记为<strong>1SPP</strong>。</p><p><strong>什么样本是一个光路的样本?</strong></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled.png" alt></p><p>至少要有四条光线才能构成一个最基本的光路：</p><ul><li>primary hitpoint(从camera出发打出一根光线打到的交点)。之所以为rasterization，是因为光栅化与primary ray做的工作是一样的，与其每个pixel去trace一条primary ray，不如直接将整个场景光栅化出来，二者是等价的。光栅化得到的结果等价于每个pixel都穿过了一条ray，而且光栅化更快。</li><li>shadow ray(primary hitpoint 和光源之间连接进行light sampling并判断是否有遮挡)</li><li>secondary ray(在Hitpoint根据材质采样出一个方向打出一根光线，他会打到一个物体上从而得到secondary hitpoint)</li><li>secondary shadow ray(从secondary hitpoint与光源连接判断是否会被光源看到)</li></ul><p>我们知道path tracing本身是一种蒙特卡洛积分的方法，本身会产生噪声，我们采样的样本越多，其噪声越小，因此1spp最后会得到一个很noisy的结果。</p><p>于是，RTRT最核心的技术便是——<strong>降噪</strong></p><p>实时光线追踪与path tracing相比，只是进行了一算法上的些简化，算法的核心思路不变，它本身的突破是由于硬件的能力提升，且1 spp是在20系列时的特点，现如今的30系列可能会支持更多的spp.</p><h2 id="实时去噪方法现状"><a class="markdownIt-Anchor" href="#实时去噪方法现状"></a> 实时去噪方法现状</h2><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%201.png" alt></p><p>从图中我们可以知道，即使是1spp得到的这么糟糕的结果，通过降噪（中间部分）我们仍然可以得到一个很棒的效果。</p><p><strong>首先我们需要知道在1spp下我们想要得到的结果：</strong></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%202.png" alt></p><p>降噪的方法有很多，但是针对实施光线追踪的降噪方法很少，那么工业界是如何解决这个问题的呢？首先介绍两种降噪方法的原理：时域滤波和空间滤波，之后介绍工业界的解决方案：SVGF和RAE。</p><h1 id="时域滤波原理"><a class="markdownIt-Anchor" href="#时域滤波原理"></a> 时域滤波原理</h1><h2 id="核心思想temporal"><a class="markdownIt-Anchor" href="#核心思想temporal"></a> <strong>核心思想——Temporal</strong></h2><p><strong>假设：整个看的场景的运动是连续的，就是camera以某种轨迹看向不同的物体，帧与帧之间有大量的连续性。</strong></p><p><strong>Motion vector：它是用来告诉我们物体在帧与帧之间是如何运动的，也就是图中的A点在motion vector下可以知道在上一帧里A点对应的位置B点，它是在Image Sapce中的2D向量。</strong></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%203.png" alt></p><ul><li>我们认为当前帧是需要去进行filtering，<strong>前一帧是已经filtering好的</strong></li><li>利用motion vector来知道当前帧某一点在上一帧的对应位置</li><li>由于我们认为场景运动是连续的，所以认为shading也是连续的，上一帧得到降噪好的结果比如颜色之类的，可以在当前帧复用，相当于增加了spp，但并不是简单的上一帧1 spp+当前帧1 spp。由于是一个递归，上一帧也复用了上上一帧的结果，可以理解为一个指数衰减，每一帧都有百分比贡献到下一帧</li><li>这种方法叫做<strong>时间上的复用</strong>：通过在找某一点在不同帧上的对应关系去复用已得到的结果。（空间上的复用见下文）</li></ul><p><strong>Temporal根据motion vector去找对应关系。</strong></p><h2 id="几何缓冲区-g-buffers"><a class="markdownIt-Anchor" href="#几何缓冲区-g-buffers"></a> <strong>几何缓冲区  G-Buffers</strong></h2><p>在介绍具体细节之前，我们引入几何缓冲区的概念——G-buffer（Geometric Buffer）。</p><p>在screen space我们可以得到很多的信息，比如之前的screen space ray tracing我们在screen space得到了每个点的深度相当于从camera看去我们得到了一张深度图.</p><p>同样的我们不止可以通过screen space生成深度图，还可以生成：</p><ul><li>直接光照图，</li><li>法线图</li><li>每个点的diffuse Albedo(也就是颜色kd项)</li><li>也可以存储per pixel depth，normal，世界坐标(通过rgb三通道来存x，y，z)等，只需要将这些信息各自生成一张图存储在G-buffer里，当需要的时候拿出来用</li></ul><p>即在渲染过程中可以免费得到的额外信息。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%204.png" alt></p><p><strong>G-buffer存储的只是screen space的信息，因为其记录的是camera能看到的信息</strong></p><h2 id="反向投影-back-projection"><a class="markdownIt-Anchor" href="#反向投影-back-projection"></a> 反向投影 <strong>Back projection</strong></h2><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%205.png" alt></p><ul><li>frame i——当前帧</li><li>frame i-1——上一帧</li></ul><p><strong>如何找当前帧的一个像素在上一帧的哪里</strong>?</p><p><strong>前提</strong>：我们找的不是像素的位置，而是当前帧的某一个像素里包含的内容在上一帧的哪一个像素。即透过当前帧(frame i)中蓝点这个像素我们所得到的点的世界坐标，投影到上一帧(frame i-1)中对应的是哪个像素。</p><p>Back Projection方法就是为了得到当前帧的坐标<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>去求对应于上一帧的坐标<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>：</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%206.png" alt></p><ul><li>要求出这个点的世界坐标，如果G-buffer中有世界坐标信息的图，可以拿来直接用</li><li>如果没有我们可以计算得到。一个点的世界坐标需要通过MVP矩阵和视口矩阵（E）从而得到在screen space上的坐标，那么让screen space上的这个点按相反的顺序乘以对应的逆矩阵就得到了世界坐标。(s是世界坐标，x是screen space的坐标，由于在screen space是2D坐标，因此我们需要深度这一信息来作为z值）</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>V</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>E</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>x</mi></mrow><annotation encoding="application/x-tex">s=M^{-1}V^{-1}P^{-1}E^{-1}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span></span></p><ul><li>到此我们求出了这一点的世界坐标，对于它在上一帧的哪里，由于我们知道整套渲染的流程，因此对于每一帧之间是怎么移动的，只需要用将当前帧世界坐标<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>乘以帧移动的逆矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">T^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>就得到了上一帧中这个点的世界坐标<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">s&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></li><li>到此，得到了发生移动后的上一帧的点的世界坐标<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">s&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，接着需要将其变回屏幕坐标上，即乘以MVP矩阵和视口矩阵（由于我们是控制着渲染的整个流程，因此每个矩阵都是已知的）</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup><msup><mi>V</mi><mo mathvariant="normal">′</mo></msup><msup><mi>M</mi><mo mathvariant="normal">′</mo></msup><msup><mi>s</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;=E&#x27;P&#x27;V&#x27;M&#x27;s&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="时域累积与降噪-temporal-accumdenoising"><a class="markdownIt-Anchor" href="#时域累积与降噪-temporal-accumdenoising"></a> 时域累积与降噪 <strong>Temporal Accum./Denoising</strong></h2><p>定义:</p><ul><li><strong>~</strong> ：unfiltered 表示没有filter，具有噪声的内容</li><li>-：filtered 表示没有噪声或者噪声比较小的内容</li></ul><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%207.png" alt></p><p>时间上的降噪：在得到了motion vector之后，我们就可以把当前帧(noisy的图)和上一帧(没有noisy的图)结合在一起，最简单的方法就是线性blending在一起，比如上一帧的结果 * 0.8 + 这一帧的结果 * 0.2得到新的结果。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>平衡系数表示当前帧的贡献，在0.1-0.2之间。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%208.png" alt="图源：sites.cs.ucsb.edu/~lingqi/publications/presentation_trmv.mp4"></p><h2 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h2><p>时间上的降噪的过程：</p><ol><li>如果在进行rasterization(primary ray)时得到了世界坐标信息的图存储在G-buffer中则直接得到世界坐标</li><li>如果没有其信息，则在当前帧的像素通过逆视口变换和逆MVP变换得到世界坐标</li><li>已知motion矩阵，将世界坐标逆motion得到上一帧的世界坐标</li><li>将上一帧的世界坐标进行正MVP变换和视口变换得到当前帧中的像素在上一帧中的位置</li><li>将两个值线性blending起来从而得到当前帧最后的结果</li></ol><p><strong>注意：滤波绝不会让一张图变暗或者变亮</strong></p><h2 id="时域降噪的失败情况-temporal-failure"><a class="markdownIt-Anchor" href="#时域降噪的失败情况-temporal-failure"></a> 时域降噪的失败情况 <strong>Temporal Failure</strong></h2><h3 id="失败情况1切换场景"><a class="markdownIt-Anchor" href="#失败情况1切换场景"></a> 失败情况1：切换场景</h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%209.png" alt></p><ul><li>如果突然切换场景，由于上一帧并没有新场景的任何信息，因此得到的结果肯定不准确。</li><li>如果突然切换光源，假设在迪厅中场景中任何物体都不变换，只是将红灯忽然变为绿灯，由于上一帧中的信息光源为红色，因此如果复用会导致我们得到的结果偏红而不是偏绿，因此时间的复用在此不可用。</li></ul><p>因此需要一个时间也就是burn-in period，去累计个新场景的几帧信息以供后续进行复用。</p><h3 id="失败情况2走廊中向后移动"><a class="markdownIt-Anchor" href="#失败情况2走廊中向后移动"></a> 失败情况2：走廊中向后移动</h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2010.png" alt></p><p>如上图，如果camera从离门最近开始倒退，在倒退的时候周围的信息会不断增多，因此我们当前帧新出现的物体无法在上一帧的屏幕空间内找到相对应的点，会对复用产生影响。</p><h3 id="失败情况3突然出现被挡住的背景"><a class="markdownIt-Anchor" href="#失败情况3突然出现被挡住的背景"></a> 失败情况3：突然出现被挡住的背景</h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2011.png" alt></p><p>图中，左边为上一帧，右边为当前帧。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2012.png" alt="图源：sites.cs.ucsb.edu/~lingqi/publications/presentation_trmv.mp4"></p><p>当求箱子后遮挡部分的两帧屏幕对应位置会发现，上一帧中找不到在当前帧中新出现的被遮挡的背景，找到的却是前面的遮挡物箱子，这就是disocclusion(不遮挡)问题。</p><h3 id="其它失败情况"><a class="markdownIt-Anchor" href="#其它失败情况"></a> 其它失败情况</h3><ul><li><strong>阴影拖影</strong>：移动光源下的静止场景。我们认为光源从左到右移动，而<strong>柱子是不动的</strong>，因此我们知道任何一个像素的motion vector是0，但是由于我们一直在复用未移动的帧结果，就会导致拖影的阴影出现。</li></ul><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2013.png" alt="图源：sites.cs.ucsb.edu/~lingqi/publications/presentation_trmv.mp4"></p><ul><li><strong>反射滞后</strong>：在产生了反射现象的场景中移动物体，反射面静止。下图对于这种地板上反射出场景的情况来说，由于<strong>地板是不动的</strong>，因此其上面的每一个像素点的motion vector为0，当我们移动物体时，其地板需要一定的时间适应，之后再在地板上反射出当今场景中的物体，也就是反射滞后。</li></ul><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2014.png" alt="图源：sites.cs.ucsb.edu/~lingqi/publications/presentation_trmv.mp4"></p><p>以上问题是在着色的过程中发生的错误现象，因为在着色时需要追踪的是着色现象的变换，而不是几何的变换，此时motion vector为0，因此无法复用。</p><h2 id="拖影问题及其解决思路-lagging"><a class="markdownIt-Anchor" href="#拖影问题及其解决思路-lagging"></a> 拖影问题及其解决思路 Lagging</h2><p>对于上述的失败场景，会导致的一个严重问题——拖影（拖尾）</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2015.png" alt></p><p>对于上一帧的东西参考了80%甚至更多，自然会产生这种残影/拖尾的现象。</p><h3 id="lagging的解决方案"><a class="markdownIt-Anchor" href="#lagging的解决方案"></a> Lagging的解决方案</h3><ul><li><strong>Clamping</strong></li></ul><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2016.png" alt></p><p>思路：如果在任何时候都把上一帧的结果，先给拉近到当前帧的结果就使得二者之间的颜色很相似，从而弱化了这一不正确的现象。</p><p>解释：以刚才的黄色箱子和白色墙壁为例，因为当前帧里取了过多的黄色箱子的值才导致了残影出现。上一帧的黄色，我们把它拉近白色，然后再将二者线性blending，这样我们得到的结果仍然是接近于白色的。</p><ul><li><strong>Detection</strong></li></ul><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2017.png" alt></p><p>思路：事先判断是否仍要使用上一帧的结果</p><p>解释：以黄色箱子和白色墙壁为例，当做完motion vector之后，我们增加一步操作来判断所对应的是不是同一个物体，在工业界在渲染中认为每个物体都有自己的编号，如果编号不同，那么认为motion vector就不再适用了。</p><p>此时就对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">α</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>进行调整，可以认为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>是非0即1，0%上一帧，100%这一帧。</p><p>但是之所以引用上一帧是因为其没有噪声，如果100%相信当前帧相当于重新引入了噪声，于是我们可以将当前帧的filter变大一点，让结果模糊一点但减少了噪声，这是没有关系的。</p><p><strong><strong>以上两种方法可以单独或合并使用。</strong></strong></p><h2 id="关于temporal的其它"><a class="markdownIt-Anchor" href="#关于temporal的其它"></a> 关于Temporal的其它</h2><ul><li>时间上的抗锯齿 ：Temporal Anti-Aliasing (TAA)，与时域滤波（降噪）非常相似，是复用上一帧来增加自己的采样数来抗锯齿。</li><li>用到Temporal的技术一般的思路都是相似的，包括DLSS等</li><li>工业界对于Temporal技术失败的情况会通过其它方式进行解决，该技术依旧是广泛应用的</li><li>如何降低Temporal的失败情况？《<a href="http://sites.cs.ucsb.edu/~lingqi/publications/paper_trmv.pdf">Temporally Reliable Motion Vectors for Real-time Ray Tracing</a>》研究了如何去追踪着色过程的变换，来解决阴影拖影、反射滞后等问题。（该论文可以在闫令琪老师的主页找到：<a href="http://sites.cs.ucsb.edu/~lingqi/">Lingqi Yan: Research Homepage (ucsb.edu)</a>）</li></ul><h1 id="空间滤波原理"><a class="markdownIt-Anchor" href="#空间滤波原理"></a> 空间滤波原理</h1><p>在时域上复用了之前的帧，而当前帧如何进行滤波，就是该部分所讨论的问题。</p><h2 id="滤波的实现-implementation-of-filtering"><a class="markdownIt-Anchor" href="#滤波的实现-implementation-of-filtering"></a> 滤波的实现 <strong>Implementation of filtering</strong></h2><h3 id="高斯滤波-gaussian-filtering"><a class="markdownIt-Anchor" href="#高斯滤波-gaussian-filtering"></a> 高斯滤波 Gaussian <strong>Filtering</strong></h3><p>滤波：概括起来就是做了一个模糊的操作，把一些噪声消除。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2018.png" alt></p><p>上图用的是低通滤波器，也就是只保留低频的信息，除掉高频的信息，这会带来两个问题：</p><ul><li><strong>高频信息中就全是噪声吗？那么高频中不是噪声的信息被除掉会不会导致信息丢失？</strong></li><li><strong>低频信息中就没有噪声吗？</strong></li></ul><p>这两个问题后续进行讨论，这里先讨论如何实现滤波。</p><ul><li>未处理过的图记做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>C</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">~</span></span></span></span></span></span></span></span></span>；</li><li>一个滤波器到底在做什么，由滤波核来定义，记做K；</li><li>处理过的图片记做 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201099999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">ˉ</span></span></span></span></span></span></span></span></span></li></ul><p>一般来说我们为了给光线追踪由于蒙特卡洛产生的噪声降噪时，用的是高斯的滤波器，它的滤波核类似于正态分布，中心值高，向两边衰减：</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2019.png" alt></p><p>这里将中心像素称为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，其余的像素称为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>，像素<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>肯定会贡献给<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，具体贡献多少通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>之间的距离在高斯上找对应的值，从而知道<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>会贡献多少给<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，伪代码：</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2020.png" alt></p><p>伪代码解析:</p><ul><li>对于任何一个中心像素i<ul><li>我们需要定义权值和(sum_of_weights)，加权贡献值的和(sum_of_weighted_values)</li><li>对于中心像素i周围一圈的任意像素j(包括像素i本身)<ul><li>根据像素i和像素j之间的距离和高斯的σ找对应的j贡献给i的值(权值) w_ij</li><li>将权值w_ij与像素j对应的颜色rgb值相乘得到j的加权贡献值，并加到sum_of_weighted_values里</li><li>将权值加到sum_of_weights</li></ul></li><li>进行归一化sum_of_weighted_values/sum_of_weights从而得到像素i最终的结果</li></ul></li></ul><p>注意：</p><ul><li>不论是积分式还是求和式，把求平均的操作写成sum_of_weighted_values/sum_of_weights是没问题的。提到归一化我们在之前将渲染方程中的visibility拆出来后要对visibility进行一个积分并除以一个空积分来进行归一化处理（分子是一个加权的visibility求和，分母则是权的求和），即sum_of_weighted_values/sum_of_weights。</li><li>高斯的滤波核下，sum_of_weights不会为0，但在其他的滤波核下可能会为0，因此在进行归一化从而得到像素i最终的结果之前通常会判断，sum_of_weights是否为0，如果为0则直接使像素i的值为0。</li><li>像素j输入的值i可能是一个多通道的值（RGB颜色值），也就是sum_of_weighted_values可以是一个多通道的值。</li></ul><h3 id="双边滤波-bilateral-filtering"><a class="markdownIt-Anchor" href="#双边滤波-bilateral-filtering"></a> 双边滤波 <strong>Bilateral filtering</strong></h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2021.png" alt></p><p>从图中可以看到，通过高斯我们得到了一个整体都被模糊的结果，但是<strong>如果想让边界仍然锐利</strong>该如何操作？因此除了高斯我们需要其他的方法来帮助我们保留下边界的这些高频信息。</p><p>因此引入了一个新的滤波核或者叫做滤波的方法，叫双边滤波(Bilateral filtering)。根据观察经验，可以<strong>将颜色变化特别剧烈的地方认为是边界</strong>。</p><p>具体做法如下：</p><ul><li>如果二者颜色差距不是特别大，则继续用高斯处理<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的贡献</li><li>如果像素<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>和像素<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>之间的颜色值差距过大，可以认为<strong>这两个像素分别在边界的两边</strong>，所以希望让像素<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>给<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的贡献变少，就不会出现边界的模糊情况，其实只需要在高斯的滤波核上添加更多控制条件：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo separator="true">,</mo><mi>k</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mi>k</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>j</mi><mo>−</mo><mi>l</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>d</mi><mn>2</mn></msubsup></mrow></mfrac><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∥</mi><mi>I</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>−</mo><mi>I</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo><msup><mi mathvariant="normal">∥</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>r</mi><mn>2</mn></msubsup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">w(i, j, k, l)=\exp \left(-\frac{(i-k)^{2}+(j-l)^{2}}{2 \sigma_{d}^{2}}-\frac{\|I(i, j)-I(k, l)\|^{2}}{2 \sigma_{r}^{2}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.478416em;vertical-align:-0.9873080000000001em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959079999999998em;"><span style="top:-2.398692em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30130799999999996em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9873080000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∥</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2022.png" alt></p><ul><li>在这里<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>代表一个像素坐标，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(k,l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span>代表另一个像素坐标，在公式的指数第一项中的高斯滤波核中用到。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>表示第一个像素的值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(k,l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span>表示第二个像素的值，之间的差异就是公式指数第二项的控制因子的分子部分，如果差异过大，就相当于在原本的高斯核上乘上了<strong>负的距离的平方</strong>，那么距离差异越大，使得公式整体的贡献变小接近于0。</li></ul><p>得到的效果如下：</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2023.png" alt="https://en.wikipedia.org/wiki/Bilateral_filter"></p><h3 id="联合双边滤波-joint-bilateral-filtering"><a class="markdownIt-Anchor" href="#联合双边滤波-joint-bilateral-filtering"></a> 联合双边滤波 <strong><strong>Joint Bilateral filtering</strong></strong></h3><p>通过上面对于滤波的实现，可以发现：</p><ul><li>高斯滤波 Gaussian filtering: 1 metric (distance)。<strong><strong>一个标准：通过判断两个像素之间的绝对距离来查找其需要贡献多少</strong></strong></li><li>双边滤波 Bilateral filtering: 2 metrics (position dist. &amp; color dist.)。<strong><strong>两个不同的标准：两个像素之间的距离、颜色之间的距离，从而在只保留低频信息时候保留了边界的信息</strong></strong></li></ul><p>那么我们有没有可能利用更多的features来改变滤波核，从而filtering得到更好的结果呢？可以的，这就是<strong>Joint Bilateral filtering联合双边滤波</strong>，而且Joint Bilateral filtering在解决path tracing中由于蒙特卡洛所产生的噪声上有很不错的效果。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2024.png" alt></p><p>在渲染时候，我们可以得到很多免费的信息并存储在G-buffer中，比如<strong>世界坐标、法线、深度等信息</strong>，这些信息都可以对滤波进行一个更好地指导，更重要的是G-BUFFER有一个很好的特点：<strong>完全没有噪声</strong>，这是因为我们在进行rasterization(所有像素的primary ray)时候，可以顺手把一些信息记录下来存到G-BUFFER中，而光栅化不涉及多次弹射，因此不会出现噪声。</p><p>注意：</p><ul><li>联合双边滤波也不需要考虑核是不是normalize的，因为我们在代码中实现时最后会进行归一化操作</li><li>滤波核不一定必须要使用高斯，只要这个函数满足随着距离衰减，就可以使用，如高斯、指数函数、cos函数。</li></ul><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2025.png" alt></p><p>假设我们在G-buffer中知道三个信息：深度（可以生成深度图）、颜色、法线，下图是在RTRT中得到的结果，可以看到有很明显的噪声：</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2026.png" alt></p><p>以A、B两点为例，如果用高斯，我们是通过两个像素之间的绝对距离找对应贡献；双边滤波的话在考虑距离的同时还会考虑两个之间的颜色变化，但是在这里双边滤波是不行的，我们可以看到A和B两个点都是十分noisy的，就算A和B没有在边界的两边，在同侧，它们之间的颜色差异也可能十分明显，这此时双边滤波得到的结果是不准确的。</p><p>因此我们引入<strong>深度、法线、颜色值等</strong>来辅助我们做另外的metric。</p><p><strong>从A到B</strong>：</p><p>可以从G-buffer得到各自的深度信息，我们可以看到B的深度比较浅，而A的深度比较深，我们不希望A有太多的贡献到B上，因此我们把深度做成一个高斯或者任何随深度衰减的函数去使用。</p><p><strong>从B到C：</strong></p><p>可以从G-buffer得到的是normal信息，因为我们可以看到B、C二者之间的深度是差不多的，因此不能继续使用深度这一metric了。可以发现，它们的法线朝向是不一样的，也就是他们的法线夹角接近于90度，就认为他们之间的法线差异很大。因此我们把Nnormal做成一个高斯或者任何随法线夹角衰减的函数去使用。</p><p><strong>从D到E：</strong></p><p>可以从G-buffer得到颜色值，差异越大，贡献越小。</p><p><strong>联合双边滤波的本质就是在kernel里多算几组不同feature下的贡献，并将其相乘得到最后的结果。</strong></p><h2 id="大核滤波器的实现-implementing-large-filters"><a class="markdownIt-Anchor" href="#大核滤波器的实现-implementing-large-filters"></a> 大核滤波器的实现 <strong>Implementing Large filters</strong></h2><p>过滤器所做的操作，是对于任何一个像素，考虑周围N * N个像素的贡献值，加权平均之后写回这个像素上。</p><p>如果是small filter，如 7 * 7大小的滤波核， 我们把范围内的像素贡献值加权平均值后写回这个像素；但是如果是large filter，如64 * 64，就会使得filter变得特别慢。因此我们的首要任务就是让一个large filter的速度变快，那么该怎么去做呢？工业界有两种应用比较广泛的解决方法：</p><h3 id="1滤波核拆分-separate-passes"><a class="markdownIt-Anchor" href="#1滤波核拆分-separate-passes"></a> 1.滤波核拆分 <strong>Separate Passes</strong></h3><p><strong>目的</strong></p><p>减少纹理查询次数。现在先考虑2D的高斯filter，先不考虑双边和联合双边滤波。</p><p><strong>思路</strong></p><p>对于任何一个像素，我们其实可以不去做一个N * N的filter，假如现在有一张图，我们先将它在水平方向上filter一遍，之后再在竖直方向上filter一遍。换句话说，就是将本来一趟N * N的，分成两趟来做——水平的1 * N和竖直的 N * 1，最后的结果相当于N * N filter的结果，如下图所示。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2027.png" alt></p><p><strong>对比</strong></p><ul><li>如果使用N * N的filter，对于任何一个像素我们需要访问N^2个纹理；</li><li>如果将其拆分为两趟，第一趟访问N个纹理，第二趟访问N个纹理，总共访问了2N个纹理。</li></ul><p><strong>关键问题</strong></p><ol><li>为什么我们可以把一个2D的高斯filter拆分为两个1D的高斯filter？</li></ol><p>因为2D的高斯函数有一个好的性质，在数学上就是拆开定义的，<strong>其本身就是可拆分的</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mrow><mn>2</mn><mi>D</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">，</mi><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>G</mi><mrow><mn>1</mn><mi>D</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>G</mi><mrow><mn>1</mn><mi>D</mi></mrow></msub><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> G_{2D}(x，y)=G_{1D}(x)\cdot G_{1D}(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p>另外，<strong>滤波 == 卷积（filtering == convolution）</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mo>∫</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">，</mi><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msub><mi>G</mi><mrow><mn>2</mn><mi>D</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mi>x</mi><mi mathvariant="normal">，</mi><msub><mi>y</mi><mn>0</mn></msub><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi><mi>d</mi><mi>y</mi><mo>=</mo><mo>∫</mo><mo stretchy="false">(</mo><mo>∫</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">，</mi><msub><mi>y</mi><mn>0</mn></msub><mo stretchy="false">)</mo><msub><mi>G</mi><mrow><mn>1</mn><mi>D</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>G</mi><mrow><mn>1</mn><mi>D</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mn>0</mn></msub><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo><mi>d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\int\int F(x_0，y_0)G_{2D}(x_0-x，y_0-y)dxdy=\int(\int F(x_0，y_0)G_{1D}(x_0-x)dx)G_{1D}(y_0-y)dy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.22225em;vertical-align:-0.86225em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.22225em;vertical-align:-0.86225em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mopen">(</span><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></span></p><p>我们想要求一个像素周围一圈像素对自己的加权贡献，就相当于我们对2D函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>和高斯核在2D上进行一个卷积，由于2D高斯核可以拆分为两个1D的高斯核相乘。</p><p><strong>应用</strong></p><p><strong>这种做法理论上只适用于高斯</strong>，对于双边滤波，两个高斯相乘，X和Y不容易拆分出来。联合双边滤波要考虑的东西更多，深度，normal各种信息，拆分成X和Y的函数也是很困难的，因为他们的滤波核本身就很复杂了。</p><p>而实际上，只要范围不是太大，我们还是可以这样分成水平和竖直去做的。</p><h3 id="2尺寸渐增-progressively-growing-sizes"><a class="markdownIt-Anchor" href="#2尺寸渐增-progressively-growing-sizes"></a> 2.尺寸渐增 <strong>Progressively Growing Sizes</strong></h3><p><strong>目的</strong></p><p>同上，不希望对于任何一个像素进行N * N次的纹理查询</p><p><strong>思路</strong></p><p>用一个逐步增大的filter进行多次滤波。</p><p><strong>A-trous wavelet</strong></p><p>A-trous wavelet是一种滤波方法，它的思路是：</p><ul><li>多趟操作，每趟都是5 * 5大小的filter；</li><li>每趟滤波核的间隔按照<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span>来增加。第一趟i=0时，每1个间隔采样一个；第二趟i=1时，每2个间隔采样一个，但filter大小仍旧是5。</li></ul><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2028.png" alt></p><p>假设要做5趟filter，那么第5趟i=5时，样本之间的间隔是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>4</mn></msup><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">2^4 = 16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span>，第5层一共要5个样本，也就是4个间隔，所以在第五层时候相当于做了一个64 * 64的filter，但对于这个像素来说，只做了5趟，每趟5 * 5大小的filter，一共做了 125次的纹理查询，相比于 64 * 64 = 4096次已经很小了。</p><p>因此通过这种方法就可以很少的纹理查询次数得到了N * N的filter结果。</p><p><strong>关键问题</strong></p><ol><li>为什么要逐渐增大filter，而不是一上来就使用第5趟中间间隔16个样本的filter？</li></ol><p>回顾101学习的关于采样的过程：</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2029.png" alt="https://www.researchgate.net/figure/The-evolution-of-sampling-theorem-a-The-time-domain-of-the-band-limited-signal-and-b_fig5_301556095"></p><p>（a）是时域上的某个信号，到了频域上（b）是一个连续的频谱（Tips：频谱是左右对称的，即使不存在负的频率）</p><p>（c）是冲激函数，只在特定时域上有值，反映到频域上是（d）</p><p>（e）是冲激函数对（a）进行采样（也就是二者相乘），得到离散的点，反映到频域上是（f）</p><p><strong>采样就等价于把信号在频域上以采样信号的周期进行延拓</strong>。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2030.png" alt></p><p><strong>走样原理</strong>：之所以会出现走样现象是因为采样比较稀疏，也就是采样点之间的间隔比较大，就意味着频谱之间的间隔小，那么延拓之后会产生频谱重叠的现象从而发生走样。</p><p>下面是相关参考资料：</p><blockquote><p>关于采样的通俗理解：<a href="https://www.zhihu.com/question/431920644/answer/1597049082">https://www.zhihu.com/question/431920644/answer/1597049082</a></p></blockquote><blockquote><p>关于傅里叶变换的通俗理解：<a href="https://zhuanlan.zhihu.com/p/19763358">https://zhuanlan.zhihu.com/p/19763358</a></p></blockquote><blockquote><p><strong>采样 == 重复的搬移频谱：</strong><a href="https://blog.csdn.net/qq_38972634/article/details/119832068">https://blog.csdn.net/qq_38972634/article/details/119832068</a></p></blockquote><p>回到问题本身，filter做的其实就是在频域上截取某一段值，丢弃掉其它值。<strong>用更大的filter == 除掉低频信息；用更小的filter == 除掉高频信息</strong>。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2031.png" alt></p><p>在第1趟的时候，通过一个小范围的filter，将频谱上的高频信息，也就是蓝色区域pass掉；</p><p>在第2躺的时候，通过一个稍大范围的filter，将频谱上的稍低的频率信息，也就是黄色区域pass掉；</p><p>以此类推，不断增加filter的size就是为了不断去除更低的频率。</p><ol><li>为什么可以间隔那么多的样本？</li></ol><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2032.png" alt></p><p>在第1趟中除去了高频蓝色区域，然后在第2趟中相当于在9 * 9的filter中采样出 5*5 的filter，而采样的间隔（采样频率）对应到频谱上正好是上图的蓝色部分，于是该次采样就又对应了一次频谱的搬移（延拓），使得搬移的结果变成：在第1趟除掉高频信息后的区域首尾恰好连接，从而避免了走样现象。</p><h2 id="离群值删除-outlier-removal"><a class="markdownIt-Anchor" href="#离群值删除-outlier-removal"></a> 离群值删除 <strong>Outlier Removal</strong></h2><h3 id="问题引入"><a class="markdownIt-Anchor" href="#问题引入"></a> <strong>问题引入</strong></h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2033.png" alt></p><p>在用蒙特卡洛方法渲染一张图时，得到的结果会出现一些点过亮或者过暗，这些过亮或者过暗的点如果经过使用filter这种降噪的方法去处理的话其实并不好处理。以7<em>7的filter为例，如果有一个点过亮，在经过这个7</em>7的filter处理过后，会影响一块区域，使得它这一块区域都会变亮。</p><p>那么是否可以在filter之前处理掉这些过亮或者过暗的点？而且我们如何去定义这个outlier也就是这个边界呢？</p><h3 id="离群值检测与限定-outlier-detection-and-clamping"><a class="markdownIt-Anchor" href="#离群值检测与限定-outlier-detection-and-clamping"></a> 离群值检测与限定 <strong>Outlier Detection and Clamping</strong></h3><ol><li><strong>Detection</strong></li></ol><p>我个人把outlier翻译成”离群值“，通俗说就是非主流的颜色，那么首先要知道它主流的颜色的范围。</p><p>因此对于每个像素，都取周围一个小范围的区域，例如7<em>7或者5</em>5，然后把这个范围内颜色的均值(mean)和方差(variance)给算出来，然后进行检测：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi><mi>o</mi><mi>u</mi><mi>t</mi><mi>s</mi><mi>i</mi><mi>d</mi><mi>e</mi><mo stretchy="false">[</mo><mi>μ</mi><mi mathvariant="normal">−</mi><mi>k</mi><mi>σ</mi><mi mathvariant="normal">，</mi><mi>μ</mi><mo>+</mo><mi>k</mi><mi>σ</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>μ</mi><mo>−</mo><mi>k</mi><mi>σ</mi><mi mathvariant="normal">，</mi><mi>μ</mi><mo>+</mo><mi>k</mi><mi>σ</mi><mo stretchy="false">]</mo><mo>→</mo><mi>o</mi><mi>u</mi><mi>t</mi><mi>l</mi><mi>i</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Value outside[μ−kσ，μ+kσ][\mu - k\sigma， \mu + k\sigma] → outlier</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mopen">[</span><span class="mord mathdefault">μ</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span></span></p><p>正常的范围在”均值±若干方差“内，超过这个范围的认为该颜色值是outlier。</p><ol start="2"><li><strong>Clamping(outlier removal)</strong></li></ol><p>如果我们找到了outlier的点，就把这个点的值给clamp到接近正常范围的值，该操作称为outlier removal。这种操作并不是把outlier的值给舍弃，而是把它限定到正常范围，而且该操作在filter之前进行，从而能得到正确的filter结果。</p><p>工业界中对于clamping的操作会更加复杂，如TAA的思想。</p><p>在上节中提到，当motion vector为0导致的残影现象，是由于：当前帧与上一帧中对应的信息差异过大。为了避免上一帧的错误信息（如刚出现的墙壁对应到上一帧并不是墙壁的颜色）对当前帧造成影响，就可以使用该方法，称为<strong>Temporal Clamping</strong>。</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2034.png" alt></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>C</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">~</span></span></span></span></span></span></span></span></span> ——没有filter过的帧；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>C</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8201099999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;">ˉ</span></span></span></span></span></span></span></span></span> ——spatial filter过的帧；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> ——noisy-free（经历过temporal累积后的无噪声的帧）</p><p><strong>Temporal Clamping所做的操作为</strong>：假设上一帧的结果是noisy-free的，当前帧的结果是spatial filter过的，那么就将上一帧对应点的结果clamp到当前帧对应点周围的有效范围的内。即<strong>在spatial filter之后的当前帧的对应点周围找一个很小的范围，找出均值和方差</strong>，仍然认为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>μ</mi><mi mathvariant="normal">−</mi><mi>k</mi><mi>σ</mi><mi mathvariant="normal">，</mi><mi>μ</mi><mo>+</mo><mi>k</mi><mi>σ</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>μ</mi><mo>−</mo><mi>k</mi><mi>σ</mi><mi mathvariant="normal">，</mi><mi>μ</mi><mo>+</mo><mi>k</mi><mi>σ</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[μ−kσ，μ+kσ][\mu - k\sigma， \mu + k\sigma]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">μ</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mclose">]</span></span></span></span> 是有效范围，<strong>如果上一帧对应点的颜色值超出这个范围，则把其clamp到范围内</strong>，再和当前帧做线性blending，从而得到当前帧noisy-free的结果。</p><p><strong>注意</strong></p><ul><li>temporal clamping不是一个解决方法，而是一个介于noisy和lagging的tradeoff</li><li>该操作是将上一帧的不可信的结果值给clamp到当前帧filter后的正常范围内</li></ul><h1 id="实时光追降噪-svgf"><a class="markdownIt-Anchor" href="#实时光追降噪-svgf"></a> 实时光追降噪-SVGF</h1><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>SVGF（Spatiotemporal Variance-Guided Filtering）从名称可以看出，这是一种时域和空间上的方差来指导滤波的方法。在1spp下可以达到与GT（ground truth）非常接近的效果：</p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2035.png" alt></p><p>下面介绍其基本思路。</p><h2 id="svgf-joint-bilateral-filtering"><a class="markdownIt-Anchor" href="#svgf-joint-bilateral-filtering"></a> SVGF-Joint Bilateral Filtering</h2><p>SVGF使用了三个指导filtering的重要因素。</p><h3 id="1深度-depth"><a class="markdownIt-Anchor" href="#1深度-depth"></a> 1.深度 <strong>Depth</strong></h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2036.png" alt></p><p>以图中的A，B互相贡献为例，如果二者之间的深度差异小，则贡献权值大；反之二者深度差异大，则贡献权值小。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>z</mi></msub><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><mi>z</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>−</mo><mi>z</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><mrow><msub><mi>σ</mi><mi>z</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∇</mi><mi>z</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>q</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>+</mo><mi>ϵ</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w_z=exp(-\frac{|z(p)-z(q)|}{\sigma_z|\nabla  z(p)\cdot (p-q)|+\epsilon})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>这是SVGF用来判断深度贡献权值的公式，从公式中可以看出：</p><ul><li>由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">exp(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>是返回<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>次方，由于公式返回的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">-x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault">x</span></span></span></span>次方，所以差异越大，贡献越小；</li><li>分母部分的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_{z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：是一个用来控制指数衰减的快慢的参数，或者理解为控制深度的影响大还是小；</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi><mi>z</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nabla z(p)\cdot (p-q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>： 深度的梯度 * 两点间的距离；</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> ：filter时候考虑一个点Q周围所有的点P，也包括这个点Q，因此分母是有可能为0的，而且如果两点足够接近会导致最后的数值太大，为了避免一些数值上的问题加上一个较小量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 。</li></ul><p><strong>关于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi><mi>z</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nabla z(p)\cdot (p-q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>项</strong></p><p>上图中，由于A和B两点在同一个平面上，颜色也相近，理论上A和B会对彼此贡献很大。</p><p>但这一面是侧向面对屏幕，因此A和B是有很大深度差异的，此时如果我们用深度来判断A和B对彼此的贡献时候，会发现二者彼此贡献很小，这明显是不合理的。</p><p>因此简单的用深度来判断贡献值是不行的，那么考虑A和B在平面法线方向上的深度变化。图中的A和B虽然在实际深度差异很大，但是在法线方向上的深度差异几乎没有，因为二者几乎在同一个平面上。</p><p>因此引入了<strong>深度的梯度</strong>——垂直于平面法线上的变化率，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∇</mi><mi>z</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nabla z(p)\cdot (p-q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>即为 <strong>深度梯度 * 距离 = 实际深度变化量</strong>。</p><p>总结来说，通常情况下不会简单的用二者之间的深度差异来判断贡献值，而是在它们所在的面的法线方向上投影出来的深度差异来判断，或者说是在它们所在平面上的切平面（平面的切平面等于平面本身）上的深度差异。</p><h3 id="2法线-normal"><a class="markdownIt-Anchor" href="#2法线-normal"></a> 2.法线 Normal</h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2037.png" alt></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">⁍</mi></mrow><annotation encoding="application/x-tex">⁍</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord">⁍</span></span></span></span></span></p><p>这是SVGF用来判断法线贡献权值的公式，可以看出：</p><ul><li>用两个点法线向量求一个点积，由于求出来的值有可能是负值，因此使用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span>把负的值给clamp到0。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">σ_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：用来判断点乘的这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">cos</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span></span></span></span>函数从1到0的变化是快还是慢，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">σ_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>越大，从1到0就越快，也就是判断法线之间的差异的严格程度。</li></ul><p>另外，如果场景中运用了法线贴图来制造凹凸效果，我们再判断时应该<strong>运用平面原本的法线</strong>，而不是为了制造凹凸效果而改变过的法线。</p><h3 id="3luminance"><a class="markdownIt-Anchor" href="#3luminance"></a> 3.Luminance</h3><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2038.png" alt></p><p>在考虑颜色差异时，最简单就是应用双边滤波里给的颜色差异来考虑，例如将RGB转换为grayscale（灰度），这种颜色称其为luminance，只是一个名字，就认为是颜色。</p><p>任意两点间考虑其颜色差异，如果颜色差异过大，则认为靠近边界，此时A和B的贡献不应该互相混合起来。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>l</mi></msub><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>l</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>l</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><mrow><msub><mi>σ</mi><mi>l</mi></msub><msqrt><mrow><msub><mi>g</mi><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow></msub><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">r</mi></mrow><mo stretchy="false">(</mo><msub><mi>l</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></msqrt><mo>+</mo><mi>ϵ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_l=exp(-\frac{|l_i(p)-l_i(q)|}{\sigma_l\sqrt{g_{3\times 3}(\mathrm{Var}(l_i(p)))}+\epsilon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.557em;vertical-align:-1.13em;"></span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm" style="margin-right:0.01389em;">V</span><span class="mord mathrm">a</span><span class="mord mathrm">r</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>这是SVGF用来判断颜色贡献权值的公式，可以看出分母引入了方差<strong>variance</strong>。</p><p><strong>引入方差的原因</strong></p><p>由于噪声的存在会出现一些干扰，也就是B点虽然在阴影里，但是可能刚好选择的点是一个噪声（表现为颜色特别亮），此时A、B的颜色差异很小，就会互相贡献，但是这样是错误的现象。</p><p>先去看A，B两点间的颜色差异，并且计算filter的中心点的variance，当variance比较大时，意味着不应该过多相信两点间的颜色差异，所以把标准差放在分母。</p><p><strong>计算流程</strong></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2039.png" alt="图源：Spatiotemporal Variance-Guided Filtering: Real-Time Reconstruction for Path-Traced Global Illumination (behindthepixels.io)"></p><p>由于variance是一个统计学的量，不可能只看B点本身，假设当前帧渲染出来之后的结果是很noisy的，会做如下操作来得到B点的variance：</p><ul><li>在空间上，使用À-Trous Wavelet方法，在B点的周围取一个7*7的区域算出区域里的variance</li><li>在时域上，当前帧（A、B均为当前帧）去找上一帧中对应点的variance，这个值是在时间上累积下来的，即计算平均，将方差变得时域上平滑</li><li>并且上一步得到的时域上的方差大小又在后续去更好的指引Spatial Filter在不同噪点区域的力度</li></ul><p><strong><strong><strong><strong><strong>失败情况</strong></strong></strong></strong></strong> <strong>Failure Case</strong></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2040.png" alt></p><p>依旧存在上文提到的<strong>阴影拖影的现象</strong>。当一个场景固定，只移动光源时候，阴影会随着光源的移动而变化，当前帧会复用上一帧的阴影，但由于没有发生任何的几何变换，因此motion vector等于0，此时复用上一帧时会产生“残影“现象。</p><h1 id="实时光追降噪-rae"><a class="markdownIt-Anchor" href="#实时光追降噪-rae"></a> 实时光追降噪-RAE</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>RAE是指Recurrent AutoEncoder，用RAE这么一种结构对Monte carlo路径追踪得到的结果进行reconstruction。它的特点：</p><ul><li>是一个后期处理降噪的方法，将一个noisy的图输入到神经网络，最后输出一张clean的图。</li><li>会用到一些G-buffer上的信息，因此是与noisy的图一起作为神经网络的输入。</li><li>神经网络会自动将temporal的信息累积起来。</li></ul><p>之所以不使用motion vector也可以将temporal的结果累计起来，是因为两个设计原则：</p><p>1.<strong>AutoEncoder</strong></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2041.png" alt></p><p>是一个漏斗形的结构，输入经过若干层神经网络后变成一个很小的东西，之后再将小的东西不断地展开，形状很像一个U字形，因此也可以称之为U型神经网络，其适合去做一些图像上的各种操作。</p><p>2.<strong>Recurrent convolution block</strong></p><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2042.png" alt></p><p>之所以可以利用历史的信息是由于每一层神经网络叫做convolution block，但是有一个recurrent连接，也就是每一层神经网络不仅可以连向下一层，也可以连回自己这一层。因此假设神经网络一直在跑，跑完当前帧后，会有信息遗留在神经网络里面，信息每一层又可以连向它自己，因此在跑下一帧图时候，可以用神经网络自己学出来的方法去复用上一帧遗留下的信息而不是通过motion vector。</p><h2 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h2><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2043.png" alt></p><h2 id="对比"><a class="markdownIt-Anchor" href="#对比"></a> 对比</h2><p><img src="/2023/01/15/Games202%E5%AE%9E%E6%97%B6%E5%85%89%E8%BF%BD%E9%99%8D%E5%99%AA/Untitled%2044.png" alt></p><p>质量：SVGF更加清晰，RAE会有overblur的缺点</p><p>假象：二者都会出现残影。另外对于Temporal Filter之后帧与帧之间依旧会抖动，原因在于——帧的噪声并不仅仅是高频噪声，在filter后留下了低频噪声，产生的效果就是帧之间的抖动，工业界叫做”boiling artifact“</p><p>表现：SVGF通过时间进行累积，计算速度快；RAE每次都要过一遍神经网络（50ms或更多）</p><p>可解释性：对于RAE神经网络学习到的累积方法我们是不清楚的，因此可解释性差</p><p><strong>另外</strong>：RAE在不同的SPP下其效率是固定的，假设16SPP的图像利用SVGF会使得计算量明显增加（方差计算、时间累积等）。正因为如此，Nvidia做了一个简化——把RAE的Recurrent block去掉，也就是不包括Temporal的信息，但仍保持着AutoEncoder的结构，放在了GPU RayTracing的API”Optix“中，因此Optix框架的降噪器其实是一个神经网络，且只能降噪单张图片，不能降噪图像序列（因为没有Recurrent），且在Tensor Core（Nvidia研发的张量计算核心，提高AI训练速度）的加持下，该框架在高SPP的情况下可以很高效。</p><h1 id="笔记参考"><a class="markdownIt-Anchor" href="#笔记参考"></a> 笔记参考</h1><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=12&amp;vd_source=fe75c02381cf9faf4ece63051ea5c7de">Lecture 12 Real-Time Ray-Tracing 1_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=13&amp;vd_source=fe75c02381cf9faf4ece63051ea5c7de">Lecture 13 Real-Time Ray-Tracing 2_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY/?p=14&amp;vd_source=fe75c02381cf9faf4ece63051ea5c7de">Lecture 14 A Glimpse of Industrial Solution_哔哩哔哩_bilibili</a></p><p><a href="https://zhuanlan.zhihu.com/p/28288053">Spatiotemporal Variance-Guided Filter, 向实时光线追踪迈进 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/387619811">GAMES202 Lecture12：Real-Time Ray-Tracing - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/389335568">GAMES202 Lecture13：Real-Time Ray-Tracing 02 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/397575842">GAMES202 Lecture14:Glimpse of Industry Solution - 知乎 (zhihu.com)</a></p><h1 id="论文参考"><a class="markdownIt-Anchor" href="#论文参考"></a> 论文参考</h1><p>【A-Trous Wavelet滤波方法】Holger Dammertz, Daniel Sewtz, Johannes Hanika, and Hendrik Lensch. 2010. Edge-Avoiding ` A-TrousWavelet Transform for fast Global Illumination Filtering. In High Performance Graphics. 67–75.</p><p>【SVGF】Schied C , Salvi M , Kaplanyan A , et al. Spatiotemporal variance-guided filtering: real-time reconstruction for path-traced global illumination[C]// High Performance Graphics. ACM, 2017.</p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于插值</title>
    <link href="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <url>/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="问题引入"><a class="markdownIt-Anchor" href="#问题引入"></a> 问题引入</h1><p>最近在项目中，遇到了一个有趣的问题。</p><p>一个包含 41 张图片，每张图片的分辨率为 512 x 512 的脑部 CT，把他们渲染到屏幕上后，如果横断位（Axial）来观察，图片很清晰，因为是 512 x 512 分辨率，如下图：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109163223.png" alt></p><p>但是从其它视角如冠状位（Coronal）来观察，会有强烈的锯齿感，因为是 512 x 41 的分辨率，经过拉伸变为实际尺寸，如下图：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109163516.png" alt></p><p>体积重建的结果，一言难尽：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109165641.png" alt></p><p>为了消除锯齿，我使用了 WebGL 中可配置的纹理过滤方法——LinearFilter，返回距离指定的纹理坐标最近的四个纹理元素的加权平均值，于是我得到了如下的效果：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109163928.png" alt></p><p>在体积重建的结果中也有了质的飞跃：<br><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109165358.png" alt></p><p>正当我美滋滋的时候，问题出现了——原本的影像数据是以像素值（pixelArray3D）大小存储，转换为 RGB 的纹理渲染到场景中，由于需要外接某些算法，需要将影像数据转换为真实的浓度值（intensityArray3D）来存储，转换完再渲染，发现一下子打回了原形。下图的左边两幅图是 pixelArray3D，右边两幅图是 intensityArray3D，上边两幅图是没有开线性过滤，也就是最近点过滤（NearestFilter），下边两幅图是线性过滤（LinearFilter）：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109162237.png" alt></p><p>可以看到右下的图，根本没有过滤的痕迹啊！这就是问题所在。</p><h1 id="问题分析"><a class="markdownIt-Anchor" href="#问题分析"></a> 问题分析</h1><h2 id="1纹理可视化"><a class="markdownIt-Anchor" href="#1纹理可视化"></a> 1.纹理可视化</h2><p>首先，把 pixelArray3D（左）和 intensityArray3D（右）的真实纹理，在<strong>没有线性过滤</strong>时进行可视化：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109170423.png" alt></p><p>再把 pixelArray3D（左）和 intensityArray3D（右）的真实纹理，在<strong>线性过滤</strong>时进行可视化：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109170536.png" alt></p><p>可以看得出来，在加上线性过滤后，采样得到的纹理都很好地进行了平滑过渡，说明配置没有出问题，那么只可能出现在纹理的生成中。</p><h2 id="2纹理生成算法"><a class="markdownIt-Anchor" href="#2纹理生成算法"></a> 2.纹理生成算法</h2><p>项目中，对于纹理的生成做了如下步骤：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">storedPixelDataToImageData</span>(<span class="hljs-params">pixelData, width, height, depth</span>) </span>&#123;<br>  <span class="hljs-comment">// Transfer image data to alpha and luminance channels of WebGL texture</span><br>  <span class="hljs-comment">// Pack int16 into three uint8 channels (r, g, b)</span><br>  <span class="hljs-keyword">const</span> numberOfChannels = <span class="hljs-number">3</span>;<br>  <span class="hljs-keyword">const</span> data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Uint8Array</span>(width * height * depth * numberOfChannels);<br>  <span class="hljs-keyword">let</span> offset = <span class="hljs-number">0</span>;<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; pixelData.length; i++) &#123;<br>    <span class="hljs-keyword">const</span> val = <span class="hljs-built_in">Math</span>.abs(pixelData[i]);<br>    data[offset++] = val &amp; <span class="hljs-number">0xff</span>;<br>    data[offset++] = val &gt;&gt; <span class="hljs-number">8</span>;<br>    data[offset++] = pixelData[i] &lt; <span class="hljs-number">0</span> ? <span class="hljs-number">0</span> : <span class="hljs-number">1</span>; <span class="hljs-comment">// 0 For negative, 1 for positive</span><br>  &#125;<br><br>  <span class="hljs-keyword">return</span> data;<br>&#125;<br></code></pre></td></tr></table></figure><p>也就是将 int16 的影像数据将绝对值的高 8 位与低 8 位存储到纹理的 G 通道与 A 通道，将正负值存储到 B 通道，然后在着色器中计算浓度值和灰度值，显示到屏幕：</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-type">vec4</span> color=<span class="hljs-built_in">texture</span>(diffuse,pos.xyz);<br><span class="hljs-type">float</span> intensity=color.r*<span class="hljs-number">256.</span>+color.g*<span class="hljs-number">65536.</span>;<br><span class="hljs-keyword">if</span>(color.b==<span class="hljs-number">0.</span>)&#123;<br>    intensity=-intensity;<br>&#125;<br></code></pre></td></tr></table></figure><p>那么，问题似乎已经浮出水面，是否是纹理的正负号只相差1的问题（0为负，1为正），导致插值不明显呢？</p><p>测试一下，当int16值是正数的时候，就设置为255吧，把pixelArray3D（左）和 intensityArray3D（右）的纹理数据再可视化一下：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109172830.png" alt></p><p>用像素分析软件Snipaste查看一下，果然有问题：从背景到脑部外壳这部分，B通道从0插值到了255！可是LinearFilter就是应该做插值啊，确实，插值没有错，错在——正负的插值是没有意义的，正就是正，负就是负。</p><p>这让我想到如果B通道非0即1的话，如果插值，会导致<strong>只有在完全是负值的情况下恢复原始数据的正负</strong>，其它情况均判定为正，那么过滤就完全失效了，关键代码在这：</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-keyword">if</span>(color.b==<span class="hljs-number">0.</span>)&#123;<br>    intensity=-intensity;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="问题解决"><a class="markdownIt-Anchor" href="#问题解决"></a> 问题解决</h1><p>如何避免这种问题？或者说为什么之前pixelArray3D没有出现这种问题呢？</p><p>这是因为pixelArray3D在这个例子中大多数为正值，而intensityArray3D是经过处理后的数据，在这个例子中体现在脑部外壳以外是负，以内是正。</p><p>于是就可以把intensityArray3D完全变为正值存储到纹理，再在着色器中恢复原来的数据即可保证其符号。</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs glsl">function storedPixelDataToImageData(pixelData, width, height, depth, minScalarValue) &#123;<br>  <span class="hljs-comment">// Transfer image data to alpha and luminance channels of WebGL texture</span><br>  <span class="hljs-comment">// Pack int16 into three uint8 channels (r, g, b)</span><br>  <span class="hljs-keyword">const</span> numberOfChannels = <span class="hljs-number">3</span>;<br>  <span class="hljs-keyword">const</span> data = new Uint8Array(width * height * depth * numberOfChannels);<br>  let <span class="hljs-keyword">offset</span> = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">for</span> (let i = <span class="hljs-number">0</span>; i &lt; pixelData.<span class="hljs-built_in">length</span>; i++) &#123;<br>    <span class="hljs-keyword">const</span> val = pixelData[i] + Math.<span class="hljs-built_in">abs</span>(minScalarValue);<br>    data[<span class="hljs-keyword">offset</span>++] = val &amp; <span class="hljs-number">0xff</span>;<br>    data[<span class="hljs-keyword">offset</span>++] = (val &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>;<br>    <span class="hljs-comment">// data[offset++] = pixelData[i] &lt; 0 ? 0 : 1; // 0 For negative, 1 for positive</span><br>    data[<span class="hljs-keyword">offset</span>++] = <span class="hljs-number">0</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> data;<br>&#125;<br></code></pre></td></tr></table></figure><p>把数据加上最小值的绝对值，可以保证用R、G通道不丢失数据地保存在纹理中，剩下的B通道甚至可以保存其它数据。</p><p>后来仔细看了看修改之前的intensityArray3D的结果，发现也只有边缘没有过滤的效果，内部还是有过滤痕迹的，因为内部绝大多数已经变为正值，这更加印证了问题所在。<br><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109165118.png" alt></p><p>修改后的结果，舒服了：</p><p><img src="/2023/01/09/%E5%85%B3%E4%BA%8E%E6%8F%92%E5%80%BC%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/20230109175249.png" alt></p><h1 id="感想"><a class="markdownIt-Anchor" href="#感想"></a> 感想</h1><ul><li>之前没有发现这个问题所在，因为大多数情况下不需要插值，好多数据的分辨率还是很高的</li><li>而在使用intensityArray3D之前，也没有发现问题，因为大多数情况下它存的本身就是正值，可见有些问题还是很隐蔽的，不容易被发现</li><li>另外也应该注意有符号数的打包问题</li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>问题记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WebGL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-06实时高质量着色</title>
    <link href="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/"/>
    <url>/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="实时渲染中的pbr"><a class="markdownIt-Anchor" href="#实时渲染中的pbr"></a> 实时渲染中的PBR</h1><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p><strong>PBR（physically-based rendering，基于物理的渲染）</strong> 是指在渲染过程中，材质、光源、相机、光线材质等一切事物都应该基于物理。</p><p>因此PBR在概念上来说不只限制在材质上，但是在实时渲染中PBR指的通常是基于物理的材质。</p><p>实时渲染中的 PBR 材质丰富程度要远远落后于离线渲染：</p><ul><li>种类：离线渲染中artist可以找出几百种材质，而在RTR中则有十几种，因为要考虑到速度和研究透彻的程度</li><li>质量：为了让材质快速被渲染，我们需要牺牲较大的质量效果。比如：毛发的渲染，由于它的超级复杂性，毛发根数众多，如果模拟每根毛发的light transport那将是一个巨大的计算量，会拖慢渲染速度。<strong>实时渲染中速度是首要，在保证速度的前提下，尽可能的提升质量</strong>。</li><li>物理正确：&quot;PB”在实时渲染中由于做了大量的简化来保证速度，因此严格来说<strong>基本都不是基于物理</strong>(Physically-Based)的</li></ul><h2 id="pbr中的材质分类"><a class="markdownIt-Anchor" href="#pbr中的材质分类"></a> PBR中的材质分类</h2><h3 id="1基于表面定义的材质"><a class="markdownIt-Anchor" href="#1基于表面定义的材质"></a> 1.基于表面定义的材质</h3><p>大部分只是微表面模型（Microfacet models），有时候并不是完全基于物理的；还有一种是迪士尼原则性BRDF（Disney principled BRDFs），对艺术家友好，但仍然不是PBR。</p><h3 id="2基于体积上定义的材质"><a class="markdownIt-Anchor" href="#2基于体积上定义的材质"></a> 2.基于<strong>体积上定义的材质</strong></h3><p>由于光线会进入到云，烟，雾，皮肤，头发等体积里，在RTR中基于体积上要比基于表面的渲染困难许多，我们大部分考虑的还是光线在这些体积中作用一次(single)和多次(multiple)的分离考虑方法。</p><h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3><ol><li>对于PBR材质来说,在RTR中并没有什么新理论，我们所用的都是离线渲染中仍在使用的，但是放在RTR中就会变得开销巨大。</li><li>因此在RTR中我们更多的是考虑用来解决问题的Hacks方法，因为RTR中速度是首要的。</li></ol><h1 id="基于物理的材质"><a class="markdownIt-Anchor" href="#基于物理的材质"></a> 基于物理的材质</h1><h2 id="微表面模型-microfacet-brdf"><a class="markdownIt-Anchor" href="#微表面模型-microfacet-brdf"></a> 微表面模型 <strong><strong>Microfacet BRDF</strong></strong></h2><h3 id="介绍-2"><a class="markdownIt-Anchor" href="#介绍-2"></a> 介绍</h3><p><strong>微表面模型（microfacet model）</strong> 是一种基于物理的局部光照模型，它假设物体的表面是凹凸不平的，宏观的表面由许多微小的平面（即微表面）构成，光线在每个微平面上发生理想镜面反射或折射。在games101中的材质一节已经讲述过，参见：<a href="https://dreamfields.github.io/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/#%E5%BE%AE%E5%B9%B3%E9%9D%A2%E7%90%86%E8%AE%BA">Lecture 17 材质（微平面理论，Cook-Torrance BRDF） - Dream Fields</a></p><p>由微表面模型定义的Cook-Torrance<strong>镜面反射</strong>BRDF 如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi mathvariant="normal">r</mi></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mi>F</mi><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>h</mi><mo fence="true">)</mo></mrow><mi>G</mi><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo separator="true">,</mo><mi>h</mi><mo fence="true">)</mo></mrow><mi>D</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mrow><mn>4</mn><mrow><mo fence="true">∣</mo><msub><mi>ω</mi><mi>i</mi></msub><mo>⋅</mo><mi>n</mi><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><msub><mi>ω</mi><mi>o</mi></msub><mo>⋅</mo><mi>n</mi><mo fence="true">∣</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_{\mathrm{r}}\left(\omega_{i}, \omega_{o}\right)=\frac{F\left(\omega_{i}, h\right) G\left(\omega_{i}, \omega_{o}, h\right) D(h)}{4\left|\omega_{i} \cdot n\right|\left|\omega_{o} \cdot n\right|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>Cook-Torrance BRDF的镜面反射部分包含三个函数，此外分母部分还有一个标准化因子 。字母D，F与G分别代表着一种类型的函数，各个函数分别用来近似的计算出表面反射特性的一个特定部分。三个函数分别为法线分布函数(Normal Distribution Function)，菲涅尔方程(Fresnel Rquation)和几何函数(Geometry Function)：</p><ul><li>F 菲涅尔方程：菲涅尔方程描述的是在不同的表面角下表面所反射的光线所占的比率。以上的每一种函数都是用来估算相应的物理参数的，而且你会发现用来实现相应物理机制的每种函数都有不止一种形式。</li><li>G 几何函数：描述了微平面自成阴影的属性。当一个平面相对比较粗糙的时候，平面表面上的微平面有可能挡住其他的微平面从而减少表面所反射的光线（grassing。</li><li>D 法线分布函数：估算在受到表面粗糙度的影响下，取向方向与中间向量(half vector)一致的微平面的数量。这是用来估算微平面的主要函数。</li></ul><p>下面详细介绍各个项的意义。</p><h3 id="菲涅耳项-fresnel-term"><a class="markdownIt-Anchor" href="#菲涅耳项-fresnel-term"></a> <strong><strong>菲涅耳项 Fresnel Term</strong></strong></h3><p><strong>菲涅耳项</strong>描述了景物表面反射光线的比例依赖于光线的入射角和偏振这一现象。参见：<a href="https://dreamfields.github.io/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/#%E8%8F%B2%E6%B6%85%E8%80%B3%E5%8F%8D%E5%B0%84fresnel-reflection">Lecture 17 材质（微平面理论，Cook-Torrance BRDF） - Dream Fields</a></p><p>总结来说，可以对菲涅尔项使用 <strong>Schlick’s approximation</strong>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">h</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">k</mi></mrow></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>R</mi><mn>0</mn></msub><mo>+</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>R</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><msup><mo stretchy="false">)</mo><mn>5</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mn>0</mn></msub><mo>=</mo><msup><mrow><mo fence="true">(</mo><mfrac><mrow><msub><mi>η</mi><mi>i</mi></msub><mo>−</mo><msub><mi>η</mi><mi>t</mi></msub></mrow><mrow><msub><mi>η</mi><mi>i</mi></msub><mo>+</mo><msub><mi>η</mi><mi>t</mi></msub></mrow></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}R_{\mathrm{Schlick}}(\theta)=R_{0}+\left(1-R_{0}\right)(1-\cos \theta)^{5} \\R_{0}=\left(\frac{\eta_{i}-\eta_{t}}{\eta_{i}+\eta_{t}}\right)^{2}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.204028em;vertical-align:-1.352014em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.852014em;"><span style="top:-4.366022em;"><span class="pstrut" style="height:3.354008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">S</span><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">h</span><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">i</span><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">k</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.652014em;"><span class="pstrut" style="height:3.354008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.352014em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>相当于光线垂直入射表面时的反射系数，它的值取决于物体。</p><p>对于该近似的改进参见：<a href="https://zhuanlan.zhihu.com/p/563684531">《GAMES202：高质量实时渲染》4 实时高质量着色 2.1.1 Fresnel Term</a></p><h3 id="微表面的法线分布-normal-distribution-function"><a class="markdownIt-Anchor" href="#微表面的法线分布-normal-distribution-function"></a> <strong><strong>微表面的法线分布 Normal Distribution Function</strong></strong></h3><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled.png" alt></p><p><strong>微表面法线分布函数（normal distribution function）</strong> 决定了有多大比例的微表面法线朝向 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span>，它是定义在半球面上的三维随机变量服从分布的概率密度函数。</p><ul><li>分布的数学期望是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span></span></span></span></li><li>分布的方差越小、越集中，则描述的材质越接近于有光泽的材质（glossy），</li><li>分布的方差越大、越分散，则描述的材质越接近于漫反射材质（diffuse）。</li></ul><p>我们有有很多不同的模型来描述法线分布：常用的Beckmann，GGX等等模型；Yan 等人提出的一系列法线分布函数（NDF）。下面介绍其中几种：</p><p><strong>Beckmann法线分布函数</strong></p><p>由定义在坡度空间（slope space）上的<strong>正态分布导出：</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mtext>Beckmann </mtext></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mo><mi>tan</mi><mo>⁡</mo></mo><mn>2</mn></msup><msub><mi>θ</mi><mi>h</mi></msub></mrow><msup><mi>α</mi><mn>2</mn></msup></mfrac></mrow></msup><mrow><mi>π</mi><msup><mi>α</mi><mn>2</mn></msup><msup><mo><mi>cos</mi><mo>⁡</mo></mo><mn>4</mn></msup><msub><mi>θ</mi><mi>h</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">D_{\text {Beckmann }}(h)=\frac{e^{-\frac{\tan ^{2} \theta_{h}}{\alpha^{2}}}}{\pi \alpha^{2} \cos ^{4} \theta_{h}} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Beckmann </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.89191em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05591em;"><span style="top:-2.69291em;"><span class="pstrut" style="height:3.3789100000000003em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">cos</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.6089100000000003em;"><span class="pstrut" style="height:3.3789100000000003em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.055910000000001em;"><span class="pstrut" style="height:3.3789100000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.37891em;"><span style="top:-3.4534200000000004em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3221285714285715em;"><span style="top:-2.5061857142857145em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.573242857142857em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop mtight">tan</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.24533333333333335em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.02778em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34963999999999995em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.49381428571428565em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>是表面的粗糙程度，不同粗糙程度的意思是NDF中lobe是集中在一个点上，还是分布的比较开。类比于高斯函数中用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>来控制胖瘦，也就是标准差。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">\theta_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是微表面法线和宏观表面法线之间的夹角</li></ul><p>由公式可以看出：</p><ol><li><p>该函数的定义只与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>有关，与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span>无关，因此表述的是各向同性的结果，也就是沿着中心旋转是相同的结果。</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%201.png" alt></p></li><li><p>公式中分子的指数中用的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mi>a</mi><mi>n</mi><msub><mi>θ</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">tan \theta_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，因为是定义在Slope space 坡度空间上的，如下图。竖直向上的是宏观法线，微表面的法线延长线与宏观法线的切平面相交。这也保证了在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">\theta_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的定义域内这个值永远有意义：由于高斯函数的定义域是非常大的，但在过了3 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span></span></span></span>之后会缩减到非常小但不是0，为了满足这一性质定义在坡度空间，从而保证在slope space中无限大的函数无论如何也不会出现面朝下的微表面。</p></li></ol><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%202.png" alt></p><p><strong>GGX法线分布函数</strong></p><p>又称 Trowbridge-Reitz 法线分布函数，它的公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi mathvariant="normal">G</mi><mi mathvariant="normal">G</mi><mi mathvariant="normal">X</mi></mrow></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>α</mi><mn>2</mn></msup><mrow><mi>π</mi><msup><mo><mi>cos</mi><mo>⁡</mo></mo><mn>4</mn></msup><msub><mi>θ</mi><mi>h</mi></msub><msup><mrow><mo fence="true">(</mo><msup><mi>α</mi><mn>2</mn></msup><mo>+</mo><msup><mo><mi>tan</mi><mo>⁡</mo></mo><mn>2</mn></msup><msub><mi>θ</mi><mi>h</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">D_{\mathrm{GGX}}(h)=\frac{\alpha^{2}}{\pi \cos ^{4} \theta_{h}\left(\alpha^{2}+\tan ^{2} \theta_{h}\right)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">G</span><span class="mord mathrm mtight">G</span><span class="mord mathrm mtight">X</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.785126em;vertical-align:-1.2940180000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.054008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">cos</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">tan</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8190879999999999em;"><span style="top:-3.0679800000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.054008em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.284008em;"><span class="pstrut" style="height:3.054008em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.731008em;"><span class="pstrut" style="height:3.054008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2940180000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>化简后的公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi mathvariant="normal">G</mi><mi mathvariant="normal">G</mi><mi mathvariant="normal">X</mi></mrow></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msup><mi>α</mi><mn>2</mn></msup><mrow><mi>π</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>⋅</mo><mi>h</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">(</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">D_{\mathrm{GGX}}(h)=\frac{\alpha^{2}}{\pi ((n \cdot h)^2(\alpha^{2}-1)+1)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">G</span><span class="mord mathrm mtight">G</span><span class="mord mathrm mtight">X</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.427108em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">h</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中：$ \alpha = roughness^2 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">，</mi></mrow><annotation encoding="application/x-tex">，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span></span></span></span>h$是半程向量</p><p>和 Beckmann 法线分布函数相比，GGX 法线分布函数更“长尾”（long tail），也就是说，当随机变量的取值偏离其数学期望时，相应的概率下降得更慢一些，如下图：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%203.png" alt></p><p>这会带来两个好处:</p><ol><li>Beckmann的高光会逐渐消失，而GGX的高光会减少但不会消失，这就意味着高光的周围我们看到一种光晕的现象。</li><li>GGX除了高光部分，其余部分会像Diffuse的感觉。</li></ol><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%204.png" alt></p><p><strong>GTR法线分布函数（GGX的扩展）</strong></p><p>Brent Burley 在总结 Disney Principled BRDF 时，提出了更“长尾”的 GTR 法线分布函数（Generalized-Trowbridge-Reitz），它的公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi mathvariant="normal">G</mi><mi mathvariant="normal">T</mi><mi mathvariant="normal">R</mi></mrow></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mi>c</mi><msup><mrow><mo fence="true">(</mo><msup><mi>α</mi><mn>2</mn></msup><msup><mo><mi>cos</mi><mo>⁡</mo></mo><mn>2</mn></msup><msub><mi>θ</mi><mi>h</mi></msub><mo>+</mo><msup><mo><mi>sin</mi><mo>⁡</mo></mo><mn>2</mn></msup><msub><mi>θ</mi><mi>h</mi></msub><mo fence="true">)</mo></mrow><mi>γ</mi></msup></mfrac></mrow><annotation encoding="application/x-tex">D_{\mathrm{GTR}}(h)=\frac{c}{\left(\alpha^{2} \cos ^{2} \theta_{h}+\sin ^{2} \theta_{h}\right)^{\gamma}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">G</span><span class="mord mathrm mtight">T</span><span class="mord mathrm mtight">R</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.27373em;vertical-align:-1.16617em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.18384em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">cos</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop">sin</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.871868em;"><span style="top:-3.12076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92616em;"><span style="top:-3.324768em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.16617em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span> 是数据归一化常数；</li><li>增加了参数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span>，根据其值的不同可以调节拖尾长度。当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">γ=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>α</mi><mn>2</mn></msup><mi mathvariant="normal">/</mi><mi>π</mi></mrow><annotation encoding="application/x-tex">c=α^2/π</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span>，此时 GTR 退化为 GGX；超过10时会接近Beckmann。</li></ul><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%205.png" alt></p><p>在实时渲染中，除非特殊场景（例如雪地），出于效率的考虑，一般还是使用相对简单的法线分布函数。</p><h3 id="阴影遮蔽项-shadowing-masking-term"><a class="markdownIt-Anchor" href="#阴影遮蔽项-shadowing-masking-term"></a> 阴影遮蔽项 <strong><strong>Shadowing-Masking Term</strong></strong></h3><p><strong>阴影遮蔽项（shadowing-masking term）</strong> 又称几何项（geometry term），是光能由于微表面之间相互遮挡（自遮挡）而衰减的系数。</p><ul><li>当光线入射方向或观察方向几乎垂直于景物表面时，微表面之间差不多没有相互遮挡，几何项接近于1；</li><li>当光线入射方向或观察方向几乎平行于景物表面、接近于掠射（grazing angle）时，微表面之间相互遮挡的程度很大，几何项接近于0。</li></ul><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%206.png" alt></p><p>如上图，有两种情况：</p><ul><li>左边这中从light出发，发生的微表面遮挡现象叫做Shadowing</li><li>右边这种从eye出发，发生的微表面遮挡现象被称为Masking</li></ul><p>效果：由于微表面的自遮挡，实际计算出的结果会比理想结果亮，所以加上G项使得结果变暗接近理想结果。</p><p>引入G项的理论分析：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi mathvariant="normal">r</mi></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mi>F</mi><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>h</mi><mo fence="true">)</mo></mrow><mi>G</mi><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo separator="true">,</mo><mi>h</mi><mo fence="true">)</mo></mrow><mi>D</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><mrow><mn>4</mn><mrow><mo fence="true">∣</mo><msub><mi>ω</mi><mi>i</mi></msub><mo>⋅</mo><mi>n</mi><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><msub><mi>ω</mi><mi>o</mi></msub><mo>⋅</mo><mi>n</mi><mo fence="true">∣</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_{\mathrm{r}}\left(\omega_{i}, \omega_{o}\right)=\frac{F\left(\omega_{i}, h\right) G\left(\omega_{i}, \omega_{o}, h\right) D(h)}{4\left|\omega_{i} \cdot n\right|\left|\omega_{o} \cdot n\right|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>对于整个BRDF，如果从grazing angle看，不考虑G项时，分子为正常函数，没有很大的值。对于分母，当在grazing angle时入射方向、出射方向与法线角度接近90°，因此点乘结果接近0，分子除以一个接近于0的值会导致结果变的巨大，就会导致我们看到的这张图整个外圈是白的。</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%207.png" alt></p><p><strong>G项和法线分布函数有关，可由其进行预测</strong>，在 Smith shadowing-masking term 的假设下，双向的阴影遮蔽项被拆解成了Shadowing阴影项和Masking遮蔽项：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mrow><mi>S</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>h</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo separator="true">,</mo><mi>n</mi><mo fence="true">)</mo></mrow><mo>=</mo><msub><mi>G</mi><mrow><mi>S</mi><mi>c</mi><mi>h</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>k</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>n</mi><mo fence="true">)</mo></mrow><msub><mi>G</mi><mrow><mi>S</mi><mi>c</mi><mi>h</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>k</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>o</mi></msub><mo separator="true">,</mo><mi>n</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">G_{Smith}\left(\omega_{i}, \omega_{o}, n\right)=G_{Schlick}\left(\omega_{i}, n\right) G_{Schlick}\left(\omega_{o}, n\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>G</mi><mrow><mi>S</mi><mi>c</mi><mi>h</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>k</mi></mrow></msub><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo>⋅</mo><mi>v</mi></mrow><mrow><mi>n</mi><mo>⋅</mo><mi>v</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mo>+</mo><mi>k</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">G_{Schlick}(v,n)=\frac{n\cdot v}{n\cdot v(1-k)+k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574500000000002em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.12145em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>r</mi><mi>o</mi><mi>u</mi><mi>g</mi><mi>h</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi>s</mi><mo>+</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>8</mn></mfrac></mrow><annotation encoding="application/x-tex">k=\frac{(roughness+1)^2}{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">h</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>下图是绿线是GGX，红线是Beckmann所预测的G项结果（右图），在grazing angle下G项接近0，除以BRDF中接近0的分母会得到一个正常值，解决了外圈发白的问题。</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%208.png" alt></p><h2 id="kulla-conty-brdf"><a class="markdownIt-Anchor" href="#kulla-conty-brdf"></a> Kulla-Conty BRDF</h2><h3 id="问题引入"><a class="markdownIt-Anchor" href="#问题引入"></a> 问题引入</h3><p>微表面模型的 BRDF(Microfacet BRDF) 存在一个根本问题，如下图的白炉测试：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%209.png" alt></p><p>上图第一行：随着粗糙程度变大，我们渲染得到的结果却越暗</p><p>上图第二行：在uniform的环境光照（各处光照一样）下如果能量没有损失，则渲染出的物理应该和背景同色，可以看到，物体越粗糙，会越暗。</p><p>这个根本问题就是：<strong>忽略了微平面间的多次弹射</strong>，这就导致了<strong>材质的能量损失</strong>，并且当材质的粗糙度越高时，能量的损失会越严重。</p><p>解决的核心思路：</p><ul><li>当反射光不被遮挡的时候，这些光就会被看到；</li><li>当反射光被微表面遮挡的时候，认为<strong>这些被挡住的光将进行后续的弹射</strong>，直到能被看到</li></ul><h3 id="the-kulla-conty-approximation"><a class="markdownIt-Anchor" href="#the-kulla-conty-approximation"></a> <strong>The Kulla-Conty Approximation</strong></h3><p>Heitz 等人在论文中提出了精确的补偿方法，但是效率对于实时渲染而言太低了。为了适用于实时渲染，Kulla 和 Conty 提出了一种较为简单且高效的方法，也就是<strong>The Kulla-Conty Approximation</strong>——通过引入一个<strong>经验性的</strong>微表面BRDF 的补偿项（Energy Compensation Term），来补偿光线的多次弹射，使得材质的渲染结果可以近似保持能量守恒。</p><p>需要考虑以下两点：</p><ul><li>反射时有多少能量丢失了？</li><li>最后反射出的能量有多少?</li></ul><h3 id="补偿项推导与计算"><a class="markdownIt-Anchor" href="#补偿项推导与计算"></a> 补偿项推导与计算</h3><ol><li><strong>首先计算最后反射出多少能量</strong></li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>E</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><msubsup><mo>∫</mo><mn>0</mn><mrow><mn>2</mn><mi>π</mi></mrow></msubsup><msubsup><mo>∫</mo><mn>0</mn><mfrac><mi>π</mi><mn>2</mn></mfrac></msubsup><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>μ</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>φ</mi><mo fence="true">)</mo></mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi mathvariant="normal">d</mi><mi>θ</mi><mi mathvariant="normal">d</mi><mi>φ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover><mo><mo>⟹</mo></mo><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi mathvariant="normal">d</mi><mi>θ</mi><mo>=</mo><mi mathvariant="normal">d</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mover><msubsup><mo>∫</mo><mn>0</mn><mrow><mn>2</mn><mi>π</mi></mrow></msubsup><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>μ</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>φ</mi><mo fence="true">)</mo></mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi mathvariant="normal">d</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mi mathvariant="normal">d</mi><mi>φ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover><mo><mo>⟹</mo></mo><mrow><mi>μ</mi><mo>=</mo><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow></mover><msubsup><mo>∫</mo><mn>0</mn><mrow><mn>2</mn><mi>π</mi></mrow></msubsup><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>μ</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>φ</mi><mo fence="true">)</mo></mrow><msub><mi>μ</mi><mi>i</mi></msub><mi mathvariant="normal">d</mi><msub><mi>μ</mi><mi>i</mi></msub><mi mathvariant="normal">d</mi><mi>φ</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}E\left(\mu_{o}\right)=\int_{0}^{2 \pi} \int_{0}^{\frac{\pi}{2}} f\left(\mu_{o}, \mu_{i}, \varphi\right) \cos \theta \sin \theta \mathrm{d} \theta \mathrm{d} \varphi \\\stackrel{\cos \theta \mathrm{d} \theta=\mathrm{d} \sin \theta}{\Longrightarrow} \int_{0}^{2 \pi} \int_{0}^{1} f\left(\mu_{o}, \mu_{i}, \varphi\right) \sin \theta \mathrm{d} \sin \theta \mathrm{d} \varphi \\\stackrel{\mu=\sin \theta}{\Longrightarrow} \int_{0}^{2 \pi} \int_{0}^{1} f\left(\mu_{o}, \mu_{i}, \varphi\right) \mu_{i} \mathrm{d} \mu_{i} \mathrm{d} \varphi \\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.790304000000001em;vertical-align:-2.1451520000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.645152em;"><span style="top:-4.960888em;"><span class="pstrut" style="height:3.357716em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0419800000000001em;"><span style="top:-2.64418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.5579em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">φ</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">φ</span></span></span><span style="top:-3.290279999999999em;"><span class="pstrut" style="height:3.357716em;"></span><span class="mord"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3106080000000002em;"><span style="top:-2.9995em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⟹</span></span></span><span style="top:-3.7245em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">cos</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight">sin</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0245em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">φ</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">φ</span></span></span><span style="top:-1.5725639999999996em;"><span class="pstrut" style="height:3.357716em;"></span><span class="mord"><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.357716em;"><span style="top:-2.9995em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⟹</span></span></span><span style="top:-3.771608em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span><span class="mrel mtight">=</span><span class="mop mtight">sin</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.0245em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">φ</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1451520000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>上式的计算要注意：</p><ul><li><p>只计算上半球所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>的积分域为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>π</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,\pi/2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>；</p></li><li><p>单位立体角大小是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mtext> </mtext><mi>θ</mi><mi mathvariant="normal">d</mi><mi>φ</mi></mrow><annotation encoding="application/x-tex">\sin \theta \ \theta \mathrm{d} \varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">φ</span></span></span></span> ，与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>R</mi><mi>D</mi><mi>F</mi><mo>⋅</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow><annotation encoding="application/x-tex">BRDF \cdot cos\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span></span></span>放在一起进行积分</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%201.png" alt></p></li><li><p>我们认为任何方向入射的Radiance是1，也就是rendering equation中的Lighting项是1（因为是1所以式子中没有出现）</p></li><li><p>假设BRDF是各向同性，与入射光、反射光方向无关</p></li><li><p>最终积分的意义是，uniform的lighting=1的情况下，在经历了1 次bounce之后射出的总能量</p></li></ul><ol><li><strong>计算补偿项</strong></li></ol><p>由于最后反射出的总能量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">E\left(\mu_{o}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>在0-1之间，那么在方向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">\mu_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上损失的能量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi>E</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">1-E\left(\mu_{o}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，于是在所有方向上反射出来的平均能量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo>=</mo><mfrac><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>E</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mi>μ</mi><mi mathvariant="normal">d</mi><mi>μ</mi></mrow><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>μ</mi><mi mathvariant="normal">d</mi><mi>μ</mi></mrow></mfrac><mo>=</mo><mn>2</mn><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>E</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mi>μ</mi><mi mathvariant="normal">d</mi><mi>μ</mi></mrow><annotation encoding="application/x-tex">E_{avg }=\frac{\int_{0}^{1} E(\mu) \mu \mathrm{d} \mu}{\int_{0}^{1} \mu \mathrm{d} \mu}=2 \int_{0}^{1} E(\mu) \mu \mathrm{d} \mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0096560000000006em;vertical-align:-1.2548280000000003em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7548280000000003em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.009008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">μ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">μ</span></span></span><span style="top:-3.239008em;"><span class="pstrut" style="height:3.009008em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7548280000000003em;"><span class="pstrut" style="height:3.009008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord mathdefault">μ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">μ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2548280000000003em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4759580000000003em;vertical-align:-0.9119499999999999em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5640080000000003em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord mathdefault">μ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">μ</span></span></span></span></span></p><p>由于要补偿的BRDF也具有可逆性，还要考虑入射时所丢失的能量，于是乘上另外一项<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi>E</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">1-E\left(\mu_{i}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>，因此Kulla 和 Conty提出的最终的BRDF补偿项<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>m</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{ms}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>m</mi><mi>s</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>μ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>E</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><mi>E</mi><mrow><mo fence="true">(</mo><msub><mi>μ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><mrow><mi>π</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_{ms}\left(\mu_{o}, \mu_{i}\right)=\frac{\left(1-E\left(\mu_{o}\right)\right)\left(1-E\left(\mu_{i}\right)\right)}{\pi\left(1-E_{avg}\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.399108em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>可以验证其积分的结果是正确的，就是损失的能量：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2010.png" alt></p><ol><li><strong>预计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>——打表</strong></li></ol><p>由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(\mu_o)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>已经是一个二重积分了，计算仍然比较复杂，而对于一个很复杂的、不一定有解析解的积分可以通过<strong>预计算或打表格</strong>的方式来解决。</p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span> 随粗糙度和角度两个变量变化，而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 仅随粗糙度变化，通过预计算可以得到类似于下图的表：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2011.png" alt></p><p>到此，就可以将计算得到的损失的能量加上去，效果如下：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2012.png" alt></p><ol><li><strong>颜色材质的计算</strong></li></ol><p><strong>思路</strong>：对于有颜色的材质，会有自然存在的能量损失，这样就需要在之前计算得到的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>m</mi><mi>s</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>μ</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>μ</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{ms}(\mu_{o},\mu_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 上乘上一个附加的 BRDF 项 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{add}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，也就是先假设没有颜色来计算补偿项，然后考虑物体对颜色的吸收（吸收了其它波长的光，所以才会反射出某种颜色）产生的损失。</p><p><strong>定义引入</strong>：平均的菲涅尔项<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，该项描述了——假设在材质中的微平面之间发生了多次反射，不管入射角多大，平均每次发生反射会有多少比例的能量反射出去。也就是说，<strong>在计算没有颜色的补偿项的时候，默认菲涅尔项是1</strong>。该项的计算公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo>=</mo><mfrac><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mi>μ</mi><mi mathvariant="normal">d</mi><mi>μ</mi></mrow><mrow><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>μ</mi><mi mathvariant="normal">d</mi><mi>μ</mi></mrow></mfrac><mo>=</mo><mn>2</mn><msubsup><mo>∫</mo><mn>0</mn><mn>1</mn></msubsup><mi>F</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo><mi>μ</mi><mi mathvariant="normal">d</mi><mi>μ</mi></mrow><annotation encoding="application/x-tex">F_{avg}=\frac{\int_{0}^{1} F(\mu) \mu \mathrm{d} \mu}{\int_{0}^{1} \mu \mathrm{d} \mu}=2 \int_{0}^{1} F(\mu) \mu \mathrm{d} \mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0096560000000006em;vertical-align:-1.2548280000000003em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7548280000000003em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.009008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">μ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">μ</span></span></span><span style="top:-3.239008em;"><span class="pstrut" style="height:3.009008em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7548280000000003em;"><span class="pstrut" style="height:3.009008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord mathdefault">μ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">μ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2548280000000003em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4759580000000003em;vertical-align:-0.9119499999999999em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5640080000000003em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mord mathdefault">μ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">μ</span></span></span></span></span></p><p>于是，光线入射到表面后，发生如下过程（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示从表面反射出来被人眼看到的平均能量）：</p><ul><li><strong>初次反射</strong>，能被直接看到的能量：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>0</mn></msub><mo>=</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_0 = F_{avg}E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>（1）首先假设入射能量为1，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的比例能够反射；</p><p>（2）发生反射的那部分有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的能量离开了表面被人眼看到，因此相乘；</p><hr><ul><li><strong>在微平面之间反射（可以扩充为散射） 1 次后</strong>，看到的能量：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>=</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_1 = F_{avg}(1-E_{avg}) \cdot F_{avg}E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>（1）初次反射没有被直接看到的能量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1-E_{avg})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，意味着反射到了另一个微表面，那么反射到另一个微表面的能量是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{avg}(1-E_{avg})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；</p><p>（2）在另一个微表面上，入射的能量就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{avg}(1-E_{avg})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的比例能够反射；</p><p>（3）发生反射的那部分有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的能量离开了表面被人眼看到，因此相乘；</p><hr><ul><li>在微平面之间散射 2 次后，看到的能量比例：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{avg}(1-E_{avg}) \cdot F_{avg}(1-E_{avg}) \cdot F_{avg}E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><hr><ul><li>……</li></ul><hr><ul><li>在微表面之间散射k次后，看到的能量比例：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow><mi>k</mi></msubsup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msup><mo stretchy="false">)</mo><mi>k</mi></msup><mo>⋅</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{avg}^k(1-E_{avg})^k  \cdot F_{avg}E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.282216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1852159999999998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>将这些项相加，得到最终的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{add}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow></msub><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><msubsup><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow><mi>k</mi></msubsup><msup><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo fence="true">)</mo></mrow><mi>k</mi></msup><mo>⋅</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><mrow><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><mrow><mn>1</mn><mo>−</mo><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">f_{add}=\frac{\sum_{i=1}^{\infty} F_{avg }^{k}\left(1-E_{avg }\right)^{k} \cdot F_{avg } E_{avg }}{1-E_{avg }}=\frac{F_{avg } E_{avg }}{1-F_{avg }\left(1-E_{avg }\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.7342239999999998em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7621159999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.773108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.332438em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>最后对于 Kulla-Conty 材质，可以得到的 BRDF 项 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">f_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi></mrow></msub><mo>+</mo><msub><mi>f</mi><mrow><mi>a</mi><mi>d</mi><mi>d</mi></mrow></msub><mo>∗</mo><msub><mi>f</mi><mrow><mi>m</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_r = f_{micro}+f_{add}*f_{ms}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>m</mi><mi>i</mi><mi>c</mi><mi>r</mi><mi>o</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{micro}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是原本的微表面模型定义的BRDF，后面是补偿项；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 、补偿系数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>m</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{ms}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和菲涅尔项均值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mrow><mi>a</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 都可以在开始绘制前预计算，在解绘制方程时直接调用相应的数值。</p><p>到此，效果如下：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2013.png" alt></p><p>Kulla-Conty 方法在物理上是正确的，但是有时为了方便，会直接使用漫反射材质的BRDF补偿项，则能量不守恒，在物理上是错误的。不过，有一些研究在考虑构造出能量守恒的漫反射波瓣的方法。</p><h2 id="disneys-principled-brdf"><a class="markdownIt-Anchor" href="#disneys-principled-brdf"></a> <strong><strong>Disney’s Principled BRDF</strong></strong></h2><p>微表面模型的问题：</p><ol><li>微表面模型能够描述材质有限，像是刷上一层清漆的木桌表面这样的材质，单独地使用微表面模型就难以建模。因为微表面模型最多解释一层材质，而无法解释多层材质。</li><li>基于物理的模型直接使用折射率这样的物理量作为参数，而这些参数和材质最终呈现的效果没有直观的联系，对艺术家并不友好。</li></ol><p>一些材质在建模时为了让艺术家用起来顺手，物理上的正确性就没有那么的必要了。Disney Principled BRDF 便是在满足能量守恒，物理光学，以及艺术家用起来方便等条件下妥协的产物，但是在RTR中我们认为Disney’s principle BRDF也算是PBR材质。</p><p>它有几个重要的设计原则：</p><ul><li>使用直观的参数，而不是物理参数来控制模型呈现的效果，比如使用平缓、饱和度等；</li><li>模型使用的参数尽可能的少；</li><li>参数的合理范围应该是从 0 到 1；</li><li>在必要时，即使参数的取值超出了 [0,1] 范围，也能得到有意义的结果；</li><li>所有的参数组合应该尽可能的稳健和合理；</li></ul><p>下图的表格独立显示了各个参数在不同数值下的效果，在实际操作时这些参数是可以组合、叠加起来：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2014.png" alt></p><p><strong>Disney’s principle BRDF的优点:</strong></p><ol><li>容易理解和使用各参数(属性)</li><li>参数的混合组合使得可以在一个模型上显示出很多不同的材质</li><li>开源</li></ol><p><strong>Disney’s principle BRDF的缺点:</strong></p><ol><li>并不是完全基于物理的</li><li>巨大的参数空间使得拥有强大的表示能力，但是会造成冗余现象</li></ol><h1 id="基于物理的着色"><a class="markdownIt-Anchor" href="#基于物理的着色"></a> 基于物理的着色</h1><h2 id="ltclinearly-transformed-cosines"><a class="markdownIt-Anchor" href="#ltclinearly-transformed-cosines"></a> <strong><strong>LTC（Linearly Transformed Cosines）</strong></strong></h2><p>根据多边形光源着色物体表面，需要在多边形覆盖的区域中对定义在球面上的 BRDF 计算定积分，但是直接计算定积分相当困难。</p><p><strong>LTC（Linearly Transformed Cosines）</strong> 即在多边形光源的照明下的着色微表面模型，该算法通过转换多边形光源及微表面模型的散射波瓣（Lobe），在<strong>不考虑可见性</strong>的情况下快速地求解出渲染方程的解析解。</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2015.png" alt></p><p><strong>特性</strong>：</p><ol><li>主要是针对GGX模型，对于其他模型原理也同样适用</li><li>做的是<strong>不考虑shadow</strong>的shading</li><li><strong>光源是多边形光源</strong>，且发出的radiance时uniform的</li><li><strong>LTC是避免在多边形光源上采样的方法，Split Sum是避免在环境光上采样的方法</strong></li></ol><p><strong>关于上面提到的Lobe</strong>：</p><p>Lobe就是在固定一边方向下的BRDF的函数图象，由于BRDF是一个4维的函数，在固定一边之后就变为了2维的函数。大多数高光BRDF，都是在半角向量接近宏表面法线时反射亮度最大，向上或向下时其值都会减小,使得其函数图象像叶片，故称为lobe。</p><p><strong>LTC方法的思路</strong>：</p><p>在给定了观察方向 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>ω</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">ω_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 后，对于任何 BRDF 的散射波瓣 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>ω</mi><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(ωi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>，都可以通过一个线性变换 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>得到余弦函数描述的波瓣 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi mathvariant="normal">⁡</mi><mi>ω</mi><msub><mi mathvariant="normal">′</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">cos⁡ω′_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7055600000000001em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord">⁡</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mord"><span class="mord">′</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，同时，该变换也将光的入射方向、多边形光源（也就是渲染方程的积分域）进行变换。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">cos(\theta_s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是一个球面分布函数（<strong>余弦分布函数</strong>），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>w</mi><mi>i</mi><mo separator="true">,</mo><mi>w</mi><mi>o</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(p,wi,wo)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">o</span><span class="mclose">)</span></span></span></span>也是一个球面分布函数，因此其实我们是让一个球面分布函数通过线性变换变成了另一个球面分布函数。</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2016.png" alt></p><p>因此，该方法通过线性变换<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，使得一个多边形光源（积分域为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>）照亮某个物体产生的lobe（2D BRDF Lobe），等价于——用一个新的多变形光源（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>）去照亮一个余弦函数定义的lobe（Cosine Lobe）来替换，且这样一种方法是能够得到解析解的（<strong>也就是不需要采样，将数值代入就可以得到结果</strong>）。</p><p>于是就可以<strong>将shading point点任意BRDF的Lobe在任意多边形光源下积分求shading的问题转变为在一个固定cos函数下对任意的多边形光源积分求shading</strong>。</p><p><strong>LTC方法的步骤</strong>：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2017.png" alt></p><ul><li>首先<strong>预计算</strong>一系列不同观察方向和粗糙度下 Microfacet BRDF 转换到余弦波瓣的线性变换  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li>然后在着色时查表，根据线性变换  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>转换光线入射方向立体角积分微元 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{d}w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和多边形光源积分域 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span></li><li>最后对转换为余弦波瓣的 BRDF 计算定积分。</li></ul><p>定积分解析解的推导：<a href="https://hal.archives-ouvertes.fr/hal-01458129/document">Geometric Derivation of the Irradiance of Polygonal Lights (archives-ouvertes.fr)</a></p><p><strong>效果</strong>：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2018.png" alt></p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2019.png" alt></p><h1 id="非真实感渲染-npr"><a class="markdownIt-Anchor" href="#非真实感渲染-npr"></a> <strong><strong>非真实感渲染 NPR</strong></strong></h1><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2020.png" alt></p><p>对比于真实感绘制模拟景物在真实环境中的光照效果，生成犹如照片的图像，<strong>非真实感渲染（Non-Photorealistic Rendering，NPR）</strong> 模拟艺术式的绘制风格，生成风格化的图像。</p><p>在实时渲染中，NPR 的目标是快速而可靠地生成风格化的结果，通常使用一些轻量级的解决方法，在着色器中进行一些简单而巧妙的处理。</p><p><strong>一般的研究思路</strong>：</p><p>从真实感绘制出发，进行合理地抽象，强调重要的部分，得到风格化的结果。<strong>卡通风格 NPR</strong> 通常描边以强调物体的轮廓（outline），使用分界明显的色块，而不是平滑过渡的颜色。<strong>素描风格 NPR</strong> 则通过不同疏密的线条纹理来生成结果。</p><h2 id="轮廓渲染-outline-rendering"><a class="markdownIt-Anchor" href="#轮廓渲染-outline-rendering"></a> 轮廓渲染 O<strong><strong>utline rendering</strong></strong></h2><p>通常所讲的“描边”（contours）是轮廓渲染的一个子集。</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2021.png" alt></p><p>如图，将一个盒子细分为各种类型的&quot;边缘&quot;：</p><ul><li>【B】Boundary/border edge 物体外边界上</li><li>【C】Crease 折痕，通常是在两个表面之间的</li><li>【M】Material 材质边界</li><li>【S】Sihouette edge 必须是在物体外边界上且由多个面共享的</li></ul><p>下面介绍几种描边方法。</p><h3 id="基于法线的描边-shading-normal-contour-edges"><a class="markdownIt-Anchor" href="#基于法线的描边-shading-normal-contour-edges"></a> 基于法线的描边 Shading normal contour edges</h3><p>为了强调物体的轮廓，可以在着色时考虑描边的效果。一个简单的处理方法是：</p><ul><li>设定阈值</li><li>判断：法线方向与观察方向近乎于垂直的表面更暗一些，来得到Sihouette edge</li></ul><p>不过，这样得到的描边效果可能粗细不一，原因在于通过判断角度来进行描边操作，无法固定边的粗细，因此法线变化平缓的地方描边结果就比较粗，法线变化尖锐的地方就会比较细，如下图：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2022.png" alt></p><h3 id="基于几何的描边"><a class="markdownIt-Anchor" href="#基于几何的描边"></a> 基于几何的描边</h3><p>当我们去渲染一个物体/模型时候，如果我们把模型加大一圈，然后大模型放在原模型背后并且把新模型完全渲染成黑，就得到了描边的效果。</p><p>在实际操作中，有更有效的方法：将背面的每个顶点沿着顶点的法线方向向外偏移，从而达到背面外拓，即让模型的背面比正面更大一些，并在着色时指定背面的颜色是黑色的。于是，绘制出的模型正面就会带有一圈黑边，对应于延伸出的模型背面。</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2023.png" alt></p><p>特性：</p><ul><li>简单稳定，不需要获取三角形的邻接信息，不过只能显示Contour edge</li><li>需要将整个背部的面都渲染，所以这种方式可能造成一些资源浪费</li><li>对于半透明物体的渲染描边，也会产生影响</li></ul><h3 id="基于图像的后期处理的描边"><a class="markdownIt-Anchor" href="#基于图像的后期处理的描边"></a> <strong>基于图像的后期处理的描边</strong></h3><p>基本思路：先生成未描边的正常渲染结果，再通过一些图像处理的方法从而得到这些边并且标上颜色。</p><p>以Sobel detector为例，他的做法是做了图像的filter(卷积)，设计filter kernel得到我们想要的边：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2024.png" alt></p><h2 id="色块-color-blocks"><a class="markdownIt-Anchor" href="#色块-color-blocks"></a> 色块 Color blocks</h2><p>分界明显的色块效果，可以通过：</p><ul><li>首先得到正常的Shading model算出来的结果</li><li>阈值化操作</li></ul><p>阈值化操作可以设定多个值来获得更多的色块：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2025.png" alt></p><p>也可以根据自己需要去将不同风格的结果组合在一起，如diffuse和specular都进行阈值化处理，或者只处理spcular不处理diffuse等组合：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2026.png" alt></p><h2 id="素描风格-strokes-surface-stylization"><a class="markdownIt-Anchor" href="#素描风格-strokes-surface-stylization"></a> 素描风格 Strokes Surface Stylization</h2><p>有时候我们并不想得到色块的感觉，而是想得到素描一样的效果：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2027.png" alt></p><p>一个直观的思路：在素描上，往往越暗的地方需要更多的涂抹，我们把它理解成小格子，越暗的地方格子越多也就是密度越大，因此我们把格子密度与明暗度联系在一起。</p><p>在 2001年，Praun 等人发表了论文《<a href="https://hhoppe.com/hatching.pdf">Real-time hatching</a>》提出了一种生成素描风格图像的方法，用不同疏密的线条来表示模型表面的起伏。提出了 TAMs（tonal art maps）方法进行着色，实现类似手绘素描风格渲染。</p><p>TAMs 由一系列密度不同的线条纹理组成，而各个不同密度的线条纹理都有各自的 MIPMAP：</p><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2028.png" alt></p><p>算法分为两步：</p><ol><li>关于不同明暗设计不同的纹理</li><li>对于不同明暗的纹理设计其密度不变的mipmap，利用密度不变来保证距离远近不改变纹理的明暗。原因在于：如果物体开始远离camera，由于纹理是贴在物体上的，由距离越远导致物体变小，如果纹理映射不改变，纹理密度就会变大。因此，在着色时，就可以根据着色点的明暗及位置选取合适的纹理。</li></ol><p><img src="/2023/01/04/Games202%E5%AE%9E%E6%97%B6%E9%AB%98%E8%B4%A8%E9%87%8F%E7%9D%80%E8%89%B2/Untitled%2029.png" alt></p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=9">Lecture9 Real-time GLobal Illumination (screen space cont.)_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=10">Lecture10 Real-Time Physically-based Materials (surface models)_哔哩哔哩_bilibili</a></p><p><a href="https://zhuanlan.zhihu.com/p/563684531">《GAMES202：高质量实时渲染》4 实时高质量着色：Microfacet Model、LTC（Linearly Transformed Cosines）、非真实感渲染（NPR） - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/384559264">GAMES202 高质量实时渲染笔记Lecture10：Real-Time Physically-Based Materials (Surface models) - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/385438367">GAMES202 高质量实时渲染笔记Lecture11：Real-Time Physically-Based Materials (Surface models cont.) - 知乎 (zhihu.com)</a></p><h1 id="论文"><a class="markdownIt-Anchor" href="#论文"></a> 论文</h1><p>【离线渲染下补偿能量损失】<a href="https://link.zhihu.com/?target=https%3A//eheitzresearch.wordpress.com/240-2/">Multiple-Scattering Microfacet BSDFs with the Smith Model</a></p><p>【Kulla Conty】<a href="https://blog.selfshadow.com/publications/s2017-shading-course/imageworks/s2017_pbs_imageworks_slides_v2.pdf">https://blog.selfshadow.com/publications/s2017-shading-course/imageworks/s2017_pbs_imageworks_slides_v2.pdf</a></p><p>【定积分解析解的推导】<a href="https://hal.archives-ouvertes.fr/hal-01458129/document">Geometric Derivation of the Irradiance of Polygonal Lights (archives-ouvertes.fr)</a></p><p>【Praun TAMs】<a href="https://hhoppe.com/hatching.pdf">https://hhoppe.com/hatching.pdf</a></p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-05实时全局光照</title>
    <link href="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/"/>
    <url>/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>全局光照是用来模拟现实世界中基于物理的真实的光线传输过程，如下图：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled.png" alt></p><p>这是一张通过离线渲染所生成的图片，其中展示了包括能够被光源直接照亮的直接光照、光线在物体之间来回弹射所产生的间接光照、佛像背后 产生的边缘柔和的软阴影、在经过蜡烛这类半透明物体时所产生的散射、在光滑材质表面发生的反射、以及焦散等等真实的物理现象。</p><h3 id="gi算法分类"><a class="markdownIt-Anchor" href="#gi算法分类"></a> GI算法分类</h3><p>实时全局光照（<strong>Real-Time Global Illumination in 3D</strong>），其实就是直接+间接光照，其分类如下：</p><ul><li>图像空间的GI：信息是来自从<strong>灯光看向的场景</strong>所获得的信息。主要有RSM</li><li>3D空间的GI：信息来自于3D空间，在3D空间中进行光线计算，也就是<strong>世界空间</strong>。主要有LPV、VXGI</li><li>屏幕空间的GI：使用的<strong>所有信息都来自屏幕</strong>。主要有SSAO、HBAO、SSDO、SSR</li></ul><h3 id="问题引入"><a class="markdownIt-Anchor" href="#问题引入"></a> 问题引入</h3><p>如果是直接照明，我们可以看到P点在柱子后面,不可能接收到直接光照,我们稀疏的标示出次级光源：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%201.png" alt></p><p>加上一次光线弹射的全局光照，现在的P点就是所有标示次级光源反射出的光照来照亮P点所得到的结果：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%202.png" alt></p><h1 id="图像空间方法-reflective-shadow-maps-rsm"><a class="markdownIt-Anchor" href="#图像空间方法-reflective-shadow-maps-rsm"></a> 图像空间方法-Reflective Shadow Maps (RSM)</h1><p>思路是，为了计算点P的shading需要知道什么？分为以下两个问题。</p><h2 id="问题1哪些表面surface-patch会被直接照到"><a class="markdownIt-Anchor" href="#问题1哪些表面surface-patch会被直接照到"></a> 问题<strong>1：哪些表面（surface patch）会被直接照到？</strong></h2><p><strong>解决：</strong></p><p><strong>使用shadow map</strong>，shadow map上每一个像素可以看成是一个小surface patch。</p><p><strong>假设：</strong></p><p><strong>所有的反射物(次级光源)都是diffuse的。<strong>次级光源如果想照亮点P,观察方向是从P点去观察次级光源的,也就是</strong>对于不同的P点来说出射方向（p到次级光源）是unknown的</strong>,因此是无法计算P点的shading的,为了不依赖于观察方向,在RSM中我们假设，<strong>所有次级光源(reflector)都是diffuse(这里是假设反射物reflector，没有要求接受物receiver点p也是diffuse)</strong>，故outgoing radiance在所有方向上都是uniform的,这样不管从camera看过去还是从点p看过去所得到的结果是一样的.</p><h2 id="问题2如何计算每个surface-patch对着色点p的贡献也就是如何解面光源的渲染方程"><a class="markdownIt-Anchor" href="#问题2如何计算每个surface-patch对着色点p的贡献也就是如何解面光源的渲染方程"></a> 问题<strong>2：如何计算每个surface patch对着色点p的贡献，也就是如何解面光源的渲染方程？</strong></h2><p>回顾辐射度量学的内容：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%203.png" alt></p><ul><li><strong>Radiant Intensity：一个单位立体角上对应的能量。(单位立体角上的光通量)</strong></li><li><strong>Irrdiance：在一个单位面积下对应的能量。(单位面积上的光通量)</strong></li><li><strong>Radiance：一个单位立体角下单位面积上的能量。(个人理解是,单位立体角上通过单位投影面积的光通量)</strong></li></ul><p>每一个小的patch都可能对照亮p点做出贡献,因此我们可以先计算出一个patch做出的贡献,之后用求和的形式将所有patch的贡献加在一起.</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%204.png" alt></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%205.png" alt></p><p>上图的次级光源patch为q，来照亮点p。q其实就是RSM中一个Texel所对应的patch,在games101中我们说过（回顾：<a href="https://dreamfields.github.io/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/#stpe3-%E7%9B%B4%E6%8E%A5%E5%AF%B9%E5%85%89%E6%BA%90%E8%BF%9B%E8%A1%8C%E9%87%87%E6%A0%B7%E5%87%8F%E5%B0%91%E6%97%A0%E6%95%88%E5%85%89%E7%BA%BF">Lecture_14_16_基于物理的渲染 - Dream Fields</a>）,原本计算q对p点的贡献,我们应该是在p点对整个立体角进行采样,但是这样的话很浪费很多的sample,所以<strong>仅仅在light处采样然后去计算p点的shading值。</strong></p><p>而<strong>对光源面积 dA 的积分，就等价于只对光源对应的面积投影到半球立体角的那部分积分（左下角的积分域），换言之就是需要找到 dA 与 dω 的关系即可：</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%206.png" alt></p><p>然后根据立体角的定义：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>ω</mi><mo>=</mo><mi>d</mi><mi>A</mi><mi mathvariant="normal">/</mi><msup><mi>r</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">dω=dA/r^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">A</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>最终得到：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%207.png" alt></p><p>上图中的dA，如果足够小就不用积分，直接用dltaA乘上去即可，而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">L_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>怎么计算呢？</p><p>对于diffuse材质的可反射patch（图中的q），其brdf为常数，入射的irrandance就等于flux（由光源决定）除以点q的面积，代入上图的渲染方程中，q的面积dA消掉。Ep表示次级光源对着色点贡献的入射irradiance：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%208.png" alt></p><h2 id="值得注意的细节"><a class="markdownIt-Anchor" href="#值得注意的细节"></a> 值得注意的细节</h2><ol><li><strong>次级光源能否看到着色点？</strong></li></ol><p>渲染方程中的V是指次级光源到着色点是否可见，如果想解决这个问题，需要为每个次级光源算一次shadow map，这个运算不好算也是很难算的，于是…就不算了。</p><ol><li><strong>并不是所有的pixel都能成为次级光源</strong></li></ol><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%209.png" alt></p><p>由于可见性、方向性以及距离的不同，对于某一个着色点，认为shadow map上所有的pixel不可能都有贡献：</p><ul><li>Visibility（仍然非常难算）</li><li>方向：比如X-1点在shaow map中记录的是桌子的表面，而且这个表面的点法线方向是朝上的，因此根本不可能照亮X点；</li><li>距离：因为远处的次级光源贡献很少，通常只要找距离足够近的次级光源就行了</li></ul><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2010.png" alt></p><p>假设512^2是shadowmap的大小，按每个shadowmap上的一个像素代表一个次级光源来算计算量会很大，为了加速该过程，我们认为在shadow map中着色点x的位置和间接光源xp的距离可以近似为它们在世界空间中的距离。所以我们认为，对着色点x影响大的间接光源在shadow map中一定也是接近的。</p><p>于是我们决定先获取着色点x在shadow map中的投影位置(s,t)，在该位置附近采样间接光源，多选取一点离着色点近的VPL，并且为了弥补越往外采样数越少可能会带来的问题，引入了权重，越近了权重越小，越远的权重越大。那么对于一个shading point差不多找400个次级光源来计算是比较合适的。（以上是某篇论文提出的加速方法）</p><ol><li><strong>数据存储</strong></li></ol><p>RSM在每一个像素p中都需要存储深度值dp，世界坐标xp，法线np，反射光功率ϕp，如下图的可视化效果，四个map对应像素p的四个参数</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2011.png" alt></p><h2 id="优缺点"><a class="markdownIt-Anchor" href="#优缺点"></a> 优缺点</h2><p>RSM其实和离线中<a href="https://dreamfields.github.io/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/#%E5%AE%9E%E6%97%B6%E8%BE%90%E5%B0%84%E5%BA%A6%E7%AE%97%E6%B3%95-instant-radiosity-vpl-many-light-methods">实时辐射度算法 Instant radiosity (VPL / many light methods）</a>概念很接近,RSM其实就是光栅化版本的VPL方法,VPL广义上属于即使辐射度(IR)。RSM和shadowmap一样属于图像空间的方法,在这里当成3D空间的方法一是不会像图像空间记录不下丢失信息受到影响,另外一点LPV方法会基于RSM.</p><p><strong>优点：</strong></p><ul><li><p>易于实现</p></li><li><p>多应用于手电筒的效果（<a href="https://www.gdcvault.com/play/1020475/In-Game-and-Cinematic-Lighting">https://www.gdcvault.com/play/1020475/In-Game-and-Cinematic-Lighting</a>）</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2012.png" alt></p></li></ul><p><strong>缺点：</strong></p><ul><li>性能随着直接光源数的增加而降低(因为需要计算更多的shadow map)</li><li>对于间接光照，没有做可见性检查，即渲染方程中的visibility项</li><li>有许多假设：反射物需要是diffuse等</li><li>需要在质量和采样率上做一个平衡</li></ul><h1 id="3d空间方法-light-propagation-volumes-lpv"><a class="markdownIt-Anchor" href="#3d空间方法-light-propagation-volumes-lpv"></a> 3D空间方法-<strong>Light Propagation Volumes （LPV）</strong></h1><h2 id="简介-2"><a class="markdownIt-Anchor" href="#简介-2"></a> 简介</h2><p><strong>思想：在3D空间中去传播光线,从而利用它做出间接光照从而实现GI</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2013.png" alt></p><p>历史：最早是在Cry Engine 3中被引入的,其初衷是用来做Crysis系列(孤岛危机).如果你是一名系列爱好者应该知道2007年用Cry Engine2做出来的显卡危机,其使用了我们下文要讲的SSAO技术,而Cry Engine3中的一项主要技术是LPV.</p><p><strong>优点：</strong></p><ul><li>Fast；Good quality</li><li>可以处理动态物体，因为每一帧都在进行计算，实时方法</li></ul><p><strong>主要问题:</strong></p><p>如果我们能获得任何一个Shading point上来自四周的radiance的话,就可以立刻得到其间接光照.</p><p><strong>核心思路:</strong></p><p>我们假设光在传播过程中,radiance是uniform的.(intensity会平方衰减)</p><p><strong>核心解法:</strong></p><p>将场景划分为若干个3D网格,每个网格叫做Voxel(体素),在计算完直接光照后,将接受到直接光照的表面看作间接光照在场景中传播的起点.</p><p><strong>主要步骤：</strong></p><ol><li>找出接收直接光照的点</li><li>把这些点注入(inject)到3D网格中作为间接光照(虚拟光源)的传播起点</li><li>在3D网格中传播radiance</li><li>传播完后，渲染场景</li></ol><h2 id="具体步骤"><a class="markdownIt-Anchor" href="#具体步骤"></a> 具体步骤</h2><h3 id="1生成"><a class="markdownIt-Anchor" href="#1生成"></a> 1.生成</h3><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2014.png" alt></p><ul><li>与RSM一样,首先通过Shadow Map找出接受直接光照的表面或物体</li><li>对得到的光源数量可以通过采样一些进行简化，从而降低次级光源数量,最后获得一系列虚拟光源</li></ul><h3 id="2注入"><a class="markdownIt-Anchor" href="#2注入"></a> 2.注入</h3><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2015.png" alt></p><ul><li>预先把场景划分为若干个3D网格(体素)</li><li>把虚拟光源注入到其对应的格子内</li><li>一个格子内可能包含许多不同朝向的虚拟光源,把格子内所有虚拟光源的不同朝向的radiance算出来并sum up从而得到一个往四面八方的radiance</li><li>由于是在空间上的分布,也就可以看作是<strong>球面函数</strong>，自然可以用<strong>SH</strong>来表示(工业界用两阶SH就可以表示各个方向上的radiance初始值)</li></ul><h3 id="3传播"><a class="markdownIt-Anchor" href="#3传播"></a> 3.传播</h3><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2016.png" alt></p><ul><li>由于是3D网格,因此可以向六个面进行传播(上下左右前后),由于radiance是沿直线传播的,我们认为radiance是从网格中心往不同方向进行传播的,穿过哪个表面就往哪个方向传播,比如穿过右表面的radiance,就传播到右边的格子里(不考虑斜角,比如右上方向,我们认为是先到右边格子,再到上面格子)</li><li>每个格子从周围的六个面计算收到的radiance，并用SH表示，可以理解为每个格子实时存储着light transport</li><li>迭代四五次之后,场景中各voxel的radiance趋于稳定</li></ul><h3 id="4渲染"><a class="markdownIt-Anchor" href="#4渲染"></a> 4.渲染</h3><ul><li>对于任意的shading point，找到他所在的网格</li><li>获得所在网格中所有方向的Radicance，计算渲染结果</li></ul><h3 id="存在的问题"><a class="markdownIt-Anchor" href="#存在的问题"></a> 存在的问题</h3><p><strong>漏光现象</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2017.png" alt></p><p>由于我们认为radiance是从格子正中心向四周发散的,当遇到这种情况时，按理说点P反射的radiance是无法照亮墙壁的背后,但是由于我们的假设,会导致墙壁后面也被间接光照照亮,也就是所谓的漏光现象，如下图所示：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2018.png" alt></p><p><strong>漏光问题的解决</strong>：让划分的格子足够小，但是这样会导致存储量增多，而且传播过程中传播的格子量增多，也就导致了速度慢</p><h1 id="3d空间方法-voxel-global-illumination-vxgi"><a class="markdownIt-Anchor" href="#3d空间方法-voxel-global-illumination-vxgi"></a> 3D空间方法-Voxel Global Illumination (VXGI)</h1><h2 id="简介-3"><a class="markdownIt-Anchor" href="#简介-3"></a> 简介</h2><p>VXGI也是一个类似于RSM的2-pass的算法,但是与RSM有一些区别:</p><ul><li><p><strong>次级光源从RSM中的Pixel—&gt;VXGI中的Voxel(格子)</strong>。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2019.png" alt></p><ul><li>RSM 中次级光源是<strong>像素中所包含的微小表面</strong>，这些表面是根据Shadow Map来划分的；</li><li>VXGI把<strong>场景完全离散化成了一系列微小的格子</strong>，可以理解为场景是由一堆乐高堆起来的，如图，这些是最细的层级，也就是最小的格子我们可以在这一层基础上去建立一层大点的格子，依此类推从而根据场景的不同划分<strong>建立出一个Hierachical树形结构的体素</strong>。</li></ul></li><li><p>与LPV相比，<strong>光线从传播变为了追踪</strong>。</p><ul><li>在LPV中,我们将受到直接光照的点注入到场景划分的Voxel之后进行传播,只需要<strong>传播一次</strong>就可以知道场景中任何一个shading point收到间接光照的radiance</li><li>在VXGI中第二趟我们从camera出发,就像有一个Camera Ray打到每一个pixel上,根据pixel上代表的物体材质做出不同的操作。如果是<strong>glossy则打出一个锥形区域</strong>,<strong>diffuse则打出若干个锥形区域</strong>,打出的锥形区域与场景中一些已经存在的voxel相交,这些voxel对于Shading point的贡献可以算出来。也就是我们要对每一个shading point都做一个cone tracing（圆锥）,可想而知,这个速度比起LPV来说是很慢的,但是是可以优化的,暂且不提</li></ul></li></ul><h2 id="具体步骤-2"><a class="markdownIt-Anchor" href="#具体步骤-2"></a> 具体步骤</h2><h3 id="pass1light-pass"><a class="markdownIt-Anchor" href="#pass1light-pass"></a> Pass1.Light Pass</h3><p>不管如何我们首先肯定是先要算直接光照找到哪些voxel会被照亮,那么我们要先从接收到直接光照的patch开始,不管是RSM还是什么先找出接受直接光照的Patch.</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2020.png" alt></p><p>但是由于场景是由voxel来表示的,那么对于任何一个格子,跟LPV的注入很像,但是这里不再像LPV一样（认为表面是diffuse的半球分布）将所有的radiance加在一起求各方向的初始值，而是可以支持反射物(patch)也是Glossy的。</p><p>记录的是直接光源从哪些范围来（绿色部分），记录各个反射表面的法线（橙色部分），通过<strong>输入方向</strong>和<strong>法线范围</strong>两个信息然后通过表面的材质，来准确的算出出射的分布，这样就比LPV认为格子表面是diffuse再用SH来压缩的方法要准确，然后建立更高层级格子的这些特性。</p><h3 id="pass2camera-pass"><a class="markdownIt-Anchor" href="#pass2camera-pass"></a> Pass2.Camera Pass</h3><p>从这一步开始考虑场景的渲染了,对于任何一个像素，已知的是Camera Ray的方向。</p><ul><li>对于Glossy的表面，<strong>向反射方向追踪出一个锥形(cone)区域</strong></li></ul><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2021.png" alt></p><p>基于<strong>追踪出的圆锥面</strong>的大小，对格子的层级进行查询，就是对于场景中的所有体素都要判断是不是与这个锥形相交，如果相交的话就要把对于这个点的间接光照的贡献算出来(我们存储了体素的光照输入方向和法线方向,因此可以算出其输出的radiance,将cone区域内所有体素的radiance都算出来从而在shading point得到间接光照)，也就是<strong>根据传播出的距离远近找对应层级的体素，然后找覆盖的范围。</strong></p><ul><li>对于diffuse的情况来说，<strong>通常考虑成若干圆锥</strong>，忽略圆锥Tracing时的重叠和空隙</li></ul><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2022.png" alt></p><p>效果：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2023.png" alt></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2024.png" alt></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2025.png" alt></p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p><strong>LPV与VXGI的区别</strong>：</p><ul><li>LPV是把所有的次级光源发出的Radiance传播到了场景中的所有位置，只需要做一次从而让场景每个Voxel都有自己的radiance，但是由于LPV使用的3D网格特性，并且采用了SH进行表示和压缩，因此结果并不准确，而且<strong>由于使用了低阶SH因此只能考虑diffuse的</strong>，但是速度是很快的。</li><li>VXGI把场景的次级光源记录为一个层次结构，对于一个Shading Point，我们要去通过Corn Tracing找到哪些次级光源能够照亮这个点。</li></ul><p><strong>优点</strong>：VXGI结果的质量非常好，<strong>与光线追踪的结果非常接近。</strong></p><p><strong>缺点</strong>：开销还是太大，应用受到了限制。对于VXGI我们需要预先对场景体素化，也是一个非常大的问题，由于每一个Shading point都要做一些cone Tracing，操作已经非常像离线渲染了。</p><h1 id="3d空间方法-ambient-occlusionao"><a class="markdownIt-Anchor" href="#3d空间方法-ambient-occlusionao"></a> 3D空间方法-<strong>Ambient Occlusion（AO）</strong></h1><h2 id="什么是ao"><a class="markdownIt-Anchor" href="#什么是ao"></a> 什么是<strong>AO？</strong></h2><p><strong>环境光遮蔽（Ambient Occlusion，简称AO）是全局光照明的一种近似替代品</strong>，可以产生重要的视觉明暗效果，<strong>通过描绘物体之间由于遮挡而产生的阴影</strong>(contact shadow)， 能够更好地捕捉到场景中的细节，可以解决漏光，阴影漂浮等问题，改善场景中角落、锯齿、裂缝等细小物体阴影不清晰等问题，<strong>增强场景的深度和立体感</strong>。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2026.png" alt></p><p>可以说，环境光遮蔽在直观上给玩家的主要感觉体现在画面的明暗程度上，未开启环境光遮蔽特效的画面光照稍亮一些；而开启环境光遮蔽特效之后， 局部的细节画面尤其是暗部阴影会更加明显一些。</p><p>Ambient Occlusion的细分种类有：</p><p>• SSAO Screen space ambient occlusion</p><p>• SSDO Screen space directional occlusion</p><p>• HDAO High Definition Ambient Occlusion</p><p>• HBAO+ Horizon Based Ambient Occlusion+</p><p>• AAO Alchemy Ambient Occlusion</p><p>• ABAO Angle Based Am bient Occlusion</p><p>• PBAO</p><p>• VXAO Voxel Accelerated Ambient Occlusion</p><p>一般而言，Ambient Occlusion最常用方法是SSAO，如Unreal Engine 4中的AO，即是用SSAO，它是<strong>在屏幕空间对于全局光照的近似</strong>。</p><h3 id="ao的三个重要假设"><a class="markdownIt-Anchor" href="#ao的三个重要假设"></a> AO的三个重要假设</h3><ul><li><p>假设1：由于我们不知道间接光照是什么，因此我们假设任何一个<strong>shading point</strong>上来自<strong>任何方向</strong>的<strong>间接光照</strong>(incident lighting)是一个<strong>常数</strong>，其实就类似于Phong模型的环境光</p></li><li><p><strong>关键假设2</strong>：虽然我们考虑了任何一个<strong>shading point</strong>上来自<strong>任何方向</strong>的<strong>间接光照</strong>是一样的，但并不是每个方向都可能接收到间接光照(incident lighting)，也就是<strong>不同位置的Visibility是不同的</strong></p><ul><li>图中红色部分表示被遮挡,黄色部分表示未被遮挡,我们可以明显的得出一个结论,左边的 Shading point要比右边的亮一点</li></ul><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2027.png" alt></p></li><li><p>假设3：假设物体是diffuse的，即使是一个glossy物体我们也以diffuse去渲染</p></li></ul><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2028.png" alt></p><p>Ambient term form Phong：任何一个shading point上来自任何方向的间接光照(incident lighting)是一个常数</p><p>Ambient Occlusion：考虑了任何一个shading point上不同方向的visibility后得到的结果</p><h3 id="ao背后的理论"><a class="markdownIt-Anchor" href="#ao背后的理论"></a> AO背后的理论</h3><p><strong>要说明的问题：为什么说AO是一个对GI的近似</strong></p><p>首先所有的理论都要聚焦于渲染方程来：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2029.png" alt></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2030.png" alt></p><p>在RTR中常用的一个近似（上图中第二个公式），两个函数的乘积的积分，在满足如下条件之一时，可以将其中一项拆出为该项在另一项的积分域的加权平均：</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>的<strong>积分域support较小</strong></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>本身是<strong>光滑smooth的，也就是值的变化不大</strong></li></ul><p>基于AO的三个假设，我们认为来自所有方向的间接光照<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">L_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是常数，且材质为Diffuse的，于是BRDF为常数，上面的近似公式已经不是近似，而是精确相等。</p><p>于是可以将visibility项拆出来得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">k_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>项，在《RTR4》书中直接给出这个公式，并没有给出推导过程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>π</mi></mfrac><msub><mo>∫</mo><mrow><mi mathvariant="bold">l</mi><mo>∈</mo><mi mathvariant="normal">Ω</mi></mrow></msub><mi>v</mi><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mo separator="true">,</mo><mi mathvariant="bold">l</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi mathvariant="bold">n</mi><mo>⋅</mo><mi mathvariant="bold">l</mi><msup><mo stretchy="false">)</mo><mo>+</mo></msup><mi mathvariant="normal">d</mi><mi mathvariant="bold">l</mi></mrow><annotation encoding="application/x-tex">k_{A}(\mathbf{p})=\frac{1}{\pi} \int_{\mathbf{l} \in \Omega} v(\mathbf{p}, \mathbf{l})(\mathbf{n} \cdot \mathbf{l})^{+} \mathrm{d} \mathbf{l} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29932em;vertical-align:-0.9393199999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.42584200000000005em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">l</span></span><span class="mrel mtight">∈</span><span class="mord mtight">Ω</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9393199999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">l</span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">n</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.071331em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">l</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathbf">l</span></span></span></span></span></span></p><p>而《games202》中给出了如下推导：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2031.png" alt></p><p>在渲染方程中将visibility项拆开后，会得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">k_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和剩余的积分两个部分。</p><p><strong>第一部分</strong></p><p>对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">k_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其意义是从一个点往所有方向看去按cos加权平均的平均visibility。观察到拆出来之后，其形式上多了一个cos：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2032.png" alt></p><p>要理解这一点需要引入<strong>投影立体角</strong>的概念：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2033.png" alt></p><ul><li>立体角的理解：某个立体角的大小=单位球上对应的面积。</li><li>在渲染方程中，我们所说的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">\mathrm{d}w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>都是立体角，而cos项为入射方向与表面法线的夹角。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi><mo>⋅</mo><mi mathvariant="normal">d</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">cos \theta \cdot\mathrm{d}w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>的含义，其实就是将单位球上对应的面积投影到该半球对应的单位圆上</li><li>所以在拆分的时候可以将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi><mo>⋅</mo><mi mathvariant="normal">d</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">cos \theta \cdot\mathrm{d}w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>看成一个微元的整体</li></ul><p>理解了上面的部分之后，会发现<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">k_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的分母<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∫</mo><mi mathvariant="normal">Ω</mi></msub><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi><mi mathvariant="normal">d</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">\int_{\Omega} cos\theta \mathrm{d}w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1608200000000002em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.12251099999999993em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Ω</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span> 其实就是半球投影到单位圆上的面积，也就是公式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">k_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span>的来历。</p><p><strong>第二部分</strong></p><p>对于剩余积分，由于我们假设了所有方向的间接光照是一个常数、物体是Diffuse的，因此BRDF也是常数。因此最终结果就是<strong>漫反射系数×间接光照强度</strong>。由于间接光照强度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Li</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span></span></span></span>你可以随便指定,漫反射系数也是你可以随便指定的，因此就是橙色部分的结果是你自己来定义的一个数。</p><p>因此最终变形之后我们会得到下面的渲染方程，只需要计算visibility的积分即可：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2034.png" alt></p><p><strong>如何实时计算visibility？</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2035.png" alt></p><ul><li>在世界空间下，可以通过ray tarcing做。而在工业界会做一下处理：<ul><li><p>反射光肯定是在有限的距离里反射过来的,也就是间接光照是从一定范围内来的,不可能是从无限远处,因此如果我们做tracing肯定也是在一定范围内的，这样就解决了tracing无限远的话一定会被遮挡住这个问题。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2036.png" alt></p></li><li><p>而这个范围是一个trade off，通常会选一个合适的范围，也就是找一个合适的球的半径-R</p></li></ul></li><li>在屏幕空间下，如何来做？接下来的SSAO会讲到。</li></ul><h1 id="屏幕空间方法-screen-space-ambient-occlusion"><a class="markdownIt-Anchor" href="#屏幕空间方法-screen-space-ambient-occlusion"></a> 屏幕空间方法-<strong>Screen Space Ambient Occlusion</strong></h1><h2 id="前言-2"><a class="markdownIt-Anchor" href="#前言-2"></a> 前言</h2><p><strong>SSAO是在屏幕空间做AO的一种方法</strong>。</p><h3 id="什么是屏幕空间"><a class="markdownIt-Anchor" href="#什么是屏幕空间"></a> <strong>什么是屏幕空间？</strong></h3><ol><li>使用的所有信息都来自“屏幕”，也就是做全局光照之前屏幕上能看到的信息，这些信息也就是做全局光照之前的直接光照信息；</li><li>也就相当于对这张图做一个后期处理，从而来“弄”出全局光照。</li><li>为了与此区别我们把RSM与SM的方法称为图像空间，因为信息是来自从灯光看向的场景 所获得的信息。</li></ol><h3 id="历史"><a class="markdownIt-Anchor" href="#历史"></a> <strong>历史</strong></h3><p>SSAO最早应用的游戏是使用CRY ENGINE2做出来的孤岛危机一代,AKA显卡杀手。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2037.png" alt></p><h2 id="具体算法"><a class="markdownIt-Anchor" href="#具体算法"></a> 具体算法</h2><p>上文提到，对于AO只需要计算visibility项即可，SSAO中对此做了一个假设，它没有去往四周trace光线，而是：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2038.png" alt></p><ul><li>以任何一个Shading Point（图中的白点）为圆心,半径为R的球的内部随机撒一些点,然后判断这些点能不能被Shading Point直接看到</li><li>由于是屏幕空间，因此我们从camera出发进行渲染，得到一个深度图（蓝色区域部分表示的是场景物体，蓝色区域下部的白线表示深度图，看样子是俯视图的感觉），是可以把他看成是场景的一个简单近似，球内部的点是可以投影到Camera然后找之前记录的深度,如果深度更深,则表示在物体内部,被遮挡,反之则未被遮挡</li></ul><p>存在的问题：</p><ul><li>箭头所指的红点，从camera看过去,这个点比所圈部分的深度深,因此虽然这个红点是能够被Shading Point看到的，但是由于是从camera出发，深度图并不知道这种凹陷，这里被判断为了看不到</li><li>Rendering Equation通常只考虑法线所在的那半边，因此做这个判断也只判断法线所在的那半边也是没有问题的，也就是后面那个半球的的采样点没有用处。而由于<strong>SSAO的时代并不能获得场景的法线信息</strong>，因此SSAO采用了另一种方法来替代，也就是在整个球采样红点过半的时候才开始考虑AO问题。</li><li>由于没有考虑法线，因此并没有cos项，没有进行加权，所以这个假设并不是物理准确的，但是在实时渲染中看起来问题并不太大。</li><li>采样存在的问题：选Sample数量与Pcss 一样，也就是越多的Sample效果越好，但是这也会越慢。一个方法是用少量的Sample，得到一个noisy的结果，然后在这个noisy的结果上进行一个denoising来实现降噪，这些降噪的模糊和噪声在和场景中其他效果与光照叠加后就会变得非常不明显，从而获得比较好的综合效果。</li></ul><p>一个SSAO错误的例子：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2039.png" alt></p><p>上图所圈部分，我们是知道那一片的地板是不可能被石椅所遮挡的，但是在开启了SSAO，由于我们是<strong>从camera出发去判断深度</strong>的，所以这一块不可避免的出现了错误的AO。</p><h1 id="屏幕空间方法-horizon-based-ambient-occlusionhbao"><a class="markdownIt-Anchor" href="#屏幕空间方法-horizon-based-ambient-occlusionhbao"></a> 屏幕空间方法-Horizon Based Ambient Occlusion（HBAO）</h1><p>对于SSAO没有考虑法线的问题，现在已经完全可以得到法线，因此衍生出了另一种方法——HBAO。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2040.png" alt></p><p><strong>核心思想</strong>：当有了场景normal之后，我们就知道去采样哪半球，就可以按照SSAO的方法在球内撒点（采样），但区别是只去算半球的情况。同时也可以对不同的方向来加权（靠近中间的点权重大，靠近两边小）。</p><p>HBAO的效果明显要比SSAO效果要好一点,有效的减少了错误遮挡的情况（柱子后面尤为明显），但是要多存一个屏幕空间的法线。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2041.png" alt></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2042.png" alt></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2043.png" alt></p><h1 id="屏幕空间方法-screen-space-direction-occlusion-ssdo"><a class="markdownIt-Anchor" href="#屏幕空间方法-screen-space-direction-occlusion-ssdo"></a> 屏幕空间方法-<strong>Screen Space Direction Occlusion （SSDO）</strong></h1><h2 id="前言do的介绍"><a class="markdownIt-Anchor" href="#前言do的介绍"></a> 前言（DO的介绍）</h2><p><strong>SSDO是屏幕空间的DO方法</strong>。</p><h3 id="什么是do"><a class="markdownIt-Anchor" href="#什么是do"></a> 什么是DO？</h3><p>关于SSDO，其来源于DO——Direction Occlusion，它是对AO的一种改进，比起AO考虑间接光照是一个常数,在DO里我们更精确地考虑了间接光照。如下图：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2044.png" alt></p><p>在复杂光照条件下，不同方法求出的a点和b点辐照度的近似颜色。AO环境光遮蔽不考虑方向性，所以在两点上颜色是相同的。使用bent normal方法（该方向矢量计算为未遮挡光方向的余弦加权平均值，见参考文献）可以有效地将余弦lobe移向天空中未遮挡的部分，但由于积分范围不受任何方式的限制，因此不足以提供准确的结果。DO方向遮蔽方法能够正确地消除来自天空遮挡部分的光线。</p><h3 id="do的关键思路"><a class="markdownIt-Anchor" href="#do的关键思路"></a> <strong>DO的关键思路</strong></h3><ul><li><strong>我们不去假设间接光照是固定不变的；</strong></li><li><strong>RSM中我们用shadow map去找到接收直接光照的点当作间接光照为其他的Shading point提供直接光照,也就是说我们一定程度上是可以已经得到间接光照的信息。</strong></li></ul><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2045.png" alt></p><blockquote><p>[Ritschel et al., Approximating Dynamic Global Illumination in Image Space]</p></blockquote><p>通过AO和DO的对比我们可以看到,AO能够产生变暗的效果使得物体相对感更强烈,但AO并不能做到Clolor Blending（不同颜色的Diffuse会互相照亮），因此O是更加精准的获得全局光照的一种方法。</p><h3 id="do的做法"><a class="markdownIt-Anchor" href="#do的做法"></a> <strong>DO的做法</strong></h3><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2046.png" alt></p><p>SSDO的做法于path tracing很像,假设在Shading Point的P点，随机的往某一个方向打出一根光线：</p><ol><li>如果光线没碰到物体，则认为P点这里接收直接光照</li><li>如果碰到了一个点Q,那么算出Q点接受的直接光照打到P点的贡献,从而求出P点的间接光照。</li></ol><h3 id="ao与do的对比"><a class="markdownIt-Anchor" href="#ao与do的对比"></a> <strong>AO与DO的对比</strong></h3><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2047.png" alt></p><ul><li>AO：在AO中我们认为红色的框里能接收间接光照，黄色框里无法接收间接光照，然后求出加权平均的visibility值,也就是<strong>假设间接光照是从比较远的地方来的</strong>；</li><li>DO：在DO中,我们认为红色框里接收的是直接光照,而黄色框里才是接收到的间接光照.因为红色框里的光线打不到用来反射的面，因此这些方向上就不会有间接光照，黄色框里的光线能打到物体上，P点接收到的是来自红色框的<strong>直接光照</strong>+黄色框里的<strong>间接光照</strong>,也就是<strong>假设间接光照是从比较近的反射物来的。</strong></li></ul><p>其实这两个假设都不是完全正确的，<strong>物理真实的情况是这两种的混合：近处的是DO，远距离是AO</strong>，因此AO与DO也并没有矛盾。</p><h3 id="do解渲染方程"><a class="markdownIt-Anchor" href="#do解渲染方程"></a> DO解渲染方程</h3><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2048.png" alt></p><ul><li>在一个shading point往任何方向发射光线，如果没有遮挡，V=1，计算直接光照，与DO无关</li><li>当V=0时也就是间接光照的情况，这个是我们需要关注与计算的。<strong>关于从一个pixel或者patch计算间接光照可以使用RSM等方法。</strong></li></ul><h2 id="ssdo"><a class="markdownIt-Anchor" href="#ssdo"></a> SSDO</h2><h3 id="核心做法"><a class="markdownIt-Anchor" href="#核心做法"></a> 核心做法</h3><p>在SSDO中，我们要用直接光照的信息，但不是从RSM中获得，而是<strong>从screen space中得到</strong>。</p><p>SSDO的核心是要找哪些patch会被挡住，也就是对点P提供间接光照贡献的是哪些点，做法是与AO完全一样的。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2049.png" alt></p><p>这里A/B/D这三个点的深度比从camera看去的最小深度深，也就是说PA，PB，PD方向会<strong>被物体挡住，因此会为P点提供间接光照</strong>。然后把我们用在RSM中介绍的计算间接光照的方法这些点对P的贡献加起来。</p><p>从计算量上来看与SSAO差不多，但是不同之处是，判定会被挡住的时候，会额外计算被挡住的小片的贡献，质量非常接近离线渲染。</p><h3 id="存在的问题-2"><a class="markdownIt-Anchor" href="#存在的问题-2"></a> 存在的问题</h3><ul><li><p>SSDO只能解决一个<strong>很小范围内的全局光照</strong>，下图是接近正确的情况，而如果使用SSDO来计算，方块右边是追踪不到远处绿色的墙的，方块上也就不会有绿色的反光。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2050.png" alt></p></li><li><p><strong>可见性出错</strong>。下图反映的例子是SSDO中的假设与实际情况不同。因为我们是在屏幕空间处理的，因此在A点虽然会被camera看不到，但是AP之间是不会挡住的，实际上A点需要提供间接光照给P点，但在SSDO算法中则不提供。</p></li></ul><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2051.png" alt></p><ul><li><p><strong>屏幕空间中丢失信息的问题</strong>（其实与上面的问题是同一类型）。从camera方向看过去只能看到世间空间下场景面向相机的一个表层信息，表层之后的信息一无所知。下图是一个很明显的例子，当黄色的面朝向屏幕的时候地面的SSDO信息是正确的，而当旋转过去之后，就看不到SSDO的信息了。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2052.png" alt></p></li></ul><h1 id="屏幕空间方法-screen-space-reflectionssr"><a class="markdownIt-Anchor" href="#屏幕空间方法-screen-space-reflectionssr"></a> 屏幕空间方法-<strong>Screen space Reflection（SSR）</strong></h1><p>在games202中闫老师说更愿意把他叫做<strong>Screen space Raytracing(SSR)</strong>，只把它理解成反射的话其实是狭隘的。</p><h2 id="前言-3"><a class="markdownIt-Anchor" href="#前言-3"></a> 前言</h2><p><strong>什么是SSR</strong>？</p><ul><li>仍然是一种在RTR中实现GI的方式；</li><li>是在屏幕空间做光线追踪</li><li>不需要知道3D空间中的三角形、网格、加速结构等3D信息，只需要屏幕空间中已有的信息，也就是从camera看去场景的得到的这样一层“壳”。</li></ul><p><strong>两个基本的任务</strong>：</p><ul><li>求交：考虑的是<strong>任何光线</strong>(不单单是反射光)与场景中<strong>从camera看得到的这层壳</strong>去做求交</li><li>着色：找到交点后算出对shading point的贡献值</li></ul><p><strong>效果</strong>：</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2053.png" alt></p><p><strong>核心思想</strong>：</p><p>白框里反射的是红框内的场景信息，也就是说我们并不需要3D场景的什么信息，而是从屏幕空间里已有的信息得到，也就是反射的绝大多数信息是屏幕内已有的信息，这就是屏幕空间反射的核心思路。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2054.png" alt></p><h2 id="ssr算法"><a class="markdownIt-Anchor" href="#ssr算法"></a> SSR算法</h2><h3 id="基本思路"><a class="markdownIt-Anchor" href="#基本思路"></a> 基本思路</h3><p>SSR最基本的应用是做屏幕空间的镜面反射。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2055.png" alt></p><ul><li>我们有一个还没有进行反射的场景，如shaded scene上的地面还并没有得到反射的结果</li><li>得到normal信息和深度信息</li><li>进行SSR，对于地面的每一个pixel<ul><li>知道shading point（黄点）的观察方向后,可以得出其反射方向</li><li>从Shading point点沿着反射方向延长找到与屏幕的壳的交点（绿点）</li><li>将交点的颜色作为反射的颜色记录到shading point。</li></ul></li><li>得到一个镜面反射的效果</li></ul><h3 id="关键问题1-如何求反射光与场景相交"><a class="markdownIt-Anchor" href="#关键问题1-如何求反射光与场景相交"></a> 关键问题1-如何求反射光与场景相交</h3><p><strong><strong><strong><strong><strong><strong><strong><strong><strong>线性光线步进Linear Raymarch</strong></strong></strong></strong></strong></strong></strong></strong></strong></p><p>如下图，黄色是shading point，虚线是反射光，假设camera在右边，那么从camera看去，场景的壳就是图左部的曲线。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2056.png" alt></p><p>我们是为了找到反射光与场景“壳”的交点:</p><ul><li>沿着反射方向以一个<strong>固定的步长</strong>逐步前进，并将每次停止时的深度与壳的深度进行比较，如果浅于壳，则继续前进；比壳深，则停止求交。就是我们<strong>用深度来进行可见性判断</strong>。</li><li>质量取决于步长的大小，步长小越精准，同时计算量也越大，因此步长太大太小都不行，在没有SDF的情况下，步长只能是一个定值。</li></ul><p><strong>层级式光线追踪Hierachical ray trace</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2057.png" alt></p><p>该方法可以<strong>动态决定步长</strong>。如上图，我们认为一个像素是一格，只trace一根反射光线的情况下，如果按一格一格的走，每一个fragment shader都要做深度比较，那么八格就是八次。但我们就算一次走四格都不会与物体相交，这启发我们：如果可以快速的得到一次往前走几格这个信息的话会加速步进。</p><p><strong>深度多级渐远纹理Depth Mip-Map</strong></p><p>为了得到这个信息，需要将场景的深度图做一个mipmap：<strong>高一级的Mipmap存的并不是下一级周围四个深度的平均，而是四个深度中的最小值</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2058.png" alt></p><p>为什么要生成Depth Mip-Map？</p><ul><li>在3D空间做光线追踪时，为了加速光线与场景求交，我们通常会做一个加速的层次结构（BVH/KD-tree）</li><li>在屏幕空间同样做一个类似加速结构，可以快速跳过不可能相交的像素；</li><li>如果我们用最小值操作的mip-map会得到一个保守逻辑：<strong>如果一根光线与mip-map中的上层结点不相交，那他肯定也不会与这个结点的子节点相交</strong></li></ul><p><strong><strong><strong><strong>具体算法</strong></strong></strong></strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp">mip = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (level &gt; <span class="hljs-number">-1</span>)<br>step through current cell;<br><span class="hljs-keyword">if</span> (above Z plane) ++level;<br><span class="hljs-keyword">if</span> (below Z plane) --level;<br></code></pre></td></tr></table></figure><p>下图是对二维mip-map的一维表示，一格表示一个像素的长度，level 0是初始深度图，每存储每个像素的深度值；level 1是高一级深度图，存储上一级4个像素的最小深度值，反映到一维图中是两格为一组。</p><ol><li>在level 0中，先走一个格子(最小的步长)，发现没有交点，于是步长可以变大了，进入level 1</li></ol><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2059.png" alt></p><ol><li>然后在原来的基础上再走两格(level 1包含的格子)，发现还没交点，步长继续变大，进入level 2</li></ol><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2060.png" alt></p><ol><li>继续走4格(level 2)，有了交点，进入右半边的level1（与左半边还是右半边相交可以立即判断）</li></ol><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2061.png" alt></p><ol><li>考虑更精细的层(退回level 1)，发现还是有交点</li></ol><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2062.png" alt></p><ol><li>在考虑level 1情况时交点出现在了边界，先试左半边，因此退回level 0先判断与左边有没有交点，这时候发现没有交点，试右半边，有交点就停止；</li></ol><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2063.png" alt></p><p>因此，步进停止的条件：</p><ul><li>找到交点</li><li>走到最后依旧没有交点</li></ul><p>注意：Mipmap可以做范围查询，可以做正方形查询，但是做不了准确的起点不在2的K次方上的深度的查询，例如下图黄框部分，而只能算出对应level 1的最小深度，然后进行插值（不准确）。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2064.png" alt></p><h3 id="关键问题2-ssr中的shading"><a class="markdownIt-Anchor" href="#关键问题2-ssr中的shading"></a> 关键问题2-SSR中的shading</h3><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2065.png" alt></p><p>这部分与路径追踪的方法完全相同，仅仅是<strong>把光线与场景求交变成了光线与“壳”求交</strong>，因此路径追踪的算法在这里是可以直接使用的。</p><p>对于任何一个shading point，看到的radicance就是对半球进行积分。</p><ul><li>specular情况：那么相当于光线打到物体的哪里，就用它所发出的radiance就可以。</li><li>glossy情况：用蒙特卡洛多采样几根光线，打到的物体反射过来的radiance，一定就是shading point点接收到的incident radiance</li><li>diffuse情况：更多的光线计算…</li></ul><h3 id="各种不同的效果"><a class="markdownIt-Anchor" href="#各种不同的效果"></a> 各种不同的效果</h3><p>由于结果是tracing出来的，因此很多现象是自然就能做到的，并不用做trick，类似很多模糊等现象可以<strong>直接实现</strong>。</p><p><strong>Sharp/specular  reflections（镜面反射）</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2066.png" alt></p><p><strong>Blurry reflections（Glossy材质的反射）</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2067.png" alt></p><p>如果说specular反射只需要反射一个方向的话，那么对于一定roughness的材质（就是glossy材质）来说我们要根据其BRDF的lobe（<strong>波瓣</strong>）来考虑。如果lobe比较细，则需要很少的光线；如果lobe比较越大，像diffuse那种的话我们需要射出很多根光线。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2068.png" alt></p><p>因此可以想到，如果lobe极小，就趋近于镜面反射，对应的速度也会越快，因为只需要trace一个方向；lobe极大，就趋近于漫反射，对应的速度也会更慢，需要trace到各个方向。</p><p><strong>Per-pixel roughness and normal</strong>（<strong>凹凸反射）</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2069.png" alt></p><p>在地面的各法线方向不一致的情况下，仍然可以得到反射的结果。</p><p><strong><strong>Contact hardening</strong></strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2070.png" alt></p><p>对于物体来说，近处的物体反射清晰，远处反射模糊，当反射物是Glossy时反射的lobe是一个锥形，当距离越远锥形的截面越大，也就会发生模糊现象。</p><p><strong>Specular elongation</strong></p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2071.png" alt></p><p>反射在垂直方向被拉长的现象，在雨天常见的现象，当我们认为地面是各向同性的，也就是法线分布是一个圆，反射出去的lobe就是一个椭圆。</p><h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3><p><strong>SSR 正是蒙特卡罗光线追踪只计算直接光照，以及光线在景物表面之间散射一次的间接光照的情形</strong>。只不过，SSR <strong>假设景物表面在散射光线时都是漫反射材质</strong>，而且，SSR 在追踪光线时不是借助 BVH 或 k 维树这样的三维加速结构，而是借助深度 mipmap 这个二维加速结构。</p><p>对于SSR人们还做了其它工作：</p><ul><li><p>对于glossy的物体求其反射的lobe时，可以使用重要性抽样法（importance sampling method），根据着色点的BRDF构建反射光线方向的分布，根据其概率密度函数采样那些可能性更大的反射光线</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2072.png" alt></p></li><li><p>如果两个着色点相邻，那么分别求取的两个光线与场景的交点可能对这两个着色点都会贡献间接光照，于是可以重复利用光线与场景的交点以加速计算。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2073.png" alt></p></li><li><p>可以引入分离求和方法（split sum method）中预滤波（prefiltering）的思想，对屏幕空间的信息施加滤波，这样一来，沿理想镜面反射方向追踪一根光线，就能得到沿多个反射方向追踪多根光线的结果（详见“<a href="https://www.notion.so/3d78bfde08084be4b77e2920f8d247ef">实时环境映射</a>”）。不过，屏幕空间中各点的深度不一，因此在施加滤波时需要考虑深度上的差异。</p><p><img src="/2022/12/15/Games202%E5%AE%9E%E6%97%B6%E5%85%A8%E5%B1%80%E5%85%89%E7%85%A7/Untitled%2074.png" alt></p></li></ul><p><strong>存在的问题</strong>：</p><ul><li><strong>在Diffuse 物体上并不是非常高效，因为利用了光线追踪的方法。而在实时环境映射中提到的Diffuse物体可以很好得到环境光是很简单的，低阶SH就可以做到，也就是Diffuse在不同的方法中的效率是不同的</strong>。</li><li>丢失屏幕外的信息，但这个是屏幕空间的局限性，而不是光线追踪的问题</li></ul><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p>《Real-Time Rendering 4th》</p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY/?p=7">Lecture7 Real-time GLobal Illumination (in 3D)_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY/?p=8">Lecture8 Real-time GLobal Illumination (screen space)_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=9">Lecture9 Real-time GLobal Illumination (screen space cont.)_哔哩哔哩_bilibili</a></p><p><a href="https://zhuanlan.zhihu.com/p/377104538">GAMES202 高质量实时渲染笔记Lecture07：Real-Time Global Illumination (In 3D) - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/381782999">GAMES202 高质量实时渲染笔记Lecture08：Real-Time Global Illumination (In Screen space) - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/383370745">GAMES202 高质量实时渲染笔记Lecture09：Real-Time Global Illumination (Screen space cont.) - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/556057984">《GAMES202：高质量实时渲染》3 实时全局光照：RSM、LPV、VXGI、SSAO、SSDO、SSR - 知乎 (zhihu.com)</a></p><h1 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践</h1><p><a href="https://zhuanlan.zhihu.com/p/25038820">SSAO实现：游戏后期特效第四发 – 屏幕空间环境光遮蔽(SSAO) - 知乎 (zhihu.com)</a></p><h1 id="论文"><a class="markdownIt-Anchor" href="#论文"></a> 论文</h1><p>【SSAO】Mittring, Martin, “Finding Next Gen—CryEngine 2,” SIGGRAPH Advanced Real-Time Rendering in 3D Graphics and Games course, Aug. 2007. Cited on p. 43, 195, 239, 242, 255, 457,<br>476, 559, 856, 860, 861</p><p>【HBAO】Max, Nelson L., “Horizon Mapping: Shadows for Bump-Mapped Surfaces,” The Visual Computer,vol. 4, no. 2, pp. 109–117, 1988. Cited on p. 460, 466</p><p>【AO，bent normal的提出】Landis, Hayden, “Production-Ready Global llumination,” SIGGRAPH RenderMan in Production course, July 2002. Cited on p. 446, 448, 465</p><p>【SSR的改进】Ritschel et al., <a href="https://link.zhihu.com/?target=https%3A//www.ea.com/frostbite/news/stochastic-screen-space-reflections">Stochastic Screen-Space Reflections</a>, SIGGRAPH 2015 course</p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-04实时环境映射</title>
    <link href="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/"/>
    <url>/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><blockquote><p>《Real-Time Rendering 3rd 提炼总结》第五章纹理贴图及相关技术</p></blockquote><p>作为纹理管线的第一步，投影函数的功能就是将空间中的三维点转化为纹理坐标，也就是获取表面的位置并将其投影到参数空间中。</p><p>在常规情况下，投影函数通常在美术建模阶段使用，并将投影结果存储于顶点数据中。也就是说，在软件开发过程中，我们一般不会去用投影函数去计算得到投影结果，而是直接使用在美术建模过程中，已经存储在模型顶点数据中的投影结果。但有一些特殊情况，例如：</p><p>1、OpenGL的glTexGen函数提供了一些不同的投影函数，包括球形函数和平面函数。利用空闲时间可以让图形加速器来执行投影过程，而这样做的优点是不需要将纹理坐标送往图形加速器，从而可以节省带宽。</p><p>2、更一般的情况， 可以在顶点或者像素着色器中使用投影函数，这可以实现各种效果，包括一些动画和一些渲染方法（比如如环境贴图，environment mapping，有自身特定的投影函数，可以针对每个顶点或者每个像素进行计算）。</p><p>通常在建模中使用的投影函数有球形、圆柱、以及平面投影，也可以选其他一些输入作为投影函数。</p><h1 id="环境光照"><a class="markdownIt-Anchor" href="#环境光照"></a> 环境光照</h1><p><strong>环境贴图</strong>：在场景中任意一点往四周看去可看到的光照,将其记录在一张图上这就是环境光照,或者也可以叫做<strong>IBL(image-based lighing)</strong>.这里我们认为看到的光照来自于无限远处,这也就是为什么用环境光照去渲染物体时会产生一种漂浮在空中的感觉,因为光照来自于无限远处.</p><p><strong>存储：用spherical map和cube map</strong>来存储环境光照。</p><p>下面详述在实时渲染领域求环境光照的过程。</p><h1 id="情况一已知环境光照不考虑遮挡求任何物体任何一点shading值"><a class="markdownIt-Anchor" href="#情况一已知环境光照不考虑遮挡求任何物体任何一点shading值"></a> 情况一：已知环境光照，不考虑遮挡，求任何物体任何一点shading值</h1><h2 id="问题引入"><a class="markdownIt-Anchor" href="#问题引入"></a> 问题引入</h2><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled.png" alt></p><p>通用解法：对上面的渲染方程使用蒙特卡洛积分，缺点是需要采集大量样本，时间消耗多</p><p><strong>解决思路：避免采样</strong></p><h2 id="基本思路"><a class="markdownIt-Anchor" href="#基本思路"></a> 基本思路</h2><p>根据以上渲染方程，不考虑遮挡（Visibility项），只需要将BRDF与Lighting项相乘再进行半球积分即可。</p><h3 id="brdf又分为两种情况"><a class="markdownIt-Anchor" href="#brdf又分为两种情况"></a> <strong>BRDF又分为两种情况:</strong></h3><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%201.png" alt></p><ol><li><strong>BRDF为glossy时</strong>,覆盖在球面上的范围很小,也就是small support(积分域).</li><li><strong>BRDF为diffuse时</strong>,它会覆盖整个半球的区域,但是是smooth的,也就是值的变化不大,就算加上cos也是相对平滑的.</li></ol><p>这两种情况均满足下面的近似公式的相等条件</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%202.png" alt></p><h3 id="the-spilt-sum-1st-stage不采样计算lighting"><a class="markdownIt-Anchor" href="#the-spilt-sum-1st-stage不采样计算lighting"></a> <strong>The spilt sum: 1st stage——不采样计算Lighting</strong></h3><p>将渲染方程中的lighting项拆出，同样对于Visibility项也可以这样拆出：</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%203.png" alt></p><p>上图的橙色区域含义：将brdf范围内的lighting积分起来并进行normalize，<strong>等价于将IBL这张图给模糊</strong>了，<strong>等价于在任何一点上取周围一片范围求出范围内的平均值并将平均值写回这个点上</strong></p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%204.png" alt></p><p><strong>Pre-filtering：在rendering之前</strong>把滤波环境光生成，提前将不同卷积核的滤波核的环境光生成一系列模糊过的图（和mipmap相似），当我们需要时进行查询即可,其他尺寸的图则可以经过这些已生成的通过三线性插值得到。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%205.png" alt></p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%206.png" alt></p><p>接着在BRDF部分求shading point值，需要以一定立体角的范围内进行采样再加权平均从而求出shading point的值，而有了<strong>Pre-filtering后的环境光之后，就可以等价于从镜面反射方向望去在pre-filtering的图上的一点进行查询，因此省去了采样的操作。</strong></p><h3 id="the-spilt-sum-2nd-stage不采样计算brdf"><a class="markdownIt-Anchor" href="#the-spilt-sum-2nd-stage不采样计算brdf"></a> <strong>The spilt sum: 2nd stage——不采样计算BRDF</strong></h3><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%207.png" alt></p><p>回到渲染方程的另一个部分——BRDF，如果使用预计算的方法，需要将参数的所有可能性均考虑进去,但是比较多，包括roughness、color等。考虑所有参数的话我们需要打印出一张五维或者更高的表格,这样会拥有爆炸的存储量,因此我们需要想办法降低维度,也就是减少参数量从而实现预计算.</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%208.png" alt></p><p>上图回顾了微表面模型的BRDF，由于此时暂时不考虑阴影，此处需要关注的是Fresnel term和distribution of normals。</p><p><strong>处理过程</strong></p><ul><li><p>Fresnel term：利用Schlick的近似方法可以近似成一个参数为<strong>基础反射率R0</strong>和<strong>入射角度</strong>的指数函数</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%209.png" alt></p></li><li><p>distribution of normals：是一个一维的分布，其中有两个变量，一个变量粗糙程度定义是diffuse还是gloosy，另一个 是half vector和法线的夹角<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">\theta_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，可以近似成入射角度相关的数</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2010.png" alt></p></li><li><p>至此我们有了三个变量:基础反射率r0,roughness α 和角度 θ ,三维的预计算仍然是一个存储量爆炸的结果,因此我们还要想办法减少参数量.(PS:在这里我们认为反射角,入射角,half vector可以用一个角 θ 代替).于是将Schlick近似代入后半部分积分，基础反射R0被拆出积分式，需要预计算的两个量就只有roughness α 和角度 θ</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2011.png" alt></p></li><li><p>可以将预计算结果绘制成一张纹理，在使用时进行查询即可。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2012.png" alt></p></li></ul><p>另外补充一点工业界对于积分的做法：将积分写成求和，这也是在UE引擎里面所使用的环境光技术</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2013.png" alt></p><h1 id="情况二已知环境光照考虑遮挡求任何物体任何一点shading值带阴影"><a class="markdownIt-Anchor" href="#情况二已知环境光照考虑遮挡求任何物体任何一点shading值带阴影"></a> 情况二：已知环境光照，考虑遮挡，求任何物体任何一点shading值（带阴影）</h1><h2 id="问题分析"><a class="markdownIt-Anchor" href="#问题分析"></a> 问题分析</h2><p>严格意义上来讲,这是不可能完成的事,因为以目前的技术来说是很难实现的,要从两个考虑角度来说:</p><ol><li><strong>many light问题</strong>：我们把环境光理解为很多个小的光源,这种情况下去生成阴影的话,需要在每个小光源下生成shadow map,因此会生成线性于光源数量的shadow map,这是十分高昂的代价。</li><li><strong>sampling问题</strong>：在任何一个Shading point上已知来自正半球方向的光照去解rendering equation,最简单的方法是采样空间中各方向上的不同光照,可以做重要性采样,虽然做了重要性采样但仍需要大量的样本,因为最困难的是visibility term。由于Shading point不同方向上的遮挡是不相同的,我们可以对环境光照进行重要性采样,但一个Shading point周围的visibility项是未知的,因此我们只能盲目的去采样，无法提取出visibility项。因为如果是glossy brdf，他是一个高频的，Lighting项的积分域是整个半球,因此并不满足smooth或small support，因此无法利用近似公式来提取出visibility项.</li></ol><ul><li>在工业界：通常以环境光中最亮的那个作为主要光源,也就是太阳,只生成太阳为光源的shadow。</li><li>学术界<ul><li>Imperfect shadow maps：做的是全局光照部分产生的shadow</li><li>Light cuts：解决的是离线渲染中的many lights的问题,核心思想是把反射物当成小光源,把所有的小光源做一下归类并近似出照射的结果</li><li>RTRT (might be the ultimate solution)：Real Time Ray Tracing,可能是最终解决方案</li><li><strong>Precomputed radiance transfer：PRT，可以十分准确的得到来自环境光中的阴影</strong></li></ul></li></ul><p>接下来就使用<strong>PRT</strong>的方法来求环境光照下考虑阴影的shading值，<strong>其主要思想是</strong>：</p><ul><li>PRT 通过一种预计算方法，该方法在离线渲染的 Path Tracing 工具链中预计算 lighting 以及 light transport 并将它们用球谐函数拟合后储存，这样就将时间开销转移到了离线中。</li><li>最后通过使用这些预计算好的数据，我们可以轻松达到实时渲染严苛的时间要求，同时渲染结果可以呈现出全局光照的效果。</li></ul><h2 id="数学基础"><a class="markdownIt-Anchor" href="#数学基础"></a> 数学基础</h2><p><strong>基函数</strong>：把一个函数可以描绘成其他函数的线性组合,如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>可以描绘成一系列的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Bi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span></span>函数乘以各自对应的系数最终再相加在一起,这一系列的函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Bi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span></span></span></span>就是基函数.</p><p><strong><strong>Spherical Harmonics(球谐函数)：SH是一系列基函数,系列中的每个函数都是2维函数,并且每个二维函数都是定义在球面上的。下图是SH的可视化</strong>：</strong></p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2014.png" alt></p><p>与一维的傅里叶一样,SH也存在不同频率的函数，但不同频率的函数个数也不同,频率越高所含有的基函数越多。</p><p>其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>表示的是阶数，通常第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>阶有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>l</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2l+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个基函数，前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>阶有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>个基函数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>表示的是在某一个频率下基函数的序号，分别从从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">-l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span>。每个基函数都有一个比较复杂的数学表示，对应一个legendre多项式，我们不用去了解legendre多项式,我们只需要知道基函数长这样,可以被某些数学公式来定义不同方向的值是多少就可以了.</p><p><strong>投影</strong>：由于一个函数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 可以由一系列基函数和系数的线性组合表示，那么怎么确定基函数前面的系数，这就需要通过投影操作：</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2015.png" alt></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>通过对应的基函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>进行投影操作,从而求出各基函数对应的系数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Ci</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">i</span></span></span></span>。</p><p>如何理解投影：在空间中想描述一个向量，可以xyz三个坐标来表达，把xyz轴当做三个基函数，把向量投影到xyz轴上，得到三个系数就是三个坐标。</p><p><strong>重建</strong>：知道基函数对应的系数，就能用系数和基函数恢复原来的函数。</p><p>由于基函数的阶可以是无限个的，越高的阶可恢复的细节就越好,但一方面是因为更多的系数会带来更大的存储压力、计算压力，而<strong>一般描述变化比较平滑的环境漫反射部分，用3阶SH就足够。</strong></p><h2 id="prt过程"><a class="markdownIt-Anchor" href="#prt过程"></a> PRT过程</h2><p>在实时渲染中,考虑阴影的情况下我们把rendering equation写成由三部分组成的积分:</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2016.png" alt></p><p>如果不进行预计算，就是遍历每个像素去解这个方程，假设环境光是6∗64∗64的map，对于每个shading point来说，计算shading需要计算6∗64∗64次。</p><p>而利用SH就可以将一些内容预计算，以节省时间开销，基本思想是：将rendering equation分为两部分,lighting 和 light transport。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2017.png" alt></p><ul><li><strong>lighting</strong>：假设在渲染时场景中只有lighting项会发生变化(旋转,更换光照等),由于lighting是一个球面函数,因此可以用基函数来表示,在预计算阶段计算出lighting.</li><li><strong>light transport(visibility和brdf)</strong>：相当于对任一shading point来说,light transport项固定的,可以认为是shading point自己的性质,light transport总体来说还是一个球面函数,因此也可以写成基函数形式,是可以预计算出的.</li></ul><h3 id="diffuse-prt计算"><a class="markdownIt-Anchor" href="#diffuse-prt计算"></a> Diffuse PRT计算</h3><p><strong>第一种理解方式</strong>：</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2018.png" alt></p><ul><li><p>BRDF几乎为常数，可以提取到积分之外</p></li><li><p>Lighting项写为基函数形式（黄色部分），每个基函数前的系数（Lighting投影到某个基函数）为常数，可以提取到积分之外，这里的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 是入射方向</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2019.png" alt></p></li><li><p>积分中只剩下基函数和visibility项，相乘之后得到的也是常数，相当于visibility项投影到基函数得到常数系数，最终的效果是把visibility项分解成了多个常数项（组成向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2020.png" alt></p></li><li><p>最终计算任何一个shading point，只需要计算光照系数和visibility系数分别相乘，相当于两个向量点乘</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2021.png" alt></p></li></ul><p><strong>第二种理解方式</strong>：</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2022.png" alt></p><ul><li><p>将Lighting与light transport独立开来，分别投影到各自的SH基函数上，也就是说两者使用了两套SH，分开投影。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2023.png" alt></p></li><li><p>结果得到了<strong>Lighting与light transport各自的基函数系数*各自的基函数相乘的积分， 只有p和q下标相等的基函数相乘为1，其余为0（SH的正交性），与第一种理解方式是一样的结果。</strong></p></li></ul><p><strong>PRT方法的主要限制</strong></p><ul><li><strong>光源</strong>：预计算的光源我们把它投影到SH上，如果旋转，可以通过SH的旋转不变性解决，但是不能计算随机动态场景的全局光照</li><li><strong>场景</strong>：light transport做了预计算,因此visibility相当于常量,因此场景不能动,因此只能对静止物体进行计算.</li></ul><h3 id="glossy-prt计算"><a class="markdownIt-Anchor" href="#glossy-prt计算"></a> Glossy PRT计算</h3><p>Diffuse和glossy的区别：</p><ul><li><strong>diffuse的brdf是一个常数，<strong>而</strong>glossy的brdf是一个4维的brdf</strong>(2维的输入方向，2维的输出方向，而<strong>SH中所表示的i或者o表示二维的输入方向或者二维的输出方向，只是在形式上只些了一个字母作为函数的变量</strong>)。</li><li>直观一点来说,glossy物体有一个很重要的性质,它是和视点有关的，不同的视角得到的shading result也是不一样的。diffuse的物体不管视角如何旋转改变,看到的Shading point的result是不会改变的,因为整个Diffuse shading和视角是无关的。</li></ul><p>因此，在计算Glossy材质的PRT时，需要考虑视点方向，也就是光线的出射方向。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2024.png" alt></p><ul><li>Lighting项投影到SH上，得到一系列常数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">l_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>剩余的BRDF、visibility项继续投影到SH，会得到关于出射方向的函数，每个出射方向都对应了一系列常数（每个出射方向的投影结果相当于Diffuse PRT得到的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）</li><li><strong>最终的BRDF、visibility项的结果会是一个矩阵（所有的入射方向到所有的出射方向的预计算结果，矩阵维度取决于SH的阶数，而不是有多少入射方向和出射方向）</strong></li></ul><p>效果：</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2025.png" alt></p><p><strong>Glossy下使用PRT产生的问题</strong>：</p><ul><li>存储巨大，四阶的SH得到16个基函数，每个点需要16阶向量与16*16的矩阵相乘。</li><li>Diffuse情况下一般三阶SH就足够，但是当Glossy非常高频时，也就是接近镜面反射的情况的时候， PRT就没有那么好用，我们虽然可以采用更高阶的SH来描述高频信息，但是使用SH甚至远不如直接采样方便。</li></ul><h1 id="情况三考虑多次bounce"><a class="markdownIt-Anchor" href="#情况三考虑多次bounce"></a> 情况三：考虑多次bounce</h1><p>我们可以用一系列的表达式来描述不同光线传播的路径都是一种什么类。区分材质区分为三种：</p><ol><li>Diffuse</li><li>Specular镜面反射</li><li>Glossy 介于两者之间</li></ol><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2026.png" alt></p><p>传播路径的区分：</p><ol><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">LE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>：Light直接到眼Eye</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>G</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">LGE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>：Light打到Glossy物体然后到眼Eye</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>G</mi><mi>G</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">LGGE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">G</span><span class="mord mathdefault">G</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>：多bounce一次,就是Light先打到壶嘴,在bounce到壶身,最后到眼。(L-&gt;Glossy-&gt;Glossy-&gt;Eye)</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>G</mi><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mi>E</mi></mrow><annotation encoding="application/x-tex">L(D|G)^*E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathdefault">G</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>：Light从光源出发,打到一个物体,可能是Diffuse也可能是Glossy,*表示bounce次数,最后到达眼Eye</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>S</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>G</mi><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mi>E</mi></mrow><annotation encoding="application/x-tex">LS(D|G)^*E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathdefault">G</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>：打到Specular面上，然后聚焦到Diffuse物体上,最后被眼睛看到，也就是caustics材质</li></ol><p>结论：</p><ul><li><strong>所有路径开始都是L最后都是E，因此我们在运用PRT时候，把L和E中间所有的东西都看作是Light transport。</strong></li><li>拆分为light和light transport之后,不管中间boucne几次,我们只需要预计算出Light transport就行，不论多么复杂的bounce,我们只需要计算出light transport就能得出最后的shading result。</li></ul><p><strong>计算方式</strong>：</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2027.png" alt></p><p>理解方式1：把light transport（图上红色下划线部分）投影到SH基函数（做了一个<strong>Product Integral）</strong></p><p>理解方式2：把light transport的预计算看作是基函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B_i(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span></span></span></span>照亮了场景的渲染过程。换句话说，把基函数看为lighting项，那么light transport就是rendering equation，我们把light transport投影到basis上，相当于用basis这个Lighting照亮物体，每个basis得到一个渲染图，最后我们进行重建从而得出最后的shading值。而解这部分的过程依旧和解渲染方程一样。</p><p>渲染效果：</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2028.png" alt></p><h1 id="prt方法总结"><a class="markdownIt-Anchor" href="#prt方法总结"></a> PRT方法总结</h1><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2029.png" alt></p><p>Sloan在02年提出的这个方法（即PRT），使用球谐函数估计光照和光线传输，将光照变成光照系数，将光线传输变成系数或者矩阵的形式，通过预计算和存储光线传输将渲染问题变为每个vertex/shading point：点乘（diffuse表面）、向量矩阵乘法（glossy表面）。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2030.png" alt></p><p>由于球谐函数的性质，该方法比较适合使用于低频的情况（可用于高频但不合适,如图即使使用了26*26阶的sh仍然得不到比较好的效果）；当改变场景或者材质时需要重新预计算light transport，此外预计算的数据比较大。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2031.png" alt></p><p>基于Sloan依旧有许多后续的研究…</p><h1 id="其它基函数"><a class="markdownIt-Anchor" href="#其它基函数"></a> 其它基函数</h1><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2032.png" alt></p><p>此外，基函数除了可以使用球谐函数外，还有很多选择，比如Wavelet、Zonal Harmonics、Spherical Gaussian、Piecewise Constant等。</p><h2 id="wavelet小波函数"><a class="markdownIt-Anchor" href="#wavelet小波函数"></a> Wavelet小波函数</h2><p>小波变换的过程就是投影过程，相比于球谐函数对低频内容友好（球谐函数使用少量的基去表示），小波变换可以全频率表示，但是只有很少的系数是非零的.</p><p>由于小波是平面上的函数，为了防止变换后在球面上出现缝隙，所以采用了<strong>Cubemap</strong>来作为环境光而不是Sphereical map。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2033.png" alt></p><p>从图中可以看到,小波变化是把每张图的高频信息留在这张图的左下,右上和右下三部分,而把剩余的低频信息放在左上角,左上角的信息可以继续进行小波变换,我们会发现高频的东西很少,对于绝大部分来说是0,不断地进行小波变换可以得到一个很不错的既保留了低频又保留了高频的压缩.</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2034.png" alt></p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2035.png" alt></p><p>但是小波也有自己的缺陷：不支持旋转（使用球谐函数进行表示时，由于球谐函数具有<strong>simple rotation</strong>的性质，所以支持光源的旋转）。</p><p><img src="/2022/11/30/Games202%E5%AE%9E%E6%97%B6%E7%8E%AF%E5%A2%83%E6%98%A0%E5%B0%84/Untitled%2036.png" alt></p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=5">Lecture5 Real-time Environment Mapping_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=6">Lecture6 Real-time Environment Mapping_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY/?p=7">Lecture7 Real-time GLobal Illumination (in 3D)_哔哩哔哩_bilibili</a></p><p><a href="https://zhuanlan.zhihu.com/p/371112302">Games202 高质量实时渲染笔记lecture 05 Real-Time Environment Mapping - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/373697912">Games202 高质量实时渲染笔记lecture 06 Real-Time Environment Mapping 02 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/377104538">GAMES202 高质量实时渲染笔记Lecture07：Real-Time Global Illumination (In 3D) - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-03实时阴影</title>
    <link href="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/"/>
    <url>/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/</url>
    
    <content type="html"><![CDATA[<h1 id="shadow-mapping"><a class="markdownIt-Anchor" href="#shadow-mapping"></a> Shadow Mapping</h1><p><strong>概述</strong>：是一个完全在图像空间中的算法，将深度信息渲染到深度图上，并在运行时通过深度对比检测物体是否在阴影中的算法。Shadow map是一个2-pass的算法</p><p><strong>优点</strong>：一旦shadow Map已经生成,就可以利用shadow map来获取场景中的几何表示而不是场景中的几何</p><p><strong>缺点</strong>：会产生自遮挡和走样现象</p><h2 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h2><ol><li><p>从light处出发看向场景生成一张记录每个像素中最近物体深度的一张图，图中有很多像素,我们记录下每个像素中他们各自看到的最浅的深度或是最近的物体他们的位置在哪,存下来从而得到一张texture。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled.png" alt></p></li><li><p>从Camera(眼睛)出发，再渲染一遍场景。看渲染中的每个像素中都要来判断是否能被light照到,如果被照到则不在阴影中,反之,则存在于阴影中</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%201.png" alt></p></li></ol><p>在Opengl中,1-pass就是在light处放置一个相机,然后往某一方向看去,定义framebuffer写到某个texture上,然后在fragment shader中定义写的是一个深度而非shading的结果,在2-pass中则只需要用1-pass得到的texture即可。</p><h2 id="存在的问题"><a class="markdownIt-Anchor" href="#存在的问题"></a> 存在的问题</h2><ol><li><strong>自遮挡</strong><ul><li><p>在使用 Shadow Map 的时候，如果不做任何处理，就会出现下图这种现象，被称为 Shadow Acne 或者 Self-Shadowing。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%202.png" alt></p></li><li><p>成因：物体的实际深度，与自己的采样深度，相比较不相等（实际深度大于采样深度）导致的，所以可谓是自己（采样的副本）遮挡了自己（实际的物体），所以被称为 self shadowing。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%203.png" alt></p></li><li><p>解决方法：Shadow Bias。在判断前先每个 shading point 深度往光照方向挪一挪，让由于自遮挡被判断处于阴影的点挪到有光照的地方，就能很大程度改善这一点。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%204.png" alt></p></li><li><p>但是存在另一个问题：这个现象只有在加入了 shadow bias 的时候才会出现，如下图，会看到影子脱离了物体（像飞起来的小飞侠一样），被称为 peter-panning。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%205.png" alt></p></li><li><p>解决 peter-panning 的方法</p><ul><li><p>可以看到，bias 加小了没用，依旧会有自遮挡；加多了又会导致 peter panning。所以要怎么加，是有一定技巧的，最终的目标是要找到一个刚好能够消除 shadow acne 的 bias 值。</p></li><li><p>现在常用的 shadow bias 的计算方法，是基于物体斜度的，称为 <strong>slope scale based depth bias</strong>。<strong>原理：当斜度大的时候，shadow map 上的一个点，所对应的实际物体的一小块面，其深度变化就会更大。</strong></p></li><li><p>基于斜度的偏移可以根据表面的斜度，更改深度的偏差值。当表面与灯光的夹角越小，那么阴影贴图中一个像素对应的表面区域越大，其深度变化也就越大，就需要添加更大的 bias。表面与灯光的夹角可以通过法线与灯光方向的夹角余弦值来计算（dot(normal,lightDir)），所以 bias 要和夹角余弦值成反比。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%206.png" alt></p></li><li><p>最终公式是：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>=</mo><mi>f</mi><mi>a</mi><mi>c</mi><mi>t</mi><mi>o</mi><mi>r</mi><mi>S</mi><mi>l</mi><mi>o</mi><mi>p</mi><mi>e</mi><mo>∗</mo><mi>s</mi><mi>l</mi><mi>o</mi><mi>p</mi><mi>e</mi><mo>+</mo><mi>c</mi><mi>o</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mi>B</mi><mi>i</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">bias = factorSlope * slope + constantBias</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">a</span><span class="mord mathdefault">c</span><span class="mord mathdefault">t</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">s</span></span></span></span></p></li><li><p>factorSlope 是斜度偏差范围的系数，表示斜度偏差的程度，slope 是根据夹角余弦值计算，constantBias 是基础的阴影偏差。由此可知，factorSlope 与 constantBias 都是需要手动给出的，通过调试才能得到最优的效果。</p></li><li><p>举例来说，一个 x 方向的斜坡，同样是在 x 方向上差 0.01，如果坡角是 45 度，那么深度差就是 0.01，如果坡角是 60 度，那么深度差就是 0.017.</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%207.png" alt></p><p>如果采样点都是在 x=0.005 处，那么对坡角 60 的情况，就需要 bias 至少为 0.0085，才可以保证不会产生 shadow acne，而 45 度的情况，bias 只要 0.005 就可以了</p><p>对于这个公式，需要做一些说明：</p><p>1）坡度如何确定？当然是用顶点的 normal，但是需要注意的是，我们是在灯光坐标系下观察物体的，所以 normal 需要转换到 light space 中。</p><p>2）里面的两个参数 factorSlope 和 constantBias 如何确定？只能通过不断调整才能得到。</p></li><li><p>解决 peter-panning 的另一种方法：<strong>Second-depth shadow mapping</strong>，此时我们就舍弃biasd的概念,而是在渲染时不仅存最小的深度,我们还要存第二小的深度,然后我们用最小深度和第二小深度中间的深度来作比较。但实际中并没有人去使用这个技术,因为场景内的物体必须都是watertight（非面片），还有就是计算复杂，开销太大</p></li></ul></li></ul></li><li><strong>走样</strong><ul><li><p>shadow map本身就存在分辨率，当分辨率不够大自然会看到锯齿,因为shadow map上每一个像素都可以看为小片,那么投出来的阴影自然会存在锯齿。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%208.png" alt></p></li><li><p>解决的方法是下面提到的PCF</p></li></ul></li></ol><h1 id="pcfpercentage-closer-filtering"><a class="markdownIt-Anchor" href="#pcfpercentage-closer-filtering"></a> <strong>PCF(percentage Closer Filtering)</strong></h1><p>概述：PCF能解决shadow map的锯齿块和硬边问题，产生柔和软阴影。</p><p>核心思想：从深度贴图中多次采样，每一次采样的纹理坐标都稍有不同（比如采样像素周围一圈范围）。每个独立的样本可能在也可能不再阴影中。所有的次生结果接着结合在一起，最终通过样本的总数目将深度结果平均化，得到的可见性变为0~1之间的数。</p><p>步骤：在<strong>第二个pass中</strong>，对于这个shading point我们仍要判断是否在阴影内,但是我们把其投影到light之后不再只找其对应的单个像素,而是<strong>找其周围一圈的像素</strong>（<strong>采样方式可以是均匀采样、泊松圆盘采样等，采样的范围称为Filter Size</strong>）,把周围像素深度比较的结果<strong>加起来平均一下</strong>，就得到一个0-1之间的数，就得到了一个模糊的结果。</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-type">float</span> PCF(<span class="hljs-type">sampler2D</span> shadowMap,<span class="hljs-type">vec4</span> coords)&#123;<br>  poissonDiskSamples(coords.xy);<br>  <span class="hljs-comment">// uniformDiskSamples(coords.xy); // 均匀圆盘采样时阴影边缘不够自然</span><br>  <span class="hljs-type">float</span> blocker=<span class="hljs-number">0.</span>;<br>  <span class="hljs-type">float</span> filterSize=<span class="hljs-number">25.</span>;<br>  <span class="hljs-comment">// 上面生成的采样点处于单位圆内，因此可以使用一个 filterSize 来控制整体的采样范围。由于作业框架 Shadowmap 的大小为 2048 x 2048，每个像素的长度可以近似为 1 / 2048。</span><br>  <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;NUM_SAMPLES;i++)&#123;<br>    <span class="hljs-type">vec2</span> uv_bias=poissonDisk[i]/<span class="hljs-number">2048.</span>*filterSize;<br>    <span class="hljs-type">float</span> shadowDepth=unpack(<span class="hljs-built_in">texture2D</span>(shadowMap,coords.xy+uv_bias));<br>    <span class="hljs-keyword">if</span>(coords.z-Bias3()&gt;shadowDepth)&#123;<br>      blocker++;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1.</span>-blocker/<span class="hljs-type">float</span>(NUM_SAMPLES);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="pcsspercentage-closer-soft-shadows"><a class="markdownIt-Anchor" href="#pcsspercentage-closer-soft-shadows"></a> <strong>PCSS（Percentage Closer Soft Shadows）</strong></h1><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%209.png" alt></p><p>PCSS为了实现更真实的软阴影，达到离遮挡物距离近的时候硬，远的时候软的效果：<strong>阴影接受物与阴影投射物的距离越小,阴影越锐利。因此,我们要解决的一个问题是我们如何决定一个软阴影的半影区。换句话说，就是filter size 有多大的问题。</strong></p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2010.png" alt></p><ol><li>算每个区块深度（shadow map上，<strong>只算被遮挡点的平均深度，而不是区块内所有点的平均深度</strong>）</li><li>利用相似三角形的原理计算新的半影直径</li><li>PCF。在shadow map上采样，范围由第二步确定。</li></ol><p><strong>本质</strong>：求出了阴影中需要做PCF的半影部分后再进行PCF的计算，这样动态调节了半影范围，也就是动态设置了PCF的搜索范围，这样我们的硬阴影部分清晰，软阴影部分模糊，动态的实现了不错的软阴影效果。</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs glsl"><span class="hljs-type">float</span> PCSS(<span class="hljs-type">sampler2D</span> shadowMap,<span class="hljs-type">vec4</span> coords)&#123;<br>  <br>  <span class="hljs-comment">// STEP 1: avgblocker depth</span><br>  <span class="hljs-type">float</span> d_Blocker = findBlocker(shadowMap,coords.xy,coords.z);<br>  <span class="hljs-type">float</span> w_Light = <span class="hljs-number">1.</span>;<br>  <span class="hljs-type">float</span> d_Receiver = coords.z;<br>  <br>  <span class="hljs-comment">// STEP 2: penumbra size</span><br>  <span class="hljs-type">float</span> w_penumbra = w_Light*(d_Receiver-d_Blocker)/d_Blocker;<br>  <span class="hljs-comment">// return w_penumbra;</span><br>  <span class="hljs-comment">// STEP 3: filtering</span><br>  <span class="hljs-type">float</span> blocker=<span class="hljs-number">0.</span>;<br>  <span class="hljs-type">float</span> filterSize=<span class="hljs-number">25.</span>;<br>  <span class="hljs-comment">// 上面生成的采样点处于单位圆内，因此可以使用一个 filterSize 来控制整体的采样范围。由于作业框架 Shadowmap 的大小为 2048 x 2048，每个像素的长度可以近似为 1 / 2048。</span><br>  <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;NUM_SAMPLES;i++)&#123;<br>    <span class="hljs-type">vec2</span> uv_bias=poissonDisk[i]/<span class="hljs-number">2048.</span>*filterSize*w_penumbra;<span class="hljs-comment">// !这里与PCF不同</span><br>    <span class="hljs-type">float</span> shadowDepth=unpack(<span class="hljs-built_in">texture2D</span>(shadowMap,coords.xy+uv_bias));<br>    <span class="hljs-keyword">if</span>(coords.z-Bias3()&gt;shadowDepth)&#123;<br>      blocker++;<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">1.</span>-blocker/<span class="hljs-type">float</span>(NUM_SAMPLES);<br>  <br>&#125;<br></code></pre></td></tr></table></figure><p>步骤1和步骤3需要对整个区域的<strong>各个shading point与点x的深度进行比较</strong>，所以会导致很慢。由于需要在一个范围内进行比较，那么步骤1和3的时间开销会决定整个算法的时间开销，此外为了得到越“软”的阴影意味着需要使用更大的filtering size，会导致速度越慢。为了解决这两步慢的问题,就有人提出了Variance Soft Shadow Mapping。</p><h1 id="vssm-variance-soft-shadow-mapping"><a class="markdownIt-Anchor" href="#vssm-variance-soft-shadow-mapping"></a> <strong>VSSM (Variance Soft Shadow Mapping)</strong></h1><p>解决PCSS第一步和第三步慢的问题，优化了第三步范围查询shadow map得到平均深度值，直接使用切比雪夫进行猜测。</p><h2 id="第一步的优化如何更快地求遮挡物的平均深度"><a class="markdownIt-Anchor" href="#第一步的优化如何更快地求遮挡物的平均深度"></a> 第一步的优化：如何更快地求遮挡物的平均深度</h2><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2011.png" alt></p><ul><li><p>将其分为两个区域，<strong>蓝色</strong>是深度小于shading point的遮挡区域,其平均深度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>o</mi><mi>c</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{occ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<strong>红色</strong>是深度大于shading point的非遮挡区域，其平均深度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>u</mi><mi>n</mi><mi>o</mi><mi>c</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{unocc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。并且我们认为区域内的像素总数为<strong>N，<strong>非遮挡的像素为</strong>N1</strong>个，遮挡的像素为<strong>N2</strong>个</p></li><li><p>重要公式**：非遮挡像素占的比例 * 非遮挡物的平均深度 + 遮挡像素占的比例 * 遮挡物的平均深度 = 总区域内的平均深度**</p></li><li><p><strong>VSSM核心思想</strong></p><ul><li><p>求范围内有百分之多少的像素比shading point浅，于是就可以把范围内所有的深度做一个直方图，根据直方图可以判断shaing point的深度排名。而<strong>VSSM假设这个直方图的分布是正态分布，而该分布最重要的是得到均值和方差。而求”有百分之多少的像素比shading point浅”这个问题就转化为”给定shading point值，PDF（概论密度函数）下的阴影面积是多少，或者是CDF在shading poingt处的函数值是多少“</strong>（对于一个通用的高斯的PDF，对于这类PDF，可以直接把CDF结果，输出为一个表，叫误差函数Error Fuction，误差函数有数值解，但是没有解析解，在C++ 中的函数ERF(lower_limit,[upper_limit])函数可以计算CDF。）</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2012.png" alt></p></li><li><p>但是计算PDF的面积又过于麻烦，于是找到了一个不等式来近似计算。那么就可以通过均值和方差获得图中红色面积的值。因此就可以不用计算CDF了，而是通过1 - 求出的x&gt;t的面积值得到CDF.但是<strong>切比雪夫不等式有一个苛刻的条件：t 必须在均值右边，也就是t大于均值。</strong></p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2013.png" alt></p></li></ul></li><li><p>总区域内的平均深度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>A</mi><mi>v</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{Avg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>我们用<strong>mipmap</strong>或者<strong>SAT(Summed Area Tables)<strong>去求,也就是得到了正态分布的</strong>均值。<strong>然后用shadow map（存储的是深度值）和square-depth map(存储的是深度值的平方）来计算</strong>方差</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>E</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Var(X) = E(X^2)-E^2(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></p></li><li><p>根据切比雪夫不等式近似求出两个比例<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mn>1</mn></msub><mi mathvariant="normal">/</mi><mi>N</mi><mi mathvariant="normal">、</mi><msub><mi>N</mi><mn>2</mn></msub><mi mathvariant="normal">/</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">N_1/N、N_2/N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></p></li><li><p>最后一个假设：认为非遮挡物的平均深度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>u</mi><mi>n</mi><mi>o</mi><mi>c</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{unocc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = shading point的深度</p></li><li><p>将所有值代入可求出遮挡物的平均深度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mrow><mi>o</mi><mi>c</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Z_{occ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>p</p></li><li><p>ps：接受平面是曲面或者与光源不平行的时候就会出问题</p></li></ul><h2 id="第三步的优化"><a class="markdownIt-Anchor" href="#第三步的优化"></a> 第三步的优化</h2><ul><li>我们通过生成shadow map和square-depth map得到期望值的平方和平方值的期望再根据公式得到方差：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>E</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Var(X) = E(X^2)-E^2(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></li><li>通过mipmap或者SAT得到期望</li><li>得到期望和方差之后，根据切比雪夫不等式近似得到一个depth大于shading point点深度的面积，也就是求出了未遮挡Shading point的概率，从而可以求出一个在1-0之间的visilibity</li><li>ps：省去了在这个范围内进行<strong>采样</strong>或者<strong>循环</strong>的操作,大大加速了第三步。如果场景/光源出现移动 就需要更新MIPMAP，本身还是有一定的开销，但是生成MIPMAP硬件GPU支持的非常到位，生成非常快（几乎不花时间），而是SAT会慢一点。</li></ul><h1 id="moment-shadow-mapping"><a class="markdownIt-Anchor" href="#moment-shadow-mapping"></a> <strong><strong>Moment shadow mapping</strong></strong></h1><p>为了避免VSSM中不是正态分布情况下的问题,就引入了更高阶的<strong>moments</strong>来得到更加准确的深度分布情况.想要描述的更准确，就要使用更高阶的<strong>moment(矩)</strong>，矩的定义有很多，最简单的矩就是记录一个数的次方，<strong>VSSM 就等于用了前两阶的矩</strong>。这样多记录几阶矩就能得到更准确的结果。</p><p>如果保留前M阶的矩，就能描述一个阶跃函数，阶数等2/M,就等于某种展开。越多的阶数就和原本的分布越拟合。一般来说4阶就够用。</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2014.png" alt></p><h1 id="sdfdisatance-field-soft-shadows"><a class="markdownIt-Anchor" href="#sdfdisatance-field-soft-shadows"></a> <strong>SDF(Disatance field soft shadows)</strong></h1><p><strong>有向距离场SDF</strong>：记录了空间中任何一点到定义该场的物体之间的最小距离。</p><p><strong>背后的理论</strong>：optimal transport最优传输。</p><h2 id="应用1ray-marching"><a class="markdownIt-Anchor" href="#应用1ray-marching"></a> 应用1：Ray Marching</h2><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2015.png" alt></p><p>简述：将SDF距离作为安全距离，判断光线是否与物体相交，可以加速光线步进。</p><p>详述：</p><p>任意一点的SDF我们是已知的,因此在P0 点时,我们以它的SDF(P0)为半径做一个圆(此处假设在2D内,如果在3D内则是一个球),在这个圆内无论是哪个方向前进,只要不超过半径距离,都不会碰见物体,是安全的.</p><p>因此我们可以利用这个特性不断的朝一个方向前进,以P0开始朝一方向走SDF(P0)到达 P1 点,若仍与物体表面相距甚远,则以P1点为新起点继续走SDF(P1)到达 P2 点,假设此处 P2 点的SDF足够小,也就是代表离物体表面足够接近了,则进行求交操作.</p><p>如果在超一方向trace非常远的距离但仍然什么都没trace到,此时就可以舍弃这条光线,也就是停止了.</p><p>虚幻引擎中便使用了这种方法判断静态网格的表面：<a href="https://docs.unrealengine.com/5.1/en-US/mesh-distance-fields-in-unreal-engine/">Mesh Distance Fields in Unreal Engine | Unreal Engine 5.1 Documentation</a></p><h2 id="应用2生成软阴影"><a class="markdownIt-Anchor" href="#应用2生成软阴影"></a> 应用2：生成软阴影</h2><p>将安全距离的概念进行延伸，在任意一点通过sdf可以获得一个safe angle，即取点P为shading point往一方向打出一根光线,光线上的一点a,有一个SDF值SDF(a),也就是在a点以SDF(a)为半径所做的球或圆内是安全的,不会碰到物体.</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2016.png" alt></p><p>把shading point和<strong>面光源</strong>相连，所得到的安全角度越小，被遮蔽的可能越高，就可以认为</p><p><strong>safe angle越小，阴影越黑,越趋近于硬阴影;</strong></p><p><strong>safe angle够大就视为不被遮挡没有阴影,也就越趋近于软阴影。</strong></p><h3 id="具体步骤"><a class="markdownIt-Anchor" href="#具体步骤"></a> 具体步骤</h3><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2017.png" alt></p><ul><li><p>我们以o为起点,沿一个方向推进,仍然是ray marhcing的步骤,在p1点以SDF(p1)进行推进,其余点也是一样,此处主要是为了求safe angle,我们在起点o沿每个点的sdf为半径所形成的圆做切线,从而求出各个点的safe angle,我们最后再<strong>取其中最小的角度作为总的safe angle.</strong></p></li><li><p>求safe angle的公式：以p1点为例,从o点到p1的距离为斜边,sdf(p1)是直角边,因此我们用arcsin就可以求出safe angle了.</p></li><li><p>但是对于反函数计算对于计算机不友好，于是使用比值而不是比值的arcsin来描述safe angle的大小，然后引入一个系数k（k的大小是控制阴影的软硬程度）即可</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2018.png" alt></p></li></ul><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>SDF是一个快速的高质量的软阴影生成方法(比shadow map快是忽略了SDF生成的时间),但是在存储上的消耗非常大，而且生成SDF的花的时间也要很久，SDF是预计算，在有动态形变的物体的情况就得重新计算SDF。</p><h1 id="概念补充"><a class="markdownIt-Anchor" href="#概念补充"></a> 概念补充</h1><h2 id="sat"><a class="markdownIt-Anchor" href="#sat"></a> SAT</h2><p>SAT是百分百准确的一个数据结构。</p><p>SAT的出现是为了解决范围查询(在区域内快速得到平均值),并且,范围内求平均值是等价于范围内求和的,毕竟总和除以个数=平均值.</p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2019.png" alt></p><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2020.png" alt></p><h2 id="mipmap"><a class="markdownIt-Anchor" href="#mipmap"></a> MIPMAP</h2><p><img src="/2022/11/20/Games202%E5%AE%9E%E6%97%B6%E9%98%B4%E5%BD%B1/Untitled%2021.png" alt></p><p>是一个<strong>快速的,近似的,正方形的范围查询</strong>,由于它要做插值,因此即便是方形有时也会不准确.同时当插值的范围不是2的次方时，也就是在两个MIPMAP之间时，还要再进行一次插值，也就是“三线性插值”，这样会让结果更加不准确,因此局限性太大且准确度也不算高.</p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=2">Lecture2 Recap of CG Basics_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=3">Lecture3 Real-time Shadows 1_哔哩哔哩_bilibili</a></p><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=4">Lecture4 Real-time Shadows 2_哔哩哔哩_bilibili</a></p><p><a href="https://zhuanlan.zhihu.com/p/363355018">GAMES202 高质量实时渲染课程笔记Lecture 2: Recap of CG Basics - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/363355909">GAMES202 Real-Time High Quality Rendrting 高质量实时渲染课程笔记Lecture 3: Shadow 01 - 知乎 (zhihu.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/363357318">GAMES202 Real-Time High Quality Rendrting 高质量实时渲染课程笔记Lecture 4: Shadow 02 - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-02渲染管线简述</title>
    <link href="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/"/>
    <url>/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><ul><li>实时渲染：30fps（每秒渲染30幅画面）</li><li>实时渲染主要应用于游戏，离线渲染（难度更大）主要应用于电影</li><li>编辑器：可以使用VS Code，有插件glsl-canvas可以直接预览shader</li></ul><h1 id="渲染管线"><a class="markdownIt-Anchor" href="#渲染管线"></a> 渲染管线</h1><h2 id="什么是图形渲染管线"><a class="markdownIt-Anchor" href="#什么是图形渲染管线"></a> <strong>什么是图形渲染管线？</strong></h2><ul><li>主要功能：根据给定的虚拟相机、三维对象、光源、照明模式、纹理等诸多条件的情况下，生成一个二维图像的过程。</li><li>是实时渲染的底层工具</li><li>物体外观的决定因素：三维对象本身的材质属性、光源、着色方程（照明模式）、纹理（贴图）</li></ul><h2 id="渲染管线架构是怎样的"><a class="markdownIt-Anchor" href="#渲染管线架构是怎样的"></a> <strong>渲染管线架构是怎样的？</strong></h2><ul><li><p>管线是并行执行的</p></li><li><p>管线中最慢的阶段会影响整个管线的执行的速度</p></li><li><p>计算机实时宣染管线四大主要阶段：应用、几何处理、光栅化、像素处理</p></li><li><p>功能阶段有一个特定的任务要执行，但没有指定任务在管线中执行的方式</p></li><li><p>渲染速度表示</p><ul><li>每秒帧数（FPS），每秒渲染的图像数量。FPS用于表示特定帧速率，或者在使用期间的平均性能。</li><li>赫兹（Hz），渲染一帧所需要的时间，即更新的频率，赫兹用于硬件，被设置为固定速率</li></ul></li><li><p>渲染时间的单位：毫秒（ms）</p></li><li><p><strong>渲染管线四个阶段概述</strong></p><p><img src="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/Untitled.png" alt></p><ul><li><strong>应用程序阶段，几何阶段，光栅化阶段，像素处理阶段（加上”后处理阶段“）</strong></li><li><strong>应用程序阶段：<strong>传统上在CPU上执行的一些任务包括</strong>碰撞检测</strong>[collision detection]、<strong>全局加速算法</strong>[global acceleration algorithms]、<strong>动画</strong>[animation]、<strong>物理模拟</strong>[physics simulation]和许多其他任务，这取决于应用程序的类型。</li><li><strong>几何阶段：<strong>这一阶段涉及</strong>变换</strong>[transforms]、<strong>投影</strong>[projections]和所有其他类型的几何处理。这个阶段计算要绘制的内容、应该怎么画，以及它应该画在哪里。几何阶段通常执行在包含许多可编程核心[programmable cores]以及固定操作硬件[fixed-operation hardware]的图形处理单元[graphics processing unit]。</li><li><strong>光栅化[rasterization]阶段：<strong>通常</strong>接受三个顶点作为输入，形成一个三角形，并找到三角形内的所有像素，然后将它们转发到下一阶段</strong>。</li><li><strong>像素处理[pixel processing]阶段：<strong>对每个像素执行一个程序，以</strong>确定其颜色</strong>，并可能执行<strong>深度测试</strong>[depth testing]，以确定其是否可见[visible]。还可以执行<strong>逐像素操作</strong>[per-pixel operations]，例如将新计算的颜色与以前的颜色混合[blending]。</li></ul></li><li><p>除了应用阶段在CPU上执行，其他阶段都在GPU上执行</p></li></ul><h2 id="渲染管线的4个阶段详述"><a class="markdownIt-Anchor" href="#渲染管线的4个阶段详述"></a> <strong>渲染管线的4个阶段详述</strong></h2><h3 id="一-应用阶段"><a class="markdownIt-Anchor" href="#一-应用阶段"></a> 一、应用阶段</h3><ol><li><strong>准备基本场景数据</strong><ol><li><strong>场景物体</strong>数据：物体变换数据（位置、旋转、缩放等），物体网格数据（顶点位置、UV贴图等）</li><li><strong>光源</strong>信息：光源类型（方向光、点光、聚光等），光源的位置、方向、角度等其他参数</li><li><strong>摄像机</strong>参数：位置、方向、远近裁剪平面、正交/透视（FOV）、视口比例/尺寸等</li><li><strong>阴影</strong>设置：是否需要阴影（判断该光源可见范围内是否有可投射阴影的物体），阴影参数（对应光源序号、阴影强度、级联参数、深度偏移、近平面偏移等）</li><li>逐光源绘制<strong>阴影贴图</strong><ol><li>近平面偏移</li><li>逐级联：计算当前光源+级联对应的观察矩阵、投影矩阵，以及对应到阴影贴图里的视口区，绘制到阴影贴图</li></ol></li></ol></li><li><strong>加速算法与粗粒度剔除</strong>：碰撞检测、加速算法（八叉树、KD树、BVH）、遮挡剔除、其他算法</li><li><strong>渲染设置</strong><ol><li>绘制设置：合批方式</li><li>物体绘制顺序：相对摄像机的距离、材质RenderQueue、UICanvas、其他方式等</li><li>渲染目标：FrameBuffer、RenderTexture、MRT</li></ol></li><li><strong>调用DrawCall输出到显存</strong><ol><li>顶点数据：位置、颜色、法线、纹理坐标等</li><li>其它数据：MVP变换矩阵、纹理贴图、阴影贴图、预计算数据等</li></ol></li></ol><h3 id="二-几何阶段"><a class="markdownIt-Anchor" href="#二-几何阶段"></a> 二、<strong>几何阶段</strong></h3><p><img src="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/Untitled%201.png" alt></p><p>把输入的3D数据转换成2D数据。包括：</p><ul><li><p><strong>顶点着色</strong></p><ul><li><p>任务：计算一个顶点的位置，计算程序员想要的顶点输出数据（法线、纹理坐标）<strong>。</strong></p></li><li><p>着色：确定光在材料上的效果的操作。计算物体上不同点的着色方程；各种各样的材料数据可以存储在每个顶点；顶点着色结果发送到光栅化和像素处理阶段插值和用于计算表面的着色</p></li><li><p>通常，着色计算通常认为是在世界空间中进行的。在实践中，有时需要将相关实体（诸如相机和光源）转换到一些其它空间（诸如模型或观察空间）并在那里执行计算，也可以得到正确的结果。</p></li><li><p><strong>模型和视图变换 Model and View Transform</strong></p><ul><li>在屏幕上的显示过程中，模型通常需要变换到若干不同的空间或坐标系中。<strong>模型变换</strong>的变换对象一般是模型的顶点和法线。物体的坐标称 为模型坐标。世界空间是唯一的，所有的模型经过变换后都位于同一个空间中。</li><li>为了便于投影和裁剪，必须对相机和所有的模型进行视点变换。变换的目的就是要把相机放在原点，然后进行视点校准，使其朝向 Z 轴负方向， y 轴指向上方 ,x 轴指向右边。在视点变换后，实际位置和方向就依赖于当前的 API 。我们称上述空间为相机空间或者观察空间。</li></ul><p><img src="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/Untitled%202.png" alt></p></li></ul></li><li><p><strong>可选顶点处理</strong>(它们的使用既取决于硬件的性能（不是所有GPU都有），也取决于程序员的需求)</p><ul><li>曲面细分：通过曲面细分，一个曲面可以生成一个适当数量的三角形。由一系列阶段构成——外壳着色器[hull shader]、曲面细分[tessellator]和域着色器[domain shader]。靠近的时候面数很多，远离的时候很少</li><li>几何着色器：接受各种类型的图元，并可以产生新的顶点。几何着色器有几个用途，其中最流行的是粒子生成</li><li>流输出：使用GPU作为一个几何引擎；可以选择将它们输出到数组中以进行进一步处理；这些数据可以被CPU或GPU本身在以后使用；通常用于粒子模拟</li></ul></li><li><p><strong>投影 Projection。</strong> 将视体变换到一个对角顶点分别是(-1,-1,-1)和(1,1,1)单位立方体（unit cube）内，这个单位立方体通常也被称为规范立方体（Canonical View Volume，CVV）。（虽然这些矩阵变换是从一个可视体变换到另一个，但它们仍被称为投影，因为在完成显示后，Z坐标将不会再保存于的得到的投影图片中。通过这样的投影方法，就将模型从三维空间投影到了二维的空间中。）</p></li><li><p><strong>裁剪 Clipping。</strong> 裁剪阶段的目的，就是对部分位于视体内部的图元进行裁剪操作。可见范围裁剪体内的图元被传递到屏幕映射阶段。</p><p><img src="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/Untitled%203.png" alt></p></li><li><p><strong>屏幕映射 Screen Mapping。</strong> 屏幕映射主要目的就是将上一步传过来的图元找到屏幕上对应的坐标。</p><p><img src="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/Untitled%204.png" alt></p><ul><li>整数和浮点值与像素（和纹理坐标）的关系：给定一个水平像素数组并使用笛卡尔坐标，最左边的像素的左边缘在浮点坐标中为0.0。这个像素的中心是0.5。因此，像素范围[0，9]覆盖的浮点数范围从[0.0，10.0）</li><li>所有API的像素位置值都是从左到右递增的，但是在OpenGL和DirectX某些情况下，顶部边缘和底部边缘零的位置是不一致的。从一种API迁移到另一种API时需要来考虑这种差异。<ul><li>OpenGL将左下角作为最小值元素</li><li>DirectX将左上角作为最小值元素</li></ul></li></ul></li></ul><h3 id="三-光栅化阶段"><a class="markdownIt-Anchor" href="#三-光栅化阶段"></a> 三、<strong>光栅化阶段</strong></h3><p><img src="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/Untitled%205.png" alt></p><p>光栅（栅格化或者像素化）把图元映射为最终屏幕上显示的颜色。</p><ul><li><strong>三角形设定阶段：</strong> 这一个阶段也称作primitive assembly，也就是将一个个图元组装起来，会计算图元的边方程和一些其他信息，说白了就是<strong>将各个点连接起来，组成真正的三角形（或者连成线）。</strong> 然后下一阶段会利用这些信息进行三角形的遍历，也就是检查有哪些像素位于该三角形图元内，对于点、线图元，就看他们覆盖了哪些像素。</li><li><strong>三角形遍历：</strong> 找到哪些采样点或像素在三角形中的过程通常叫三角形遍历。</li></ul><h3 id="四-像素处理阶段"><a class="markdownIt-Anchor" href="#四-像素处理阶段"></a> 四、像素处理阶段</h3><p>像素处理是对图元内的像素或采样点进行逐像素或逐采样点计算和操作的阶段。</p><ul><li><strong>像素着色阶段：</strong> 这个阶段的目的是给输入每一个Pixel赋予正确的颜色，这些颜色的来源可以是纹理、图元的顶点信息和光照信息等。<ul><li>首先对于纹理信息，前面的阶段我们已经得到了每个Vertex Shader的纹理坐标，那么我们就可以拿着这个这个坐标去纹理单元中裁剪出这个图元对应的纹理，然后再给图元中的每个像素赋值。</li><li>之前在Vertex Shading阶段提到过，可以给每个Vertex加上对应的光照、阴影信息，那么这些信息怎么作用到图元中的每个像素呢？在GPU中是通过插值（Interpolate）来实现的，具体就是用三角形三个顶点的值，来得到三角形中某个点的相应信息。</li><li>以上是<strong>逐顶点计算</strong>，如果三角形比较大，插值出来的光照效果可能不理想，于是可以使用Per pixel lighting，顾名思义，就是对每个像素进行光照处理。具体实现方法是用光源向量、射线向量、法线向量来计算每个像素的光照信息</li></ul></li><li><strong>融合阶段：<strong>融合阶段的主要任务是合成当前储存于缓冲器中的由之前的像素着色阶段产生的片段颜色，说白了就是</strong>输入的每个Pixel都有相应的颜色信息，被存储在Color buffer，这一阶段就是要整合这些Pixel信息，以得到具体一帧的图像信息，这一阶段也被称作ROP</strong>。此外，融合阶段还负责透明度测试、深度测试、模板测试的处理。</li></ul><p>当图元通过光栅化阶段之后，从相机视点处看到的东西就可以在荧幕上显示出来。为了避免观察者体验到对图元进行处理并发送到屏幕的过程，图形系统一般使用了<strong>双缓冲（double buffering）机制</strong>，这意味着屏幕绘制是在一个后置缓冲器（backbuffer）中以离屏的方式进行的。一旦屏幕已在后置缓冲器中绘制，后置缓冲器中的内容就不断与已经在屏幕上显示过的前置缓冲器中的内容进行交换。注意，只有当不影响显示的时候，才进行交换。</p><p><strong>GPU管线（实现了上述的概念管线）：</strong></p><p><img src="/2022/11/06/Games202%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF%E7%AE%80%E8%BF%B0/Untitled%206.png" alt></p><ul><li>从Vertex Shader到Screen Mapping都属于Geometry Processing，其中前三个阶段属于Vertex Shading阶段。</li><li>然后通过Projection、Clipping，得到unit-cube（也被称作canonical view volume），再进行Screen Mapping，转换到对应的屏幕坐标系。</li><li>接下来就到了光栅化阶段，即通过Triangle Setup &amp; Travelsal，得到各个图元对应的像素，拿着这些像素，就来到了最后的Pixel Processing阶段。</li><li>首先通过Pixel Shader得到每个像素的颜色信息，再通过Merging进行各种测试、混合颜色，以得到最终的画面信息。到这里，就完成了整条Rendering Pipeline，下一步就可以将画面输出到显示器上了。</li></ul><h1 id="概念补充"><a class="markdownIt-Anchor" href="#概念补充"></a> 概念补充</h1><h2 id="垂直同步与双重缓冲-三重缓冲"><a class="markdownIt-Anchor" href="#垂直同步与双重缓冲-三重缓冲"></a> 垂直同步与双重缓冲、三重缓冲</h2><p>开启垂直同步会带来两个问题：</p><p>第一，帧数下降。一个显而易见的原因是，如果刷新率是60HZ，那么显卡如果需要等待垂直同步信号才生成下一帧，那么帧数就不会超过60帧/s。但是这还不是问题的全部，如果你的显卡性能并不足以保证每秒60帧是速度呢？那么就会出现在一个垂直同步信号周期内，渲染不出一帧画面的情况，那么显卡就会将上一帧画面输出，而延迟1个周期才输出下一帧画面。如果不开垂直同步你的帧数有50帧的话，开了垂直同步，可能就会只有40帧左右，甚至更少；</p><p>第二，操作延迟。原因和帧数下降是基本一样的。你的操作决定了显卡如何生成下一帧画面，而如果这一帧画面需要2、3个垂直同步信号周期才能输出到显示器上，延迟感就会非常的明显。但是和帧数下降问题不同，即便你显卡速度很快，能够在开启垂直同步的情况下依然保持60FPS，这个操作延迟问题也依然存在。原因在于显卡在等待垂直同步过程中，不生成新帧，而你的操作却是连续的。这样连续的操作却不能生成连续的帧，操作就会出现延迟。</p><p><strong>解决方案：三重缓冲</strong></p><p>所谓的三重缓冲，说白了，就是我们有3个帧缓冲器！除去我们正常使用的，向显示器输出信号的缓冲区(A区)，我们另外再开辟2个缓冲区(B1、B2区)，当A区已满，等待垂直同步信号的时候，显卡生成的下一帧画面，写入到B1区；如果还需要再生成下一帧，则写入B2区；如果再再需要下一帧，则写入B1区。总之，在得到垂直同步信号之前，帧数据总是写入B1或者B2区内，当获得垂直同步信号之后，将最新的一帧写入A1区，输出到显示器。当然，这只是原理，实际上并没有固定用处的缓冲区，哪个缓冲区是最新生成的一帧，哪个就可以作为A区输出帧画面数据。</p><p>这样，我们首先解决了帧数下降的问题，由于显卡不需要暂停等待信号才生成新帧，所以理论上帧率就和你不开垂直同步是一样的。帧率不会降低，操作的延迟也就不会有那么明显。虽然最终得到的还是和刷新率一样的画面帧数，但由于画面和操作都是连续的，因此也不会造成额外的操作延迟。</p><p><strong>三重缓冲的问题：</strong> 显存占用非常大。这很好理解，原本只需要1个的缓冲区，现在变成三个，显存占用率自然也就是三倍。如果你再开个高分辨率，抗锯齿什么的，那显存占用率那是噌噌往上涨的。</p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><ul><li>《Real-Time Render 4th》</li><li><a href="https://zhuanlan.zhihu.com/p/61949898">GPU Rendering Pipeline——GPU渲染流水线简介 - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/127974083?utm_id=0">应该开启&quot;垂直同步&quot;吗 ？</a></li><li><a href="https://www.jianshu.com/p/da82d3616cca">简书-OpenGL ES 多目标渲染（MRT）</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games202-01前言</title>
    <link href="/2022/11/01/Games202%E5%89%8D%E8%A8%80/"/>
    <url>/2022/11/01/Games202%E5%89%8D%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="课程内容总览"><a class="markdownIt-Anchor" href="#课程内容总览"></a> 课程内容总览</h1><h3 id="重要的算法"><a class="markdownIt-Anchor" href="#重要的算法"></a> <strong>重要的算法</strong></h3><p>实时阴影：PCF、PCSS</p><p>实时环境映射：shading from environment lighting（此时不考虑环境光中的阴影）</p><p>实时环境/全局光照：PRT（准确的得到来自环境光中的阴影，分为 diffuse 和 glossy）</p><p>实时全局光照（其实就是直接+间接光照）：</p><ul><li>图像空间的 GI：RSM</li><li>3D 空间的 GI：LPV、VXGI</li><li>屏幕空间的 GI：SSAO、HBAO（Horizon Based ambient occlusion）、SSDO、SSR</li></ul><p>光线追踪降噪技术：SVGF</p><blockquote><p>基于图像的全局光照（Image based illumination）。<strong>IBL</strong>是基于<strong>物理渲染的真实感</strong>的重要来源，是对<strong>环境光照</strong>的一种处理方案。对于大部分情况来说，环境光来自于<strong>天空盒</strong>，也就是<strong>cube-map 贴图</strong>。因此，IBL 的重点就在于如何从图像中获取光照信息。</p></blockquote><h1 id="实时渲染领域rtr4"><a class="markdownIt-Anchor" href="#实时渲染领域rtr4"></a> 实时渲染领域(RTR4)</h1><p>RTR4 中值得看的新增章节是如下四章：</p><ul><li>Chapter 9 Physically Based Shading 基于物理的着色</li><li>Chapter 20 Efficient Shading 高效率着色</li><li>Chapter 21 Virtual and Augmented Reality 虚拟现实和增强现实</li><li>Chapter 26 Real-Time Ray Tracing 实时光线追踪</li></ul><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><ul><li><p><a href="https://www.bilibili.com/video/BV1YK4y1T7yY?p=1">GAMES202-高质量实时渲染_哔哩哔哩_bilibili</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/363333150">Games202 高质量实时渲染课堂笔记</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/357259069">【论文复现】Reflective Shadow Maps - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/28288053">Spatiotemporal Variance-Guided Filter（实时光线追踪）- 知乎 (zhihu.com)</a></p></li><li><p><a href="https://www.zhihu.com/question/290566100/answer/471199400">知乎-毛星云-如何评价《Real–time Rendering》第四版?</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/406606440">实时渲染第四版-目录</a></p></li><li><p><a href="https://www.zhihu.com/column/c_1221792809822347264">实时渲染第四版学习笔记</a></p></li><li><p><a href="http://geekfaner.com/shineengine/translate.html">ShineEngine</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES202</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Games101中的C++知识</title>
    <link href="/2022/10/23/Games101%E4%B8%AD%E7%9A%84C-%E7%9F%A5%E8%AF%86/"/>
    <url>/2022/10/23/Games101%E4%B8%AD%E7%9A%84C-%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="stdoptionalc17"><a class="markdownIt-Anchor" href="#stdoptionalc17"></a> std::optional（C++17）</h1><h4 id="框架代码"><a class="markdownIt-Anchor" href="#框架代码"></a> 框架代码：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// games101/homework5/Renderer.cpp</span><br><span class="hljs-function">std::optional&lt;hit_payload&gt; <span class="hljs-title">trace</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">    <span class="hljs-keyword">const</span> Vector3f &amp;orig,</span></span><br><span class="hljs-params"><span class="hljs-function">    <span class="hljs-keyword">const</span> Vector3f &amp;dir,</span></span><br><span class="hljs-params"><span class="hljs-function">    <span class="hljs-keyword">const</span> std::vector&lt;std::unique_ptr&lt;Object&gt; &gt; &amp;objects)</span></span>&#123;...&#125;<br></code></pre></td></tr></table></figure><h4 id="用途"><a class="markdownIt-Anchor" href="#用途"></a> 用途：</h4><p><strong>使 C++ 的函数返回多个值</strong></p><h4 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;optional&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Out</span> &#123;</span><br>    string out1 &#123; <span class="hljs-string">&quot;&quot;</span> &#125;;<br>    string out2 &#123; <span class="hljs-string">&quot;&quot;</span> &#125;;<br>&#125;;<br><br><span class="hljs-function">optional&lt;Out&gt; <span class="hljs-title">func</span><span class="hljs-params">(<span class="hljs-keyword">const</span> string&amp; in)</span> </span>&#123;<br>    Out o;<br>    <span class="hljs-keyword">if</span> (in.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span>)<br>    <span class="hljs-comment">// std::nullopt 是 C++ 17 中提供的没有值的 optional 的表达形式，等同于 &#123; &#125; 。</span><br>        <span class="hljs-keyword">return</span> nullopt;<br>    o.out1 = <span class="hljs-string">&quot;hello&quot;</span>;<br>    o.out2 = <span class="hljs-string">&quot;world&quot;</span>;<br>    <span class="hljs-keyword">return</span> &#123; o &#125;;<br>&#125;<br><br><span class="hljs-comment">// 等价于如下函数</span><br><span class="hljs-comment">// 这种做法可以做到让返回值更富有语意，并且可以很方便的扩展，如果要增加一个新的返回值，只需要扩展现有的结构体就可以了。</span><br><span class="hljs-function">pair&lt;<span class="hljs-keyword">bool</span>, Out&gt; <span class="hljs-title">func</span><span class="hljs-params">(<span class="hljs-keyword">const</span> string&amp; in)</span> </span>&#123;<br>    Out o;<br>    <span class="hljs-keyword">if</span> (in.<span class="hljs-built_in">size</span>() == <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> &#123; <span class="hljs-literal">false</span>, o &#125;;<br>    o.out1 = <span class="hljs-string">&quot;hello&quot;</span>;<br>    o.out2 = <span class="hljs-string">&quot;world&quot;</span>;<br>    <span class="hljs-keyword">return</span> &#123; <span class="hljs-literal">true</span>, o &#125;;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">auto</span> ret = <span class="hljs-built_in">func</span>(<span class="hljs-string">&quot;hi&quot;</span>); ret.<span class="hljs-built_in">has_value</span>()) &#123;<br>        cout &lt;&lt; ret-&gt;out1 &lt;&lt; endl;<br>        cout &lt;&lt; ret-&gt;out2 &lt;&lt; endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="创建-optional"><a class="markdownIt-Anchor" href="#创建-optional"></a> 创建 optional</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 空 optiolal</span><br>optional&lt;<span class="hljs-keyword">int</span>&gt; oEmpty;<br>optional&lt;<span class="hljs-keyword">float</span>&gt; oFloat = nullopt;<br><br><span class="hljs-function">optional&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">oInt</span><span class="hljs-params">(<span class="hljs-number">10</span>)</span></span>;<br><span class="hljs-function">optional <span class="hljs-title">oIntDeduced</span><span class="hljs-params">(<span class="hljs-number">10</span>)</span></span>;  <span class="hljs-comment">// type deduction</span><br><br><span class="hljs-comment">// make_optional</span><br><span class="hljs-keyword">auto</span> oDouble = std::<span class="hljs-built_in">make_optional</span>(<span class="hljs-number">3.0</span>);<br><span class="hljs-keyword">auto</span> oComplex = make_optional&lt;complex&lt;<span class="hljs-keyword">double</span>&gt;&gt;(<span class="hljs-number">3.0</span>, <span class="hljs-number">4.0</span>);<br><br><span class="hljs-comment">// in_place</span><br>optional&lt;complex&lt;<span class="hljs-keyword">double</span>&gt;&gt; o7&#123;in_place, <span class="hljs-number">3.0</span>, <span class="hljs-number">4.0</span>&#125;;<br><br><span class="hljs-comment">// initializer list</span><br>optional&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; <span class="hljs-built_in">oVec</span>(in_place, &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;);<br><br><span class="hljs-comment">// 拷贝赋值</span><br><span class="hljs-keyword">auto</span> oIntCopy = oInt;<br></code></pre></td></tr></table></figure><h4 id="访问-optional-对象"><a class="markdownIt-Anchor" href="#访问-optional-对象"></a> 访问 optional 对象</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 跟迭代器的使用类似，访问没有 value 的 optional 的行为是未定义的</span><br>cout &lt;&lt; (*ret).out1 &lt;&lt; endl;<br>cout &lt;&lt; ret-&gt;out1 &lt;&lt; endl;<br><br><span class="hljs-comment">// 当没有 value 时调用该方法将 throws std::bad_optional_access 异常</span><br>cout &lt;&lt; ret.<span class="hljs-built_in">value</span>().out1 &lt;&lt; endl;<br><br><span class="hljs-comment">// 当没有 value 调用该方法时将使用传入的默认值</span><br>Out defaultVal;<br>cout &lt;&lt; ret.<span class="hljs-built_in">value_or</span>(defaultVal).out1 &lt;&lt; endl;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>04-游戏引擎的渲染实践</title>
    <link href="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/"/>
    <url>/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="游戏渲染面临的挑战"><a class="markdownIt-Anchor" href="#游戏渲染面临的挑战"></a> 游戏渲染面临的挑战</h1><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled.png" alt="Untitled"></p><p>一个容器中同一时刻有大量的游戏对象需要进行渲染，并且不同对象（流体、毛发、玻璃、金属等）渲染的形式、算法还有所差异，这些使得游戏的绘制系统变得非常复杂；</p><p>其次，游戏引擎的渲染还要与当代的硬件适配；</p><p>同时，游戏引擎需要保证渲染的稳定性，即使进入非常巨大复杂的场景，也要在至少 1/30ms 内完成绘制，随着玩家需求的提高，这一时间甚至可能被缩短到 1/60ms、1/120ms 之内；而且显示器的发展也逐渐将 4K 屏幕普及，甚至于 8K；</p><p>游戏引擎的渲染还要考虑到可用的计算资源，一般渲染可用资源只能占到 10%-20%左右，还需预留资源用于 GamePlay 等系统。</p><h1 id="课程大纲"><a class="markdownIt-Anchor" href="#课程大纲"></a> 课程大纲</h1><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%201.png" alt="Untitled"></p><h1 id="渲染的要素"><a class="markdownIt-Anchor" href="#渲染的要素"></a> 渲染的要素</h1><h2 id="渲染管线"><a class="markdownIt-Anchor" href="#渲染管线"></a> 渲染管线</h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%202.png" alt="Untitled"></p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%203.png" alt="Untitled"></p><p>首先输入三维空间的顶点坐标，经过 Model，View 和 Projection（投影变换，将每个图元的 x、y 坐标转换到屏幕坐标系中） 的变换，最终得到投影到二维平面的坐标信息(同时为了 Zbuffer 保留深度 z 值)。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%204.png" alt="Untitled"></p><p>在屏幕空间中，将所有的顶点按照原几何信息，变成三角面，每个面由 3 个顶点组成。</p><p>光栅化阶段：经过视图和投影变换后，得到的二维平面将会是中心点在原点、边长为 2 的正方形，视口变换就是将该正方形重新拉伸为实际的长方形，并将左下角移动到原点的过程，便于将像素值存储到二维矩阵中。接着<strong>需要把这些三角形打碎打成像素并且告诉每个像素的值是多少然后显示在屏幕上</strong>，这一个完整的过程我们称之为<strong>光栅化（Rasterization）</strong>。</p><p><a href="https://zhuanlan.zhihu.com/p/450540827">现代计算机图形学基础二：光栅化（Rasterization）</a></p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%205.png" alt="Untitled"></p><p>着色：确定每个像素点或者说片元(Fragement)的颜色。在每一个像素点上找到对应的材质、纹理和光照结果等。</p><h1 id="理解-gpu"><a class="markdownIt-Anchor" href="#理解-gpu"></a> 理解 GPU</h1><p>对于图形程序中的复杂计算，我们交由另一独立硬件处理——GPU，也正是 GPU 不断的发展进步，才有了现在越来越精致的画面。</p><h2 id="simd-and-simt"><a class="markdownIt-Anchor" href="#simd-and-simt"></a> SIMD and SIMT</h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%206.png" alt="Untitled"></p><ul><li>SIMD 指单指令多数据流（Single Instruction Multiple Data），一般是用于处理矩阵变换等复杂运算</li><li>SIMT 指单指令多线程（Single Instruction Multiple Threads）,一条指令交由多个线程处理，这即是 GPU 算力远高于 CPU 的原因</li></ul><h2 id="gpu-架构"><a class="markdownIt-Anchor" href="#gpu-架构"></a> GPU 架构</h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%207.png" alt="Untitled"></p><ul><li>图形处理集群（Graphics Processing Cluster），用于计算、光栅化、着色、纹理处理的专用硬件块</li><li>流式多核处理器（Streaming Multiprocessor），作为 GPU 的一个组成部分，用于运行 CUDA</li><li>纹理单元（Texture Units）用于采样和过滤纹理的纹理处理单元</li><li>CUDA 核心 ，允许不同处理器同时处理数据的并行处理器</li></ul><h2 id="cpu-到-gpu-的数据流"><a class="markdownIt-Anchor" href="#cpu-到-gpu-的数据流"></a> <strong>CPU 到 GPU 的数据流</strong></h2><p>数据在不同的运算单元之间读取传输是十分消耗资源的，所以一般只让数据由 CPU 单向流动到 GPU，且尽可能不从显卡中读取数据。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%208.png" alt="Untitled"></p><h2 id="缓存"><a class="markdownIt-Anchor" href="#缓存"></a> 缓存</h2><p>我们在存放数据时一般<strong>集中存放</strong>，就是为了便于缓存的读取，即缓存命中数据（Cache hit）；若缓存不断的无法读取数据（Cache miss），不断的重新读取，将会大大降低处理的效率。</p><p>现代计算机的结构就是一条流水线，每一个环节的效率低下都可能限制整体的表现。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%209.png" alt="Untitled"></p><h1 id="renderable-可渲染对象"><a class="markdownIt-Anchor" href="#renderable-可渲染对象"></a> Renderable 可渲染对象</h1><p>首先区分一个概念：游戏对象 GO 是一个逻辑表达，和真实的可渲染的东西是不一样的。而在 GO 的组件中，有一个 MeshXXXComponent，保存有****Renderable，****这是渲染系统核心的数据对象</p><h2 id="构建-renderable"><a class="markdownIt-Anchor" href="#构建-renderable"></a> 构建 Renderable</h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2010.png" alt="Untitled"></p><p>包括 Mesh 几何形体、材质、纹理、法线等等</p><h2 id="网格图元-mesh-primitive"><a class="markdownIt-Anchor" href="#网格图元-mesh-primitive"></a> 网格图元 Mesh Primitive</h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2011.png" alt="Untitled"></p><p>起初的网格体数据储存方式并不高效，它储存每个点的位置，法线朝向等属性，进而储存每三个点组成的三角形的数据，而这一个个三角形的数据便构成了这个网格体的数据。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2012.png" alt="Untitled"></p><p>因为每个顶点是由多个三角形公用的，所以我们可以通过只储存每个顶点的数据和对应的索引值，绘制三角形时根据索引值顺序绘制来提高效率。另外，可以将三角形顶点按照顺序存储，那么顶点索引也是按照顺序，这将会有利于提高缓存命中率。</p><h2 id="为什么每个顶点都需要定义法线方向"><a class="markdownIt-Anchor" href="#为什么每个顶点都需要定义法线方向"></a> <strong>为什么每个顶点都需要定义法线方向？</strong></h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2013.png" alt="Untitled"></p><p>当绘制表面有折线时，可能会出现顶点位置一样，但法线方向完全不同的情况，所以<strong>每个顶点都需要单独定义法线方向</strong>。</p><h2 id="材质-materials"><a class="markdownIt-Anchor" href="#材质-materials"></a> 材质 <strong>Materials</strong></h2><p>材质决定了物体的外观和被光线照射时的表现。分为视觉材质和物理材质（摩擦系数、弹性反弹力），一般在渲染系统中定义的都是视觉材质，后者会单独定义。下图是著名的材质模型：</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2014.png" alt="Untitled"></p><p>**纹理（Texture）<strong>是材质的一种非常重要的表达方式，而同时</strong>着色器（shader）**会编译成数据，会和 mesh 存储在一起，在绘制时传入程序控制像素点的颜色，也是可渲染对象的重要组成部分。</p><h1 id="在引擎中渲染物体"><a class="markdownIt-Anchor" href="#在引擎中渲染物体"></a> 在引擎中渲染物体</h1><h2 id="坐标系统与变换"><a class="markdownIt-Anchor" href="#坐标系统与变换"></a> 坐标系统与变换</h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2015.png" alt="Untitled"></p><p>物体的自身坐标系 <code>—模型变换—&gt;</code> 世界坐标系 <code>— 相机变换—&gt;</code> 相机坐标系 <code>—投影变换—&gt;</code> 裁剪坐标系 <code>—视口变换—&gt;</code> 屏幕坐标系</p><h2 id="子网格submesh"><a class="markdownIt-Anchor" href="#子网格submesh"></a> 子网格<strong>SubMesh</strong></h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2016.png" alt="Untitled"></p><p>我们根据 Mesh 的材质不同将其分为许多子网格（SubMesh），每个子网格都对应与自己的纹理和着色器。每个子网格存储一个 Offset 值，在计算时只需要通过对应的 Offset 值便可知道该部分三角形使用的材质。</p><h2 id="资源池resource-pool"><a class="markdownIt-Anchor" href="#资源池resource-pool"></a> <strong>资源池（Resource Pool）</strong></h2><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2017.png" alt="Untitled"></p><p>在储存时，为了节省资源以及方便相同资源的复用，我们会将每个游戏对象切分为 Mesh、Material、Shader 等，并将相同类型的资源储存到一个统一的资源池中去管理，比如 Material 类型的资源统一储存在 Material 类型对应的资源池中。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2018.png" alt="Untitled"></p><p>相应的，每一个游戏对象也就是这些资源的实例化组合（<strong>Instance</strong>）。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2019.png" alt="Untitled"></p><p>为了提高速度，我们可以将资源池中可复用的资源按照材质分类后再传入 GPU 中（即将同样材质的 SubMesh 归结在一起）。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2020.png" alt="Untitled"></p><p>GPU Batch Rendering 的思想：注意到游戏中许多子物体也是相同的，我们也可以利用上面的策略，在一次绘制指令中，创建许多对象，但只传入一次 Vertex Buffer 和 Index Buffer，通过避免重复传入来提高速度。</p><h2 id="可见性剔除-visibility-culling"><a class="markdownIt-Anchor" href="#可见性剔除-visibility-culling"></a> 可见性剔除 Visibility Culling</h2><p><a href="https://codeantenna.com/a/5oSMDVB2H5">渲染前 CPU 和渲染中 GPU 的裁剪和剔除</a></p><p>游戏世界中一般只绘制视锥中的物体，这是就需要检测物体的可见性。通过给每个场景物体预先计算好包围盒，我们可以用一些非常轻量的算法完成物体级别的遮挡剔除，其中包括视锥剔除，这可以大大减少 GPU 的工作量。以下是几种简单的包围盒模型：</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2021.png" alt="Untitled"></p><h3 id="hierarchical-view-frustum-culling"><a class="markdownIt-Anchor" href="#hierarchical-view-frustum-culling"></a> Hierarchical View Frustum Culling</h3><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2022.png" alt="Untitled"></p><p>四叉树和 BVH 的方法进行层次剔除，下图是游戏引擎中 BVH 的构建：</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2023.png" alt="Untitled"></p><h3 id="potential-visibility-set"><a class="markdownIt-Anchor" href="#potential-visibility-set"></a> <strong>Potential Visibility Set</strong></h3><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2024.png" alt="Untitled"></p><p>当玩家每经过一个 Portal 时，就只绘制当前所在的 Zone 内可以看见的其他 Zone，这一思想可以用于动态载入场景</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2025.png" alt="Untitled"></p><h3 id="gpu-culling"><a class="markdownIt-Anchor" href="#gpu-culling"></a> GPU Culling</h3><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2026.png" alt="Untitled"></p><p>随着硬件升级，GPU 也可以用来做剔除工作——通过 GPU 对不同面之间的交集的快速计算，以此来裁剪剔除无需渲染的面。另外有一种 Early-Z 的思想做深度测试，也利用了 GPU。</p><h1 id="纹理压缩texture-compression"><a class="markdownIt-Anchor" href="#纹理压缩texture-compression"></a> <strong>纹理压缩（Texture Compression）</strong></h1><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2027.png" alt="Untitled"></p><p>在游戏引擎的渲染系统中，对传统的图片压缩格式（如 JPG、PNG）采样无法实现随机访问其中的一个点，并且采样的计算十分复杂。</p><p>因此游戏引擎中一般采用块压缩（Block Compression），最经典的是将图片切分为 4*4 的四个小块儿去压缩。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2028.png" alt="Untitled"></p><p>这种压缩使得我们只需要知道图片中像素的极大值和极小值以及其他像素相对两者的插值的坐标，便可以得到与原来图片相近的像素颜色。</p><h1 id="模型生成工具"><a class="markdownIt-Anchor" href="#模型生成工具"></a> 模型生成工具</h1><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2029.png" alt="Untitled"></p><ul><li>建模（Polymodeling）：3DMax、maya、blender</li><li>雕刻（Sculpting）：z-brush</li><li>三维扫描重建（Scanning）</li><li>程序生成（Procedural modeling）：Houdini、Unreal</li></ul><h1 id="cluster-based-mesh-pipeline"><a class="markdownIt-Anchor" href="#cluster-based-mesh-pipeline"></a> Cluster-Based Mesh Pipeline</h1><p>随着开放世界、3A 大作的流行，模型的细节、精度也越来越高，也就需要新的模型管线 Cluster-Based Mesh Pipeline。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2030.png" alt="Untitled"></p><p>基础思想：现代 GPU 可以高效地基于数据创建几何细节，那么该算法就是将一个高精度模型按规律分为许多簇（Cluster），一簇可以是 32、64 个面片，这种细分使得 GPU 处理的都是相同大小的小块，可以对随机的簇进行绘制指令，并根据深度进行排序。每个簇都有自己的包围盒，GPU 可以实时计算出该物体某个部分将会被裁剪掉。</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2031.png" alt="Untitled"></p><p>Unreal 的 Nanite 就是上述思想细分到像素级别的体现，也是上述思想的工业化体现</p><p><img src="/2022/09/10/04-%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E7%9A%84%E6%B8%B2%E6%9F%93%E5%AE%9E%E8%B7%B5/Untitled%2032.png" alt="Untitled"></p><blockquote><p>如何做到最好的优化：通过算法，让计算机尽可能最少地做事情</p></blockquote><h1 id="其它问题"><a class="markdownIt-Anchor" href="#其它问题"></a> 其它问题</h1><h2 id="引擎中的-instance-案例"><a class="markdownIt-Anchor" href="#引擎中的-instance-案例"></a> 引擎中的 Instance 案例</h2><p>Game Object，游戏音效、粒子系统等等</p><h2 id="mesh-shader-clustered-mesh-未来会如何发展"><a class="markdownIt-Anchor" href="#mesh-shader-clustered-mesh-未来会如何发展"></a> Mesh shader、clustered mesh 未来会如何发展？</h2><p>硬件功能一定越来越复杂，将复杂的游戏世界拆解为一个个固定小单元去并行计算，可能是以后发展的方向</p><h2 id="引擎有必要自己写渲染管线吗"><a class="markdownIt-Anchor" href="#引擎有必要自己写渲染管线吗"></a> 引擎有必要自己写渲染管线吗？</h2><p>随着业界积累，最好的办法是学习当前最主流的管线构建方法在引擎中实现，特别特殊的渲染管线实现和维护会比较艰难。</p><h2 id="图形代码-debug-方法"><a class="markdownIt-Anchor" href="#图形代码-debug-方法"></a> 图形代码 debug 方法？</h2><p>将一个算法拆解为多步来实现，有利于代码回退</p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><ul><li>游戏引擎的设计与硬件架构的设计紧密关联</li><li>游戏引擎的一个核心问题是 Mesh、Materials 等数据之间的关系</li><li>为了优化性能，要设计 Culling 算法使得尽可能少的东西需要绘制</li><li>随着 GPU 不断的发展强大，可以将任务更多的交由 GPU 处理</li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES104</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>论文综述-建筑模型简化度量</title>
    <link href="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/"/>
    <url>/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="减面度量方法细化"><a class="markdownIt-Anchor" href="#减面度量方法细化"></a> 减面度量方法细化</h1><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled.png" alt="Untitled"></p><h1 id="综述"><a class="markdownIt-Anchor" href="#综述"></a> 综述</h1><hr><blockquote><p><strong>乔建成. 基于特征保持的网格简化算法研究[D].北京理工大学,2016.</strong></p></blockquote><p>网格简化的初衷是为了生成与原始网格模型尽量接近的简化模型。为了评价简化模型的简化质量，评价准则就尤为重要。对于一个原始模型 M 及其简化模型 M’，用 E(M,M’) 来表示模型间的误差。</p><p><strong>1. 基于外观相似度的误差度量</strong></p><p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">I_1,I_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别是模型<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M_1,M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的 RGB 光栅图像，可以用所有像素的均方差异来定义他们之间的不同：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow><mo fence="true">∥</mo><msub><mi>I</mi><mn>1</mn></msub><mo>−</mo><msub><mi>I</mi><mn>2</mn></msub><mo fence="true">∥</mo></mrow><mrow><mi>i</mi><mi>m</mi><mi>g</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><msup><mi>m</mi><mn>2</mn></msup></mfrac><msub><mo>∑</mo><mi>u</mi></msub><msub><mo>∑</mo><mi>v</mi></msub><msup><mrow><mo fence="true">∥</mo><msub><mi>I</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>I</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo fence="true">∥</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\left\|I_{1}-I_{2}\right\|_{i m g}=\frac{1}{m^{2}} \sum_{u} \sum_{v}\left\|I_{1}(u, v)-I_{2}(u, v)\right\|^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.185808em;vertical-align:-0.435808em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.161964em;"><span style="top:-2.4003000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.435808em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.299008em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0016819999999999613em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∥</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">∥</mo><msub><mi>I</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>I</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo fence="true">∥</mo></mrow><annotation encoding="application/x-tex">\left\|I_{1}(u, v)-I_{2}(u, v)\right\|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∥</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∥</span></span></span></span></span>是两个像素 RGB 向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>I</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I_{1}(u, v),I_{2}(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>之间的欧氏距离</p><p>优点：有利于在绘制系统中展示出比较好的结果。例如，对于一个复杂的飞机模型，视点一直在飞机的外边，模型内部的多边形并不会对模型的外观造成任何影响。</p><p>缺点：</p><p>① 重要视点的位置必须被考虑到。如果忽略了空间中一些重要的视点位置，视<br>觉上非常重要的特征会被移除。</p><p>② 由于每个采样视点位置可能需要昂贵的绘制代价，一般来说无法采样太多视点。</p><p><strong>2. 基于几何相似度的误差度量</strong></p><p><strong>为什么采用这种度量方法</strong>：一般来说几何特征比较相似的模型，其外观相似度也比较高。而且度量模型的几何相似度，不需要对模型在不同的视点处采样，只要根据模型的数据文件即可。</p><p>模型间的距离可以通过两个点集之间的距离来度量，不妨设模型 A 上的点集为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">{a_1,a_2,...,a_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>，模型 B 上的点集为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>b</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{b_1,b_2,...,b_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>。目前比较流行的几何相似度度量方法是 <strong>Hausdorff</strong> 距离：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">{</mo><mi>h</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">H(A, B)=\max \{h(A, B), h(B, A)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mopen">{</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow></msub><mrow><mo fence="true">(</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>b</mi><mo>∈</mo><mi>B</mi></mrow></msub><mi mathvariant="normal">∥</mi><mi>a</mi><mo>−</mo><mi>b</mi><mi mathvariant="normal">∥</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">h(A, B)=\max _{a \in A}\left(\min _{b \in B}\|a-b\|\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999985em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∥</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">b</span><span class="mord">∥</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></p><p>若 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>M</mi><mo separator="true">,</mo><msup><mi>M</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">H(M,M&#x27;)=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> ，则说明原始模型 M 的所有点到简化模型 M’的距离小于 d ，同时简化模型 M’上的每一点到 M 的距离也不超过 d ，也就是说简化模型 M’ 很好的逼近了原始模型 M 。</p><p>基于此可以定义两个模型之间的平均误差：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mtext>avg </mtext></msub><mrow><mo fence="true">(</mo><msub><mi>M</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub></mrow></mfrac><mrow><mo fence="true">(</mo><msub><mo>∑</mo><mrow><mi>v</mi><mo>∈</mo><msub><mi>X</mi><mn>1</mn></msub></mrow></msub><msubsup><mi>d</mi><mi>v</mi><mn>2</mn></msubsup><mrow><mo fence="true">(</mo><msub><mi>M</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mo>∑</mo><mrow><mi>v</mi><mo>∈</mo><msub><mi>X</mi><mn>2</mn></msub></mrow></msub><msubsup><mi>d</mi><mi>v</mi><mn>2</mn></msubsup><mrow><mo fence="true">(</mo><msub><mi>M</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">E_{\text {avg }}\left(M_{1}, M_{2}\right)=\frac{1}{k_{1}+k_{2}}\left(\sum_{v \in X_{1}} d_{v}^{2}\left(M_{2}\right)+\sum_{v \in X_{2}} d_{v}^{2}\left(M_{1}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">avg </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2951em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39981em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.07847em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39981em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></p><p><strong>Hausdorff</strong> 距离和平均误差计算复杂，比较适用于评估简化后模型的效果，并不适合在简化模型中使用在模型简化中需要更简单的误差测度方法，如<strong>二次误差度量</strong>法则（下一篇论文提到）</p><p>基于二次误差度量准则，以下文献进行了改进：</p><blockquote><p>Garland M, Heckbert P S. Simplifying surfaces with color and texture using quadric error metrics[C]//Proceedings of the conference on Visualization’98. IEEE Computer Society Press, 1998:263-269.<br>Fahn C S, Chen H K, Shiau Y H. Polygonal mesh simplification with face color and boundary edge preservation using quadric error metric[C]//Multimedia Software Engineering, 2002.Proceedings. Fourth International Symposium on. IEEE, 2002: 174-181.<br>Hua S M, Hu S M, Tai C L, et al. An effective feature-preserving mesh simplification scheme based on face constriction[C]//Computer Graphics and Applications, 2001.Proceedings. Ninth Pacific Conference on. IEEE, 2001: 12-21.<br>Cohen J, Olano M, Manocha D. Appearance-preserving simplification[C]//Proceedings of the 25th annual conference on Computer graphics and interactive techniques. ACM, 1998: 115-122.</p></blockquote><hr><blockquote><p><strong>钱勋波,罗立宏.一种保持特征的网格简化算法[J].机电工程,2017,34(10):1224-1228.</strong></p></blockquote><p>二次误差测度（quadric error metrics，QEM）以点到平面的距离为误差标准，对原始模型中的每个三角形 Ti，求该三角形的邻域 Ci，对三角形 Ti 执行折叠操作后，得折叠点 vi0 到 Ci 中每个三角形所在平面距离的平方，最大值越小，简化模型与原始模型越相似。</p><p>三角形 Ti 的折叠误差计算公式：</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%201.png" alt="Untitled"></p><p>其中：</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%202.png" alt="Untitled"></p><hr><blockquote><p><strong>张欣. 基于二次误差测度的三角网格简化算法研究[D].山东师范大学,2012.</strong></p></blockquote><p>常用简化误差度量准则：</p><ol><li><p>二次误差测度</p></li><li><p>点到平均平面的距离(相对简单)<br>方法：计算顶点与平均平面的距离，该距离反映了该点周围区域内网格顶点的多少，距离的大小与周围顶点数目的多少成反比。即该顶点与周围邻接点的距离越小，表明该顶点周围的点比较密集；反之，距离越大，表明周围邻接点越稀少<br><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%203.png" alt="Untitled"></p><blockquote><p>图：Schroeder W J , Zarge J A , Lorensen W E . Decimation of triangle meshes[J]. ACM SIGGRAPH Computer Graphics, 1997, 26(2):65-70.</p></blockquote></li><li><p>曲率度量<br><strong>思想</strong>：可以用曲率来描述三角网格物体的表面，曲率直观上代表着曲面的弯曲程度。<br><strong>解释</strong>：曲率越高表示曲面越不平坦，曲率越小表示该平面特征不明显，因而，通过平面的曲率可以轻松区分模型的特征区域，如人脸模型中的鼻梁、眼睛，牛模型中的牛角、牛蹄等部位。简化过程中，本着在进行简化时，可以在高曲率处保留尽量多的点，而在低曲率处早保持模型特征的前提下，删除尽量多的点。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%204.png" alt="Untitled"></p><p>图：表面曲率。红色表示曲率较高的区域，蓝色表示相对平坦的区域</p><blockquote><p>Turk G . Re-tiling polygonal surfaces[J]. Acm Siggraph Computer Graphics, 1992.</p></blockquote><p><strong>计算</strong>：对于由函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> , 确定的曲面，曲率可通过以下式定义计算公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow><mo fence="true">(</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>H</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><mn>2</mn><msup><mrow><mo fence="true">(</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>H</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo>+</mo><msup><mrow><mo fence="true">(</mo><mfrac><mrow><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mi>H</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mn>2</mn></msup></mrow></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\left(\frac{\partial^{2} H}{\partial x^{2}}\right)^{2}+2\left(\frac{\partial^{2} H}{\partial x \partial y}\right)^{2}+\left(\frac{\partial^{2} H}{\partial y^{2}}\right)^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.645146em;vertical-align:-0.95003em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.695116em;"><span style="top:-3.944008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.645146em;vertical-align:-0.95003em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">x</span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.695116em;"><span style="top:-3.944008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.645146em;vertical-align:-0.95003em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.695116em;"><span style="top:-3.944008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>顶点的尖特征度(sharp degree)度量<br><strong>提出</strong>：QEM 算法取得了很好的简化效果，但是为了能够在简化后的网格中依旧保持重要的细节特征，因此，提出尖特征边和顶点的尖特征度(sharp degree)的概念。<br><strong>具体描述</strong>：尖特征边——给定阈值 θ,对于某一边,如果与该边相连的两个面的二面角(定义二面角为两个面的外法线夹角)大于 θ,记该边为尖特征边.并规定在有边界的模型中,边界边为尖特征边；顶点的尖特征度——与顶点相邻的所有尖特征边的个数称为顶点的尖特征度.尖特征度是一个整数,最小值为 0,最大值为该顶点的度。<br><strong>思想</strong>：采用二次误差测度，用尖特征边、顶点尖特征度作为二次误差测度的加权因子。在选择边折叠算法进行减面时，将尖特征度加入到二次误差测度内,在原有的折叠误差公式的基础上加入一个惩罚项<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{sharp}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，这样,模型中<strong>尖特征度不为 0 的顶点</strong>可以使得<strong>误差测度值变大</strong>，并且<strong>尖特征度越大，误差测度值变得也越大</strong>。由于边折叠是按误差测度值由小到大的顺序来进行的,因此尖特征度大的点进行边折叠的次序就越靠后.此外,加入该惩罚项后可以保持计算新顶点依旧是一个线性问题,这样便可以将所作的改进和 QEM 算法统一起来.</p><blockquote><p>刘晓利, 刘则毅, 高鹏东,等. 基于尖特征度的边折叠简化算法[J]. 软件学报, 2005, 6(5):669-675.</p></blockquote></li><li><p>局部区域面积度量<br><strong>提出</strong>：三角网格模型特征区域一般来说，有大量密集的三角形分布，这些三角形形状较小，而平坦区域往往分布数目少且形状较大的三角形。因为<strong>三角形面积可直接反映三角形的大小，简化过程中需要优先简化平坦区域的面积较大的三角形</strong>，因此引入局部区域面积度量方法 (local region area Measure，LRAM)来改变模型特征和平坦区域上的顶点的折叠次序。<br><strong>思想</strong>：局部区域面积(Local Region Area, LRA) 就是执行折叠操作时<strong>发生变化的局部区域的<br>面积</strong>，它考察的是在网格简化中折叠三角形 T0 对邻接三角形的整体影响，将 LRA 作为特征保持控制因子，对 QEM 进行改进和统一。<br><strong>计算</strong>：一个三角形 T0 的局部区域由 T0 及它的邻接三角形 T1-T8 构成，该区域面积之和就是三角形 T0 的局部区域面积。<br><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%206.png" alt="Untitled"></p><blockquote><p>刘艳艳, 王阳萍, 刘萍. 基于三角形折叠的保持外形特征的网格简化算法[J]. 兰州交通大学学报, 2011, 30(6):5.</p></blockquote></li><li><p>平方体积度量<br>简化过后模型体积的变化，也能较为直观地反映简化模型与原始模型的差别。因而，相关研究人员提出了一种基于<strong>体积平方度量</strong>的三角形折叠网格简化算法，<strong>简化模型与原始模型体积变化的平方确定为折叠误差</strong>，同时将<strong>三角形几何形状因子、三角形的法向因子</strong>作为<strong>加权因子</strong>进一步约束三角形简化顺序，算法没有增加复杂度计算复杂度，简化结果好。</p></li></ol><hr><blockquote><p><strong>Li M , Nan L . Feature-preserving 3D mesh simplification for urban buildings[J]. ISPRS Journal of Photogrammetry and Remote Sensing, 2021, 2021(173):135-150.</strong></p></blockquote><p><a href="%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Feature-preserving_3D_mesh_simplification_for_urban_buildings.pdf">Feature-preserving 3D mesh simplification for urban buildings.pdf</a></p><p>该篇研究的目标是建立一个全自动管道，在保持 BIM 建筑结构的同时缩小城巿建筑网格模型。该方法的目的不是一次处理整个城市场景，而是将场景中的单个建筑物逐一进行处理。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%207.png" alt="Untitled"></p><p>该研究所提出的全自动管道由三个主要模块组成：网格过滤、结构提取和网格抽取。简化可以滤除小尺度细节，结果可以形成多分辨率层次结构，以进行高效的几何处理以及细节级别(LOD)生成。<br>该研究的主要贡献有两个:</p><p>一是提出了一种网格滤波方法，可以逐步增强分段平滑度和锐利的轮廓特征。从而可以利用简单的区域增长算法从网格中提取平面形状，网格的结构由拓扑图表示，拓扑图由一组平面区域和经过网格过滤后检测到的轮廓内边缘组装而成。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%208.png" alt="Untitled"></p><p>特征提取过程概述。(a)初始网格;(b)基于区域增长的初步分类;(e)相似区域合并后的分割结果(d)两个细化的平面区域结构;(e)以红色描绘的轮廓内边缘。</p><p>二是提出了一种基于层次策略的细化网格抽取方法。与传统的网格抽取方法相比，使用了不同的策略为平面和非平面区域中的边缘塌陷算子设计误差度量。在上一步中检测到的平面用作约束，以避免在边缘折叠迭代期间错误累积。因此，简化模型尽可能地保留了原来的平面结构。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%209.png" alt="Untitled"></p><p>下面我们对比一下两种误差度量方法:<br>左图：在 GH 方法的原始边缘塌陷误差度量中(加兰和赫克伯特，1997)，每个顶点都与一个误差二次曲线 Q_ p 相关联，它表示当前网格和初始网格之间的误差。该方法最小化从顶点 v 到其相邻面平面 P(包括顶点 a.bcd)的投影距离之和。请注意，二次曲线 Q p 是基于顶点 v 的所有相邻面计算的，该方法不考虑区域结构。因此，边缘的二次曲线也存在同样的问题，这可能会导致局部收敛。</p><p>右图改进:为了使边缘塌陷能够保留特征，改进的方法分析相邻面和区域结构以设计边缘的分层误差二次曲线。如果 v 的所有相邻面都属于一个平面区域 P，我们根据 P.而不是 v 的相邻面计算 v 的误差二次曲线 Q，否则，我们继续使用传统的误差二次曲线</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%2010.png" alt="Untitled"></p><p>平面区域组对边缘塌陷误差的影响如图所示，其中虚线表示支撑平面。</p><p>使用 GH 的误差二次曲线的算子的局限性在于——仅使用可能受噪声影响的相邻面的局部几何信息。如果相邻的面在更大的范围内是接近平面的，那么结果就不能反映这种特性。</p><p>而改进的误差度量将平面区域组视为一个整体，新的顶点会自动迁移到平面上。边缘塌陷操作的误差度量的分层定义确保了所提出的方法对不同数据的适应性更强</p><p>方法优势对比：(a)初始网格模型，(b)我们的平滑模型，©我们的简化结果，(d)GH 方法产生的结果)(Garland and Heckbert, 1997)，(e)LT 方法产生的结果(Lindstrom and Turk, 1998)，(f) SLA 方法产生的结果(Salinas et al.，2015)。所有方法都将模型简化为 50 个顶点。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%2011.png" alt="Untitled"></p><p>减面效果度量标准：</p><p><strong>1.平均误差。</strong><br>为了评估减面结果的准确性，根据原始模型的顶点与简化模型的面之间的距离来计算误差。具体来说，计算从原始模型顶点到简化模型上最近的面的距离，距离的平均值用于评估几何精度。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%2012.png" alt="Untitled"></p><p>上述方法的时间消耗与几何精度(平均误差）对比发现，该研究的方法在运行时间上不如其他方法，但在结果准确性方面具有明显优势。</p><p><strong>2.噪声容限</strong><br>下图所示的模型是手动设计的，并被不同程度的噪声破坏。我们可以观察到过滤结果和区域提取的质量对于噪声水平是稳定的。此度量标准是通过对模型进行不同程度的噪声干扰，观察其最终的减面效果。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%2013.png" alt="Untitled"></p><p>达到的效果如下图所示，描述了航空摄影测量模型的简化过程。从(a)到(f)分别为：初始网格，网格过滤结果，区域增长结果，提取的平面区域结构，轮廓特征，以及最终的简化结果。</p><p><img src="/2022/08/23/%E8%AE%BA%E6%96%87%E7%BB%BC%E8%BF%B0-%E5%BB%BA%E7%AD%91%E6%A8%A1%E5%9E%8B%E7%AE%80%E5%8C%96%E5%BA%A6%E9%87%8F/Untitled%2014.png" alt="Untitled"></p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>论文综述</category>
      
      <category>Algorithm</category>
      
      <category>Paper reviews</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Algorithm</tag>
      
      <tag>论文综述</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>03-如何构建游戏世界</title>
    <link href="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/"/>
    <url>/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>对于标题的问题，我们要回答以下三个问题：</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled.png" alt="Untitled"></p><h1 id="一个游戏世界由什么构成"><a class="markdownIt-Anchor" href="#一个游戏世界由什么构成"></a> 一个游戏世界由什么构成？</h1><ul><li><p>一个游戏世界我们首先关注到的就是一系列可移动可操作的动态物（Dynamic Game Objects），如坦克、火炮等；</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%201.png" alt="Untitled"></p></li><li><p>还有一系列静态物（Static Game Object），如石头、棚屋等，这些静态物虽然不能交互，却是GamePlay中很关键的元素；</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%202.png" alt="Untitled"></p></li><li><p>最容易被忽略却又无处不在的是游戏的环境（Environments），它一般由天空（Sky）、植被（Vegetation）和地形（Terrain）组成；游戏中还存在着大量其他物体，如触发检测体（Trigger Area）、导航网格（Navigation Mesh）等。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%203.png" alt="Untitled"></p></li></ul><p>以上的各种对象，无论静态还是动态，我们统称为Game Object（GO）。</p><h1 id="如何描述一个game-object"><a class="markdownIt-Anchor" href="#如何描述一个game-object"></a> 如何描述一个Game Object？</h1><p>游戏中描述一个物体，可以分为属性（Property）和行为（Behaviour）两方面，这就和面向对象的语言相匹配了。我们可以为物体设计定义一个类，根据它的属性定义成员变量（如position、battery），根据它的行为定义成员函数（如move、scout）。</p><p>根据上述定义描述出一个类对象后，我们还可以通过定义继承（Inheritance）类，衍生出更多的类对象，比如说一个物体在继承无人机类后，再定义弹药量属性和攻击行为，我们便得到了察打一体无人机类。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%204.png" alt="Untitled"></p><p>但是继承类的使用又给我们带来了新的问题：类似水陆两栖坦克的类是继承自坦克类还是航船类？这就需要考虑将<strong>对象组件化</strong>，通过Component的组合来设计定义GO。以C语言为例，我们只需定义一个ComponentBase基类，由此派生出其他行为接口类（如Transform、Model、Motor、AI等），再根据需要实现改造这些接口类，像这样以组件的形式代替继承类的使用可以使我们对GO的设计更加灵活。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%205.png" alt="Untitled"></p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%206.png" alt="Untitled"></p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%207.png" alt="Untitled"></p><h1 id="如何使游戏世界动起来"><a class="markdownIt-Anchor" href="#如何使游戏世界动起来"></a> 如何使游戏世界动起来？</h1><p>这就需要用到之前提过的<code>Tick</code>函数，在每个<code>Tick</code>内都让世界向前走一小步，这样世界就动起来了。</p><ul><li><p><code>Object-based Tick</code>：在每个<code>Tick</code>内，将每个GO的每个<code>Component</code>的<code>Tick</code>函数都调用一次。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%208.png" alt="Untitled"></p></li><li><p><code>Component-based Tick</code>：各个<code>Component</code>依次调用<code>Tick</code>函数，比如先将<code>Motor</code>组件中的任务执行完，然后执行Controller组件中的任务，再执行<code>Animation</code>中的任务。这样流水线般的处理方式效率更高，在现代游戏引擎中也更常用。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%209.png" alt="Untitled"></p><p>下图将<code>Object-based Tick</code> 与<code>Component-based Tick</code> 对比，看出来<code>Component-based Tick</code> 是对于每种组件依次对所有GO执行任务。</p></li></ul><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2010.png" alt="Untitled"></p><h1 id="如何在游戏中发射炮弹"><a class="markdownIt-Anchor" href="#如何在游戏中发射炮弹"></a> 如何在游戏中发射炮弹？</h1><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2011.png" alt="Untitled"></p><p>以一个坦克发射炮弹为例，早期的设计方式是定义一个炮弹对象，在其爆炸时检查周围GO的类型，并对应的造成影响。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2012.png" alt="Untitled"></p><p>现在可以通过<strong>事件机制</strong>来解耦（Decouple）GO之间的通信，通过向不同GO发送事件，将事件交由对应的GO处理，使得不同GO之间的逻辑解耦合，降低代码的复杂性。比如当一个炸弹接触到地面时，它向周围的GO发送一个Explode事件，像Health组件监听到这个事件后，它会对应处理事件造成一个如Damage的影响。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2013.png" alt="Untitled"></p><h1 id="如何管理go"><a class="markdownIt-Anchor" href="#如何管理go"></a> 如何管理GO？</h1><p>每个GO都有一个唯一标识UID和一个位置，通过这两个元素我们可以对场景中的GO进行管理。当我们对于场景中的位置没有进行划分时，一个事件的发送可能需要遍历场景一定范围内的所有GO，这样处理的时间复杂度是极高的。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2014.png" alt="Untitled"></p><p>我们可以将场景分为数个网格，每个网格分别管理，当发送事件时，优先对邻近的网格发送。但是当每个网格中GO分布不均时，这样处理效率又会变得很低。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2015.png" alt="Untitled"></p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2016.png" alt="Untitled"></p><p>为了提高效率，我们可以对对象集群进行层级划分，类似于世界-国家-省-市-县这样的层级结构。当我们需要搜查一个GO邻近的GO时，只需要在它的父节点、兄弟节点、子节点之间搜查即可。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2017.png" alt="Untitled"></p><p><a href="https://zhuanlan.zhihu.com/p/403554758">19.1 空间数据结构</a></p><p>其它的空间数据划分方法有：</p><ul><li><p>BVH：核心思想就是用体积略大而几何特征简单的包围盒来近似描述复杂的几何对象，并且这种包围盒是嵌套的，我们只需要对包围盒进行进一步的相交测试，就可以越来越逼近实际对象（很明显这个功能需要用到树形的层次结构）。</p></li><li><p>BSP：<strong>二进制空间划分(BSP)<strong>递归地将空间一分为二，直到划分的空间满足一定条件。<strong>BSP树</strong><br>可以看作是其它一些</strong>空间划分树形数据结构</strong>的一般化。比如<strong>k-d树</strong>可以看作是进行划分的<strong>超平面</strong>与坐标轴对齐的**BSP树，这样做的好处在于它可以使得遍历和构建的效率得到极大提高，代价则是在空间划分时失去了一定的的灵活度。**在计算机图形学中使用它进行场景渲染时，通常使用场景中的多边形来确定划分使用的平面。</p><p><a href="https://zhuanlan.zhihu.com/p/53388395">Binary space partitioning(二进制空间划分)</a></p><p><a href="https://zhuanlan.zhihu.com/p/54747714">PBRT-E4.4-KD树(KD-Tree)</a></p></li><li><p>OcTree：八叉树（四叉树）作为空间对象的一种组织方式，能够根据单位的密集度，对空间进行划分，从而避免查找对象时，循环所有对象。八叉树的原理较为简单：当满足切分条件时，将三维空间等分为8份，分配空间对象。</p><p><a href="https://zhuanlan.zhihu.com/p/419376860">空间对象管理管理（二）：八叉树（OcTree）</a></p></li><li><p>场景图：一个面向用户的树结构，通过纹理、变换、细节层次、渲染状态(例如材质属性)、光源和其他任何合适的元素来增强。 它由一棵树来表示，这棵树以某种顺序被遍历以渲染场景。</p></li></ul><h1 id="其它需要处理的复杂情况"><a class="markdownIt-Anchor" href="#其它需要处理的复杂情况"></a> 其它需要处理的复杂情况</h1><h2 id="物体之间的绑定"><a class="markdownIt-Anchor" href="#物体之间的绑定"></a> 物体之间的绑定</h2><p>GO之间一般会出现绑定的现象，那么在执行Tick函数时，绑定的双方哪一方先执行Tick函数呢？这就要考虑Tick的时序。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2018.png" alt="Untitled"></p><p>一般会要求父节点先执行Tick函数，绑定其上的GO随后执行。但是因为不同Component的Tick函数是分散到不同CPU上并行处理的，所以不同Component的Tick时序问题则会更复杂。</p><p><img src="/2022/08/10/03-%E5%A6%82%E4%BD%95%E6%9E%84%E5%BB%BA%E6%B8%B8%E6%88%8F%E4%B8%96%E7%95%8C/Untitled%2019.png" alt="Untitled"></p><p>当两个Component互相发送事件时，因Tick函数是多线程执行的，我们没有办法确定哪一方先发送（正如上图左多个GO可以互相通信，但多线程时无法判定谁先发出了信件），这时我就们需要一个中介的事件发送器（正如上图右的邮局）来转发事件，并确定Tick的时序。</p><p>实际上在所有的Component的实现中会有一个<code>preTick()</code>和<code>postTick()</code>就是为了解决时序问题。</p><h2 id="tick时间过长的处理"><a class="markdownIt-Anchor" href="#tick时间过长的处理"></a> tick时间过长的处理</h2><p>假设一个游戏30ms进行一次tick()，但如果某个tick过于复杂，无法在这个时间内计算出所有的数据，处理方法可以优化整个引擎和设计，或者将计算分批进行（如在多个帧之后完成）</p><h2 id="tick时渲染线程和逻辑线程怎么同步"><a class="markdownIt-Anchor" href="#tick时渲染线程和逻辑线程怎么同步"></a> tick时，渲染线程和逻辑线程怎么同步？</h2><p>逻辑线程（tick各个组件的逻辑部分）一般会比渲染线程（做各种数据准备，如粒子系统）早一点，且分为两个线程。</p><h2 id="空间划分如何处理动态的游戏对象"><a class="markdownIt-Anchor" href="#空间划分如何处理动态的游戏对象"></a> 空间划分如何处理动态的游戏对象？</h2><p>对于动态的游戏对象，利用性能开销较小的BVH效率会更高。因此游戏引擎要支持多种空间划分的方法，根据不同的场景来选择空间划分策略。</p><h2 id="组件模式的缺点"><a class="markdownIt-Anchor" href="#组件模式的缺点"></a> 组件模式的缺点？</h2><p>访问代价高：需要找到某个组件的某个接口去调用</p><p>频繁的query性能消耗：GO之间有通讯机制，组件之间也有通讯机制。GO行为相关的组件可能会频繁调用GO的某些信息</p><h2 id="物理和动画互相影响的时候怎么处理"><a class="markdownIt-Anchor" href="#物理和动画互相影响的时候怎么处理"></a> 物理和动画互相影响的时候怎么处理？</h2><p>例如，当一个角色收到攻击倒地的动作，首先用动画去表现刚准备倒地的一部分动作，之后将动画的结束状态输入到物理系统去模拟之后的动作。</p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES104</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>02-引擎架构分层</title>
    <link href="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/"/>
    <url>/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/</url>
    
    <content type="html"><![CDATA[<h1 id="为什么需要分层架构"><a class="markdownIt-Anchor" href="#为什么需要分层架构"></a> <strong>为什么需要分层架构？</strong></h1><ul><li>为了将游戏引擎解耦并降低复杂度<ul><li>每一层都将独立，底层提供基础服务，顶层无需知道底层的具体实现，也有利于开发与版本迭代。</li></ul></li><li>为了响应不断变化的需求<ul><li>顶层部分迭代迅速，底层部分保持稳定</li></ul></li></ul><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled.png" alt="Untitled"></p><p>游戏引擎的架构类似于一个城市的结构：自底向上分别为各种各样的能源（类似于平台层，有多种能源都需要使用），交通（类似于核心层，运输核心，效率至上），人口（类似于资源层，需要被合理调配），信息系统（类似于功能层，有无数的信息系统可供使用，并且在不断迭代进化），建筑（类似于工具层，人们依托不同的建筑里做各种各样的事情）</p><h1 id="引擎分层架构简介"><a class="markdownIt-Anchor" href="#引擎分层架构简介"></a> 引擎分层架构简介</h1><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%201.png" alt="Untitled"></p><p>游戏引擎主要包括 5 个架构分层以及第三方库，下面将自顶向下介绍这些架构分层（工具层、功能层、资源层、核心层、平台层）。</p><h2 id="工具层-tool-layer"><a class="markdownIt-Anchor" href="#工具层-tool-layer"></a> 工具层 Tool Layer</h2><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%202.png" alt="Untitled"></p><p>通过在引擎编辑器中进行简单的 GUI 操作，即可实现游戏功能（设计关卡、动画等），这一层被称为<strong>工具层</strong>，也是接触引擎时最直观、最直接交互的层级，也是释放创造力的地方。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%203.png" alt="Untitled"></p><p>工具层通常以编辑器的形式存在，可用多种编程语言，开发效率优先，更加强调用户的便捷性。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%204.png" alt="Untitled"></p><p>DCC——数字内容创作。由于很多游戏资源是在 Maya、3ds Max、Houdini 等 DCC 中完成的，工具层通常包含导入、导出器用于导入、导出游戏资源。简单说来，就是别人用工具开发的数字资产通过引擎进入游戏中。</p><h2 id="功能层-function-layer"><a class="markdownIt-Anchor" href="#功能层-function-layer"></a> <strong>功能层 Function Layer</strong></h2><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%205.png" alt="Untitled"></p><h3 id="一些基本功能"><a class="markdownIt-Anchor" href="#一些基本功能"></a> 一些基本功能</h3><ul><li>为了使游戏呈现在屏幕上，需要渲染系统对虚拟世界进行渲染。</li><li>动画系统将艺术家设计的动作动画在引擎中进行组合、过渡，让游戏人物在游戏动起来。</li><li>逼真的虚拟世界也离不开物理，物理系统将使用刚体、软体、流体等去表达世界，使得人与人、人与物不会发生碰撞。</li><li>游戏中的玩法以及 NPC 人物，也都离不开脚本、事件、AI 系统等。</li><li>为了实现游戏中的人机交互，还需要与输入、输出设备连接。</li></ul><h3 id="关键点-1tick"><a class="markdownIt-Anchor" href="#关键点-1tick"></a> 关键点 1——tick</h3><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%206.png" alt="Untitled"></p><p>功能层将使得整个虚拟世界变得栩栩如生：每隔<code>tick</code>时间，分别执行逻辑与绘制——<code>tickLogic</code>与<code>tickRender</code>。<code>tickLogic</code>主要用于模拟世界，包括处理输入输出，计算物理并进行碰撞检测等；<code>tickRender</code>将<code>tickLogic</code>计算的结果（人物位置等）进行绘制。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%207.png" alt="Untitled"></p><p><strong>每一个 tick 中(过于简化状态下)</strong></p><ul><li><strong>获取角色的动画帧</strong></li><li>驱动角色<strong>的骨架和皮肤</strong></li><li><strong>渲染器处理每一帧的 render tick 的迭代中的所有渲染工作</strong></li></ul><h3 id="关键点-2复杂性"><a class="markdownIt-Anchor" href="#关键点-2复杂性"></a> 关键点 2——复杂性</h3><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%208.png" alt="Untitled"></p><p>功能层非常复杂、庞大，提供了游戏引擎中大部分功能模块，但哪些功能属于游戏，哪些功能属于引擎，界限不明确。</p><h3 id="关键点-3多线程"><a class="markdownIt-Anchor" href="#关键点-3多线程"></a> 关键点 3——多线程</h3><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%209.png" alt="Untitled"></p><p>考虑到功能层需要实现大量功能并对运行时间存在要求，功能层复杂性高，并通常需要借助多线程计算。</p><p>现代计算机 CPU 通常有多个核心，主流引擎将拆分适合并行计算的任务，分配到多个线程运算，但一些计算互相依赖，不适用于并行执行。在未来，引擎将所有任务变为原子计算，将任务分配到每个核上。</p><h2 id="资源层-resource-layer"><a class="markdownIt-Anchor" href="#资源层-resource-layer"></a> <strong>资源层 Resource Layer</strong></h2><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2010.png" alt="Untitled"></p><p>游戏引擎中通常包含大量数据和文件，这些文件通常以不同的形式存在，上万、上十万的数据文件由<strong>资源层</strong>进行加载与管理。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2011.png" alt="Untitled"></p><p>如 psd 格式将保存 Photoshop 中所有的图层，包含通道、参考线、注解和颜色模式等信息。为了避免在使用资源时频繁调度并减少不必要的内存消耗，在导入资源时进行转换，将不同资源（纹理、模型几何、动画等）都转换为资产文件，即 assest 文件*（.ast）*。</p><p>对于引擎中最常使用的贴图数据，可使用 png、jpg 格式进行存储，上述格式对应相应的压缩算法，但这些压缩算法不是 GPU 高效的算法，直接在 GPU 中使用会浪费性能，通常在引擎中被转换成 dds 格式。</p><p>dds 格式针对纹理设计，支持很多其他图像格式不支持的功能，如 Mipmap 等。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2012.png" alt="Untitled"></p><p>对于一个游戏人物，可能需要绑定网格、动画、贴图、材质等资源，定义 Composite asset 文件（如 XML）关联不同资源，并使用 Guid 唯一识别号对资产进行管理。</p><p>在游戏实际运行时，需要使用<strong>资产管理器*（Asset Manager）<em><strong>根据</strong>资产生命周期</em>（Asset Life Cycle）</strong>*<br>对资产进行管理，包括资产实时加载卸载、资源池分配、垃圾回收与延迟加载等。</p><h2 id="核心层-core-layer"><a class="markdownIt-Anchor" href="#核心层-core-layer"></a> <strong>核心层 Core Layer</strong></h2><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2013.png" alt="Untitled"></p><p>工具层、功能层、资源层会频繁调用底层代码，使用容器创建、内存分配、数学库、多线程等底层功能，而<strong>核心层</strong>能够提供上述功能。核心层是游戏引擎的基础，提供各种功能模块所需的工具，包括数学库、数据结构与容器、内存管理等。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2014.png" alt="Untitled"></p><p>对于数学库，当前已有很多成熟的第三方库，例如 Eigen。但游戏引擎需要为效率服务，可使用<strong>近似计算</strong>或者**SIMD（单指令多数据流，可并行处理多个数据的指令）**提高运算效率。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2015.png" alt="Untitled"></p><p>对于数据结构与容器，编程语言中的数据结构可能不满足要求，比如 C++一些标准实现会产生内存空洞，引擎中实现的数据结构更加方便内存管理，提高访问效率。</p><p>对于内存管理，引擎内存管理与操作系统类似，内存性能瓶颈主要在内存池（分配器）、缓存缺失、内存对齐等。</p><h2 id="平台层-platform-layer"><a class="markdownIt-Anchor" href="#平台层-platform-layer"></a> <strong>平台层 Platform Layer</strong></h2><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2016.png" alt="Untitled"></p><p>在游戏引擎中最容易被忽略的是平台层，引擎或者游戏需要发布在不同平台上，可能需要使用不同的图形 API。此外，用户使用的输入设备、硬件设备可能也完全不同，这都需要平台层进行处理。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2017.png" alt="Untitled"></p><p>平台层使得游戏能兼容不同平台、不同硬件设备，为上层提供平台无关的服务和信息。对于图形 API（如 OpenGL、DirectX、Vulkan 等），平台层需要使用 RHI（Render Hardware Interface）去除不同 API 的差异，上层使用时无需关心渲染使用的是何种 API。</p><h2 id="第三方库"><a class="markdownIt-Anchor" href="#第三方库"></a> <strong>第三方库</strong></h2><p>第三方库或者中间件通过 SDK 的形式或者通过文件格式转化。</p><p><img src="/2022/07/30/02-%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84%E5%88%86%E5%B1%82/Untitled%2018.png" alt="Untitled"></p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><ol><li>游戏引擎被设计为分层结构</li><li>在引擎的分层结构中，越往上，越灵活；越往下，越稳定</li><li>虚拟世界由一系列 tick 时间组成</li></ol>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES104</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>01-现代游戏引擎导论</title>
    <link href="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/"/>
    <url>/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="为什么要学游戏引擎"><a class="markdownIt-Anchor" href="#为什么要学游戏引擎"></a> 为什么要学游戏引擎？</h1><p>应用领域——虚拟数字人、影视动画、军事模拟、数字孪生</p><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled.png" alt="Untitled"></p><p><a href="https://zhuanlan.zhihu.com/p/468194499">元宇宙-虚拟数字人概述</a></p><h1 id="游戏引擎历史"><a class="markdownIt-Anchor" href="#游戏引擎历史"></a> 游戏引擎历史</h1><h2 id="早期游戏时代"><a class="markdownIt-Anchor" href="#早期游戏时代"></a> 早期游戏时代</h2><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled%201.png" alt="Untitled"></p><p>早期时候的游戏非常简单，常见的游戏机包括任天堂的“红白机”，彼时做游戏面临的最大问题是<strong>如何把复杂元素放入非常小的存储空间中</strong>，常见做法包括复用贴图，比如将云彩贴图变化颜色后复用成草丛贴图等。在这期间，也涌现了《魂斗罗》、《马里奥》、《坦克大战》等知名 IP。</p><h2 id="第一个游戏引擎"><a class="markdownIt-Anchor" href="#第一个游戏引擎"></a> <strong>第一个游戏引擎</strong></h2><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/20220722143642.png" alt></p><p>提到游戏引擎，就不得不提到游戏引擎之父**John D. Carmack，**他与另一个游戏软件天才 John Romero 共同开发出了全球首款第一人称射击游戏《德军总部 3D》<em>（Wolfenstein 3D，1992）</em>，他将游戏中能够复用的核心功能分离出来，产生了游戏引擎雏形。</p><p>John Carmack 开发的第二款游戏——《毁灭战士》<em>（Doom）</em>，将该游戏分离的功能制作成为游戏引擎，才有了另一款游戏《魅影术士》<em>（Shadow Caster）</em>。但真正的游戏引擎还没到来，直到《雷神之锤》*（Quake）*问世。</p><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled%204.png" alt="Untitled"></p><p>《雷神之锤》由 id Software 开发的第一人称射击游戏，是<strong>第一个系统研究联网对战下如何进行网络同步的游戏</strong>，最早的版本发布于 1996 年 5 月 31 日。雷神之锤引擎*（Quake engine，又称 Q1 引擎）*是《雷神之锤》一代游戏的核心，也被用来制作其他的第一人称射击游戏，比如《半条命》（<em>Half-life</em><br>）和《荣誉勋章》（<em>Medal of Honor）。Quake engine</em>是第一个实现即时 3D 的游戏引擎，该引擎提供了实时 3D 渲染，并通过 OpenGL 支持 3D 加速，给游戏画面带来了质的飞跃。</p><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled%205.png" alt="Untitled"></p><p>早期计算机硬件中没有显卡，但图形运算涉及大量矩阵、向量运算，非常适合并行计算，此时就来到了游戏发展的转折点——<strong>显卡</strong>诞生。游戏引擎的发展非常依赖于硬件的发展，例如从<strong>PlayStation 1</strong><br>到<strong>PlayStation 5</strong>其算力提升 20 万倍，算力的增长导致游戏质量急速提升。</p><h2 id="现代游戏引擎"><a class="markdownIt-Anchor" href="#现代游戏引擎"></a> 现代游戏引擎</h2><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled%206.png" alt="Untitled"></p><p>目前市面上的游戏引擎可分为三种：商业引擎*（Commercial Engine）<em>、自研引擎</em>（In-house Engine）<em>以及免费引擎</em>（Free Engine）<em>。商业引擎主要包括 UE、Unity 等引擎，自研引擎为各大游戏公司内部使用的引擎，包括大名鼎鼎的寒霜引擎</em>（Frostbite Engine）*，大多数免费引擎通常只适用于轻量级作品，与商业和自研引擎差距较大。</p><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled%207.png" alt="Untitled"></p><p>除此以外，针对特定功能模块还产生了细分功能的各类引擎。随着游戏行业的不断发展，开发者意识到物理计算等比较复杂，早期游戏都会自行实现物理碰撞等，但计算越来越复杂时，为了减少开发中不必要消耗，出现了专门用于处理物理计算的模块。在此基础上，出现了各种各样的中间件供游戏开发者使用。例如 SpeedTree，可为动画、建筑以及视频游戏和要求实时模拟的实时生成虚拟植物。</p><h3 id="什么是游戏引擎"><a class="markdownIt-Anchor" href="#什么是游戏引擎"></a> 什么是游戏引擎？</h3><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled%208.png" alt="Untitled"></p><ul><li>构建“黑客帝国”的技术基础</li><li>创造力工具</li><li>复杂性的艺术</li></ul><p>游戏引擎作为<strong>构建虚拟世界的底层框架</strong>，对于创作者（艺术家、设计师），游戏引擎需要提供工具链，使其成为<strong>人类创意或者想象力的生产力工具</strong>。对于编程者，可扩展 API 接口无需修改核心即可定义游戏可玩性*（gameplay）*。对于工作室，游戏引擎需要提供可协作性，使得开发者能够合作完成不同工作。游戏引擎体量非常复杂、庞大，很好地展现了<strong>复杂性系统的艺术-系统复杂之美</strong>，但也带来了版本迭代兼容性问题。</p><p><img src="/2022/07/20/01-%E7%8E%B0%E4%BB%A3%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E%E5%AF%BC%E8%AE%BA/Untitled%209.png" alt="Untitled"></p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES104</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>论文综述-Bim减面算法调研</title>
    <link href="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/"/>
    <url>/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/</url>
    
    <content type="html"><![CDATA[<h1 id="相关概念"><a class="markdownIt-Anchor" href="#相关概念"></a> 相关概念</h1><p>BIM：建筑信息模型（Building Information Modeling）</p><p>Lod：多细节层次（Levels of Detail），指根据物体模型的节点在显示环境中所处的位置和重要度，决定物体渲染的资源分配，降低非重要物体的面数和细节度，从而获得高效率的渲染运算。</p><p>Revit：该系列软件是为<a href="https://baike.baidu.com/item/%E5%BB%BA%E7%AD%91%E4%BF%A1%E6%81%AF%E6%A8%A1%E5%9E%8B/5034795">建筑信息模型</a>(BIM)构建的，可帮助建筑设计师设计、建造和维护质量更好、能效更高的建筑，常被用来做二次开发达到想要的功能。</p><h1 id="论文综述"><a class="markdownIt-Anchor" href="#论文综述"></a> 论文综述</h1><hr><blockquote><p><strong>C Q L A , B X S , C B Y , et al. Geometric structure simplification of 3D building models[J]. ISPRS Journal of Photogrammetry and Remote Sensing, 2013, 84(10):100-113.</strong></p></blockquote><p><a href="Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Geometric_structure_simplification_of_3D_building_models.pdf">Geometric structure simplification of 3D building models.pdf</a></p><p>本文提出了一种结构简化的方法。将建筑模型的<strong>几何结构分为三类：嵌入结构、组成结构和连接结构，可以通过凸/凹分析分别提取</strong>。本文还<strong>提出了一些具体的几何结构简化规则</strong>，并建议对建筑模型进行逐步的简化。实验证明了该方法的稳健性和高效性，并说明了建筑模型细节程度的应用。第 3 节中，我们介绍了<strong>表面补丁外置（Surface patch extraction）算法</strong>，作为将三⾓形模型转换成多边形模型的预处理步骤。在第 4 节中，我们讨论了建筑模型的⼏何结构的分类，并描述了⼀种稳健的⼏何结构提取⽅法的去尾。第 5 节阐述了<strong>结构简化规则并提出了建筑模型的渐进式简化⽅法</strong>。第 6 节介绍并讨论了实验结果。</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled.png" alt="Untitled"></p><p><strong>本研究所参考的相关工作总结如下：</strong></p><p>鉴于建筑物在城市环境中的重要作⽤，地理信息科学领域的科学家对建筑物模型的简化最感兴趣。然⽽，这与 CAD 和计算机图形领域的⼀般模型的简化不同。为了实现⾼效的虚拟环境可视化，研究⼈员更多地受到制图学思想的影响，**正则化和聚合的算法被广泛用于远距离建筑模型的简化过程，这被称为三维模型泛化。**参照⼆维地图的研究，⼀些应⽤⽅法将建筑模型的简化过程分为两个阶段：墙体（或脚印）的简化和屋顶的简化。在⼀项早期的研究中，Kada（2002）提出了⼀种基于最⼩⼆乘法调整理论的简化⽅法，并结合⼀套精⼼设计的表⾯分类和简化操作。该⽅法的主要缺点是只有建筑模型表⾯的⼀些简单挤压特征可以被简化。作为对以前⽅法的改进，他建议使⽤类似于半空间建模的过程对物体进⾏重塑（Kada, 2006），并提出了⼀个两阶段的算法（Kada, 2007），该算法结合了原始实例化和单元分解。同时，受图像分析中标度空间理论的启发，Mayer（2005）和 Forberg（2007）通过结合数学形态学和曲率空间，提出了⼀种新的建⽴模型的概括⽅法。</p><p>与上述⽅法相⽐，也有从<strong>几何简化的角度</strong>开发的三维建筑模型的算法。Rau 等⼈（2006）将建筑模型视为⼀组相连的多⾯体，并提出了⼀种通过改变特征分辨率⾃动⽣成伪连续 LOD 的算法。Du 等⼈（2008）和 Zhu 等⼈（2009）提出了在⼈类视觉系统（HVS）的指导下识别⼆维图像空间中复杂物体的⼏何特征并简化建筑模型。Jiang 等⼈（2011 年）开发了⼀种新的⽅法，通过细胞聚类和重建⽣成三维复杂建筑模型的多分辨率代表。Sun 等⼈（2011 年）提出了⼀种⾃动算法，通过凸聚类⽣成建筑模型的结构保护性抽象。</p><p>另⼀⽅⾯，为了保证简化后建筑模型的识别⼀致性，⼈们对<strong>建筑模型中各组成部分的语义或几何关系</strong>给予了⼤量关注。Fan 等⼈（2009）提出了 CityGML 中三维建筑模型的语义⽣成⽅法。Zhao 等⼈（2012）最近提出了⼀种基于数学形态学的泛化⽅法，该⽅法通过考虑建筑构件之间的语义关系，在多个 LoD 中保持⼏何、拓扑关系和语义的⼀致性⽅⾯有很⼤的能⼒。然⽽，他们的⽅法都对数据集提出了严格的要求。对于⼀般的建筑模型，Thiemann 和 Sester(2004)曾经提出了⼀种表⾯分割⽅法，以检测和删除表⾯的细节特征来简化模型，但他们的⽅法实际上被认为是⼀种理论上的简化⽅案，只适合结构⾮常简单的建筑模型。</p><hr><blockquote><p><strong>Li M , Nan L . Feature-preserving 3D mesh simplification for urban buildings[J]. ISPRS Journal of Photogrammetry and Remote Sensing, 2021, 2021(173):135-150.</strong></p></blockquote><p><a href="Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Feature-preserving_3D_mesh_simplification_for_urban_buildings.pdf">Feature-preserving 3D mesh simplification for urban buildings.pdf</a></p><p>该篇研究的目标是建立一个全自动管道，在保持 BIM 建筑结构的同时缩小城巿建筑网格模型。该方法的目的不是一次处理整个城市场景，而是将场景中的单个建筑物逐一进行处理。</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%201.png" alt="Untitled"></p><p>该研究所提出的全自动管道由三个主要模块组成：网格过滤、结构提取和网格抽取。简化可以滤除小尺度细节，结果可以形成多分辨率层次结构，以进行高效的几何处理以及细节级别(LOD)生成。<br>该研究的主要贡献有两个:</p><p>一是提出了一种网格滤波方法，可以逐步增强分段平滑度和锐利的轮廓特征。从而可以利用简单的区域增长算法从网格中提取平面形状，网格的结构由拓扑图表示，拓扑图由一组平面区域和经过网格过滤后检测到的轮廓内边缘组装而成。</p><p>二是提出了一种基于层次策略的细化网格抽取方法。与传统的网格抽取方法相比，使用了不同的策略为平面和非平面区域中的边缘塌陷算子设计误差度量。在上一步中检测到的平面用作约束，以避免在边缘折叠迭代期间错误累积。因此，简化模型尽可能地保留了原来的平面结构。</p><p>达到的效果如下图所示，描述了航空摄影测量模型的简化过程。从(a)到(f)分别为：初始网格，网格过滤结果，区域增长结果，提取的平面区域结构，轮廓特征，以及最终的简化结果。</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%202.png" alt="Untitled"></p><hr><p><strong>Anumba C . A Semantics-Based Approach for Simplifying IFC Building Models to Facilitate the Use of BIM Models in GIS[J]. Remote Sensing, 2021, 13.</strong></p><p><a href="Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/A_Semantics-Based_Approach_for_Simplifying_IFC_Building_Models_to_Facilitate_the_Use_of_BIM_Models_in_GIS.pdf">A Semantics-Based Approach for Simplifying IFC Building Models to Facilitate the Use of BIM Models in GIS.pdf</a></p><p>本文首先提出：使用实体建筑模型，而不是城市地理标记语言（CityGeography Markup 语言，CityGML），可以促进建筑信息模型（BIM）和地理信息系统（GIS）之间的数据整合。然而，使用实体模型会带来一个问题模型简化的问题。本研究的目的是通过<strong>开发一个从 BIM 生成简化实体建筑模型的框架</strong>来解决这个问题。</p><p>在这个框架中，首先定义了一套适合实体建筑模型的细节级别（LoD）——被称为 s-LoD，范围从 s-LoD1 到 s-LoD。在实现 s-LoD 的过程中发现了三个独特的问题，并通过使用基于语义的方法加以解决，包括：识别 s-LoD2 和 s-LoD3 的外部对象，区分各种板块，以及为 s-LoD2 和 s-LoD3 生成有效的外墙。该框架的可行性通过使用 BIM 模型得到了验证，结果表明，使用 BIM 的语义可以使建筑模型的转换和简化更容易，这反过来又使 BIM 信息在地理信息系统中更加实用。</p><p>三种建筑的 LoD 结果：</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%203.png" alt="Untitled"></p><p>其中一个几何简化的成果：</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%204.png" alt="Untitled"></p><hr><blockquote><p><strong>Yannick, Verdie, Florent, et al. LOD Generation for Urban Scenes[J]. ACM Transactions on Graphics (TOG), 2015, 34(3):1-14.</strong></p></blockquote><p><a href="Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/LOD_Generation_for_Urban_Scenes.pdf">LOD Generation for Urban Scenes.pdf</a></p><p>本文引入了一种新的方法，以细节层次模型（LODs）的形式重建三维城市场景。从原始数据集开始，例如由多视角立体系统产生的表面网格，该算法分三个主要步骤进行：分类、抽象和重建。</p><p>分类：从几何属性和一组与马尔科夫随机场相结合的语义规则，将场景分为四个有意义的类别。</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%205.png" alt="Untitled"></p><p>抽象：检测并规范建筑物上的平面结构，在树木、屋顶和外墙上拟合图标，并为 LOD 的生成执行过滤和简化，生成抽象出来的数据然后被提供给重建。</p><p>重建：通过最小切割公式（min-cut formulation）生成顶层完整的建筑。</p><p>最终的效果图如下图所示，第一行：在这个简单的住宅场景中，所有的外墙和屋顶都被很好地分类；第二行：展示的是较为密集的城市，每个建筑的房顶都是简单的，但所有的屋顶形成一个复杂的排布。第三行：在这个建筑上，Z 对称性（Z-symmetry）和正交关系（orthogonal relationships）共同来抽象出屋顶的中心部分。第四行：这个建筑包含复杂而薄的屋顶上部结构。尽管输入的 MVS 网格的精度有限，但本研究的算法还是恢复了主要的外墙和屋顶，以及大部分的上部结构。</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%206.png" alt="Untitled"></p><hr><h3 id="以下文献略作参考"><a class="markdownIt-Anchor" href="#以下文献略作参考"></a> 以下文献略作参考</h3><blockquote><p><strong>【2008】Du Z , Zhu Q , Zhao J . PERCEPTION-DRIVEN SIMPLIFICATION METHODOLOGY OF 3D COMPLEX BUILDING MODELS[J]. isprs.</strong></p></blockquote><p><a href="Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/PERCEPTION-DRIVEN_SIMPLIFICATION_METHODOLOGY_OF_3D_COMPLEX_BUILDING_MODELS.pdf">PERCEPTION-DRIVEN_SIMPLIFICATION_METHODOLOGY_OF_3D_COMPLEX_BUILDING_MODELS.pdf</a></p><p>针对传统简化方法的缺点–难以定位需要简化的部件和基元，本文提出了一种新的简化方法，基于渲染的图像分析，定位需要简化的模型部分。其主要思想是将复杂物体的几何特征在三维物体空间的识别和评估转换到二维图像空间，并使用基于**人类视觉系统（HVS）**模型的图像过滤来指导三维空间的简化操作。</p><blockquote><p><strong>Chen K , Chen W , Cheng J , et al. Developing Efficient Mechanisms for BIM-to-AR/VR Data Transfer[J]. Journal of Computing in Civil Engineering, 2020, 34(5):04020037.</strong></p></blockquote><p><a href="Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Developing_Efficient_Mechanisms_for_BIM-to-AR_VR_Data_Transfer(ASCE)CP.1943-5487.0000914.pdf">Developing Efficient Mechanisms for BIM-to-AR_VR Data Transfer(ASCE)CP.1943-5487.0000914.pdf</a></p><p>这篇文章整体上研究了从 BIM 模型到 AR/VR 数据传输的高效机制，以更好地利用 BIM 的信息。在这个过程中，该研究将<strong>几何模型中的建筑构件根据其特征</strong>进行分类，并<strong>采用不同的多边形缩减算法进行简化</strong>，所提出的机制能够有效地将 BIM 的语义信息转移到 AR/VR 中，大大减少了几何模型的三角形数量，同时最大限度地提高整体形状的一致性，并提高相应的 AR/VR 应用的帧率。</p><p>本研究指出，由 BIM 软件生成的一些建筑组件具有大量冗余多边形，可以在保持原始形状完全相同的情况下进行合并。—些弯曲的部件可以大大简化，同时最大限度地保持整体形状的一致性。例如,(b)中的墙的前表面可以用两个三角形表示，其中包含许多冗余多边形。©中圆柱体侧面的许多三角形可以合并,而圆柱体的形状几乎是恒定的。</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%207.png" alt="Untitled"></p><p>本文的重点在于，对于几何模型，将建筑构件分为四种类型，据此提出了不同的多边形缩减方法：</p><p>（1）简单构件指的是由最简化的平面组成的构件，因此不需要对其进行多边形缩减；</p><p>（2）相互连接的墙体有大量不必要的三角形，因此提出了一种算法，在保持墙体相同的情况下，尽量减少每个表面的三角形数量；</p><p>（3）圆柱形构件可以用提出的方法简化，去除所有多余的三角形；</p><p>（4）其他弯曲部件也可以用一种建议的方法来简化，这种方法可以在多边形减少率和变形之间取得平衡。</p><p>一个顶点折叠的示例：</p><p><img src="/2022/06/25/Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/Untitled%208.png" alt="Untitled"></p><blockquote><p><strong>冯雨晴,奚雪峰,崔志明.基于 WebGL 的 BIM 模型轻量化研究[J].苏州科技大学学报:自然科学版,2021,38(4):72-78.</strong></p></blockquote><p><a href="Bim%E5%87%8F%E9%9D%A2%E7%AE%97%E6%B3%95%E8%B0%83%E7%A0%94/%E5%9F%BA%E4%BA%8EWebGL%E7%9A%84BIM%E6%A8%A1%E5%9E%8B%E8%BD%BB%E9%87%8F%E5%8C%96%E7%A0%94%E7%A9%B6.pdf">基于 WebGL 的 BIM 模型轻量化研究.pdf</a></p><p>这篇论文从 BIM 模型轻量化入手，提出利用 Revit API 的二次开发技术，主要步骤如下：</p><p>将模型进行轻量化压缩：模型数据结构建立-将 Revit 模型文件导出为 GLTF 文件，该文件是适用于各大 WebGL 引擎的模型文件格式</p><p>场景渲染优化：利用八叉树优化算法对模型场景进行管理，优化了大体积模型的渲染问题</p><p>场景展示：WebGL 的技术来解析 GLTF 格式文件</p><p>该论文所研究的内容并不是 BIM 模型的减面算法，但有可能成为优化场景的一个思路。</p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>论文综述</category>
      
      <category>Algorithm</category>
      
      <category>Paper reviews</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Algorithm</tag>
      
      <tag>论文综述</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>寻找凸包问题</title>
    <link href="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <url>/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="凸包概念与性质"><a class="markdownIt-Anchor" href="#凸包概念与性质"></a> 凸包概念与性质</h1><p><strong>顶点定义法</strong></p><p>给定空间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">R^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>上的有限点集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>，由点集中有限个极点Extreme Point）构成的凸对象（Convex Object），就称为凸多胞体。</p><p>极点：可以看成是多胞体的顶点，以二维多边形为例，极点就相当于凸多边形的顶点。使用严格的数学定义来说，极点是指那些不能由凸多胞体内的其它点的凸组合（Convex Combination）表示出来的点。</p><p>凸多胞体任意两点的连线，还在凸多胞体内部。</p><p><strong>半空间交定义法</strong></p><p>一个凸多胞体可以表示成有限个半空间（Half Space）相交的密闭空间。</p><p>半空间：例如在二维空间下，一条直线可以把平面分成两半，这两半就可以称为半空间，在三维空间下，一个平面可以把空间分成两半，这两半也就是两个半空间，在更高的维度下也可以有类似的表示。把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">R^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>空间分成两半的平面称为超平面，例如二维的直线和三维的平面，都可以称为超平面。</p><p>以每条边所在直线（或每个面所在平面）将空间分为两个半空间，凸多胞体只存在其中一个半空间中。</p><h1 id="二维凸包算法"><a class="markdownIt-Anchor" href="#二维凸包算法"></a> 二维凸包算法</h1><p>问题引入：在二维空间中给定一个有限点集，如何构造最大的凸多边形？</p><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled.png" alt="Untitled"></p><p>常见的八种算法：</p><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%201.png" alt="Untitled"></p><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%202.png" alt="Untitled"></p><h2 id="jarvis步进法"><a class="markdownIt-Anchor" href="#jarvis步进法"></a> Jarvis步进法</h2><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%203.png" alt="Untitled"></p><p>直观上，可以把Jarvis步进法看做是在集合Q的外面紧紧地包了一条线，线的一端固定在最下角的点上。把线向右拉使其绷紧，再拉高些，直到碰到一个点，这个点一定在凸包上。使线继续处于绷紧状态，查到下一个顶点，直至回来原点。更形式化的表示，是通过判断极角的大小，来确定下一个顶点。</p><p>实现：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> Pi 3.1415926;</span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">printData</span><span class="hljs-params">(vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; data)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">size_t</span> i = <span class="hljs-number">0</span>; i &lt; data.<span class="hljs-built_in">size</span>(); i++)<br>    &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;[&quot;</span> &lt;&lt; data[i][<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; data[i][<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-string">&quot;]   &quot;</span>;<br>    &#125;<br>&#125;<br><br>vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; <span class="hljs-built_in">JarvisFunc</span>(vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; &amp;points)<br>&#123;<br>    <span class="hljs-keyword">if</span> (points.<span class="hljs-built_in">size</span>() &lt;= <span class="hljs-number">3</span>)<br>        <span class="hljs-keyword">return</span> points;<br><br>    <span class="hljs-keyword">int</span> minY = <span class="hljs-number">65535</span>;<br>    <span class="hljs-keyword">int</span> maxY = <span class="hljs-number">-65535</span>;<br>    vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt;::iterator idxMinY;<br>    vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt;::iterator idxMaxY;<br>    <span class="hljs-comment">// 找到Y值最小和Y值最大的点，一定是凸包上的点</span><br>    <span class="hljs-keyword">for</span> (vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt;::iterator it = points.<span class="hljs-built_in">begin</span>(); it != points.<span class="hljs-built_in">end</span>(); ++it)<br>    &#123;<br>        <span class="hljs-keyword">if</span> ((*it)[<span class="hljs-number">1</span>] &lt; minY)<br>        &#123;<br>            minY = (*it)[<span class="hljs-number">1</span>];<br>            idxMinY = it;<br>        &#125;<br>        <span class="hljs-keyword">if</span> ((*it)[<span class="hljs-number">1</span>] &gt; maxY)<br>        &#123;<br>            maxY = (*it)[<span class="hljs-number">1</span>];<br>            idxMaxY = it;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 将最终结果存入convexHull</span><br>    vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; convexHull;<br>    convexHull.<span class="hljs-built_in">push_back</span>(*idxMinY);<br><br>    <span class="hljs-comment">// 寻找剩余点中与当前点的连线在极坐标下角度</span><br>    vector&lt;<span class="hljs-keyword">int</span>&gt; curPoint = (*idxMinY);<br>    vector&lt;<span class="hljs-keyword">int</span>&gt; maxYPoint = (*idxMaxY); <span class="hljs-comment">// 最大的Y坐标点</span><br>    <span class="hljs-keyword">bool</span> isRightChainOver = <span class="hljs-literal">false</span>;      <span class="hljs-comment">//标记右链是否结束</span><br>    <span class="hljs-keyword">bool</span> isOver = <span class="hljs-literal">false</span>;                <span class="hljs-comment">// 标记是否退出循环</span><br>    <span class="hljs-comment">// 进入循环迭代</span><br>    <span class="hljs-keyword">while</span> (!isOver)<br>    &#123;<br>        <span class="hljs-built_in">printData</span>(points);<br>        cout &lt;&lt; <span class="hljs-string">&quot;curPoint:[&quot;</span> &lt;&lt; curPoint[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; curPoint[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-string">&quot;]&quot;</span> &lt;&lt; endl;<br><br>        <span class="hljs-comment">// 迭代初始化</span><br>        <span class="hljs-keyword">double</span> minAngle = <span class="hljs-number">2</span> * Pi;<br>        vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; minPointStack = &#123;&#125;; <span class="hljs-comment">//  极坐标角度减小则入栈</span><br>        vector&lt;<span class="hljs-keyword">int</span>&gt; eraseIdxStack = &#123;&#125;;         <span class="hljs-comment">//   极坐标角度减小，对应的points下标入栈</span><br>        <span class="hljs-keyword">int</span> startIdx = <span class="hljs-number">0</span>;<br>        vector&lt;<span class="hljs-keyword">int</span>&gt; visited = &#123;<span class="hljs-number">-1</span>, <span class="hljs-number">-1</span>&#125;; <span class="hljs-comment">// points中已经访问过的点的标记</span><br><br>        <span class="hljs-comment">// 遍历points的剩余点</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> it = <span class="hljs-number">0</span>; it &lt; points.<span class="hljs-built_in">size</span>(); ++it)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (points[it] == visited)<br>                <span class="hljs-keyword">continue</span>;<br><br>            <span class="hljs-comment">// 计算极坐标角度的cos值</span><br>            <span class="hljs-keyword">double</span> curCos = (points[it][<span class="hljs-number">0</span>] - curPoint[<span class="hljs-number">0</span>]) / <span class="hljs-built_in">sqrt</span>((<span class="hljs-built_in">pow</span>((points[it][<span class="hljs-number">0</span>] - curPoint[<span class="hljs-number">0</span>]), <span class="hljs-number">2</span>) + <span class="hljs-built_in">pow</span>((points[it][<span class="hljs-number">1</span>] - curPoint[<span class="hljs-number">1</span>]), <span class="hljs-number">2</span>)));<br><br>            <span class="hljs-comment">// 如果是右链，角度相对于x轴正方向；左链的角度相对于x轴负方向</span><br>            curCos = isRightChainOver ? -curCos : curCos;<br>            <span class="hljs-comment">// 得到当前的</span><br>            <span class="hljs-keyword">double</span> curAngle = <span class="hljs-built_in">acos</span>(curCos);<br><br>            <span class="hljs-comment">// 计算大于180度的角度</span><br>            <span class="hljs-keyword">if</span> (!isRightChainOver &amp;&amp; (points[it][<span class="hljs-number">1</span>] &lt; curPoint[<span class="hljs-number">1</span>]) || isRightChainOver &amp;&amp; (points[it][<span class="hljs-number">1</span>] &gt; curPoint[<span class="hljs-number">1</span>]))<br>                curAngle = <span class="hljs-number">2</span> * Pi - curAngle;<br><br>            vector&lt;<span class="hljs-keyword">int</span>&gt; test = &#123;<span class="hljs-number">13</span>, <span class="hljs-number">49</span>&#125;;<br>            <span class="hljs-keyword">if</span> (curPoint == test)<br>            &#123;<br>                cout &lt;&lt; <span class="hljs-string">&quot;---------------------------------&quot;</span> &lt;&lt; endl;<br>            &#125;<br><br>            <span class="hljs-comment">// 将最小值的改变过程全部入栈</span><br>            <span class="hljs-keyword">if</span> (curAngle &lt;= minAngle || (curAngle - minAngle) &lt; <span class="hljs-number">1e-6</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (curPoint == test)<br>                &#123;<br>                    cout &lt;&lt; <span class="hljs-string">&quot;进栈！&quot;</span> &lt;&lt; endl;<br>                &#125;<br>                minPointStack.<span class="hljs-built_in">push_back</span>(points[it]);<br>                eraseIdxStack.<span class="hljs-built_in">push_back</span>(it);<br>                <span class="hljs-keyword">int</span> curStackSize = minPointStack.<span class="hljs-built_in">size</span>();<br><br>                <span class="hljs-keyword">if</span> (curAngle &lt; minAngle)<br>                    startIdx = curStackSize - <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">else</span> <span class="hljs-comment">// 当角度相同，即有多个点在同一条直线上时，均入栈</span><br>                &#123;<br>                    <span class="hljs-comment">// 决定入栈顺序</span><br>                    <span class="hljs-keyword">if</span> (curStackSize &gt; <span class="hljs-number">1</span>)<br>                    &#123;<br>                        <span class="hljs-keyword">if</span> (isRightChainOver) <span class="hljs-comment">// 左链构造时，将Y值更小的点保持在栈顶；Y值相等时，X值更小的点保持在栈顶</span><br>                        &#123;<br>                            <span class="hljs-keyword">if</span> (minPointStack[curStackSize - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] &gt; minPointStack[curStackSize - <span class="hljs-number">2</span>][<span class="hljs-number">1</span>] || minPointStack[curStackSize - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] == minPointStack[curStackSize - <span class="hljs-number">2</span>][<span class="hljs-number">1</span>] &amp;&amp; minPointStack[curStackSize - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] &gt; minPointStack[curStackSize - <span class="hljs-number">2</span>][<span class="hljs-number">0</span>])<br>                            &#123;<br>                                <span class="hljs-built_in">swap</span>(minPointStack[curStackSize - <span class="hljs-number">1</span>], minPointStack[curStackSize - <span class="hljs-number">2</span>]);<br>                                <span class="hljs-built_in">swap</span>(eraseIdxStack[curStackSize - <span class="hljs-number">1</span>], eraseIdxStack[curStackSize - <span class="hljs-number">2</span>]);<br>                            &#125;<br>                        &#125;<br>                        <span class="hljs-keyword">else</span><br>                        &#123; <span class="hljs-comment">// 右链构造时，将Y值更大的点保持在栈顶；Y值相等时，X值更大的点保持在栈顶</span><br>                            <span class="hljs-keyword">if</span> (minPointStack[curStackSize - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] &lt; minPointStack[curStackSize - <span class="hljs-number">2</span>][<span class="hljs-number">1</span>] || minPointStack[curStackSize - <span class="hljs-number">1</span>][<span class="hljs-number">1</span>] == minPointStack[curStackSize - <span class="hljs-number">2</span>][<span class="hljs-number">1</span>] &amp;&amp; minPointStack[curStackSize - <span class="hljs-number">1</span>][<span class="hljs-number">0</span>] &lt; minPointStack[curStackSize - <span class="hljs-number">2</span>][<span class="hljs-number">0</span>])<br>                            &#123;<br>                                <span class="hljs-built_in">swap</span>(minPointStack[curStackSize - <span class="hljs-number">1</span>], minPointStack[curStackSize - <span class="hljs-number">2</span>]);<br>                                <span class="hljs-built_in">swap</span>(eraseIdxStack[curStackSize - <span class="hljs-number">1</span>], eraseIdxStack[curStackSize - <span class="hljs-number">2</span>]);<br>                            &#125;<br>                        &#125;<br>                    &#125;<br>                &#125;<br><br>                minAngle = curAngle;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">if</span> (curPoint == test)<br>                &#123;<br>                    cout &lt;&lt; <span class="hljs-string">&quot;未进栈！&quot;</span> &lt;&lt; endl;<br>                &#125;<br>            &#125;<br>            cout &lt;&lt; <span class="hljs-string">&quot;*it:[&quot;</span> &lt;&lt; points[it][<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; points[it][<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-string">&quot;]  &quot;</span>;<br>            cout &lt;&lt; <span class="hljs-string">&quot;curAngle:&quot;</span> &lt;&lt; curAngle &lt;&lt; <span class="hljs-string">&quot;   &quot;</span>;<br>            cout &lt;&lt; <span class="hljs-string">&quot;minAngle:&quot;</span> &lt;&lt; minAngle &lt;&lt; <span class="hljs-string">&quot;   &quot;</span>;<br>            cout &lt;&lt; <span class="hljs-string">&quot;curCos:&quot;</span> &lt;&lt; curCos &lt;&lt; endl;<br>        &#125;<br><br>        <span class="hljs-comment">// * 识别同一条直线上的目标点</span><br>        cout &lt;&lt; <span class="hljs-string">&quot;minPointStack:&quot;</span>;<br>        <span class="hljs-built_in">printData</span>(minPointStack);<br>        cout &lt;&lt; <span class="hljs-string">&quot;startIdx:&quot;</span> &lt;&lt; startIdx &lt;&lt; endl;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> idx = startIdx; idx &lt; minPointStack.<span class="hljs-built_in">size</span>(); ++idx)<br>        &#123;<br>            curPoint = *(minPointStack.<span class="hljs-built_in">begin</span>() + idx);<br>            <span class="hljs-comment">// 当前点查找到原来的点，闭包结束，退出循环</span><br>            <span class="hljs-keyword">if</span> (curPoint == convexHull[<span class="hljs-number">0</span>])<br>            &#123;<br>                isOver = <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            convexHull.<span class="hljs-built_in">push_back</span>(*(minPointStack.<span class="hljs-built_in">begin</span>() + idx));<br>            *(points.<span class="hljs-built_in">begin</span>() + eraseIdxStack[idx]) = visited;<br>        &#125;<br>        <span class="hljs-comment">// 更新当前点，进入下一次迭代</span><br>        curPoint = *(minPointStack.<span class="hljs-built_in">end</span>() - <span class="hljs-number">1</span>);<br>        <span class="hljs-comment">// 判断右链是否结束构造</span><br>        <span class="hljs-keyword">if</span> (curPoint[<span class="hljs-number">1</span>] == maxY)<br>            isRightChainOver = <span class="hljs-literal">true</span>;<br><br>        <span class="hljs-built_in">printData</span>(convexHull);<br>        cout &lt;&lt; <span class="hljs-string">&quot;minAngle &quot;</span> &lt;&lt; minAngle &lt;&lt; endl;<br>        cout &lt;&lt; <span class="hljs-string">&quot;targetIdx:[&quot;</span> &lt;&lt; curPoint[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; curPoint[<span class="hljs-number">1</span>] &lt;&lt; <span class="hljs-string">&quot;]&quot;</span> &lt;&lt; endl;<br>        cout &lt;&lt; <span class="hljs-string">&quot;\n-----------------------------&quot;</span> &lt;&lt; endl;<br>    &#125;<br><br>    <span class="hljs-comment">// 返回</span><br>    <span class="hljs-keyword">return</span> convexHull;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br>    <span class="hljs-comment">// vector&lt;vector&lt;int&gt;&gt; testData = &#123;&#123;1, 1&#125;, &#123;2, 2&#125;, &#123;2, 0&#125;, &#123;3, 3&#125;, &#123;4, 0&#125;&#125;;</span><br>    <span class="hljs-comment">// vector&lt;vector&lt;int&gt;&gt; testData = &#123;&#123;1, 1&#125;, &#123;2, 2&#125;, &#123;2, 0&#125;, &#123;2, 4&#125;, &#123;3, 3&#125;, &#123;4, 2&#125;&#125;;</span><br>    <span class="hljs-comment">// vector&lt;vector&lt;int&gt;&gt; testData = &#123;&#123;1, 2&#125;, &#123;2, 2&#125;, &#123;4, 2&#125;&#125;;</span><br>    <span class="hljs-comment">// vector&lt;vector&lt;int&gt;&gt; testData = &#123;&#123;3, 0&#125;, &#123;4, 0&#125;, &#123;5, 0&#125;, &#123;6, 1&#125;, &#123;7, 2&#125;, &#123;7, 3&#125;, &#123;7, 4&#125;, &#123;6, 5&#125;, &#123;5, 5&#125;, &#123;4, 5&#125;, &#123;3, 5&#125;, &#123;2, 5&#125;, &#123;1, 4&#125;, &#123;1, 3&#125;, &#123;1, 2&#125;, &#123;2, 1&#125;, &#123;4, 2&#125;, &#123;0, 3&#125;&#125;;</span><br>    <span class="hljs-comment">// vector&lt;vector&lt;int&gt;&gt; testData = &#123;&#123;0, 2&#125;, &#123;1, 2&#125;, &#123;1, 8&#125;, &#123;2, 3&#125;, &#123;2, 4&#125;, &#123;3, 0&#125;, &#123;3, 3&#125;, &#123;3, 4&#125;, &#123;3, 9&#125;, &#123;4, 3&#125;, &#123;4, 5&#125;, &#123;4, 9&#125;, &#123;5, 6&#125;, &#123;6, 0&#125;, &#123;6, 8&#125;, &#123;7, 1&#125;, &#123;7, 2&#125;, &#123;7, 6&#125;, &#123;7, 7&#125;, &#123;8, 0&#125;, &#123;8, 3&#125;, &#123;8, 4&#125;, &#123;8, 6&#125;, &#123;8, 7&#125;, &#123;9, 5&#125;, &#123;9, 9&#125;&#125;;</span><br>    vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; testData = &#123;&#123;<span class="hljs-number">10</span>, <span class="hljs-number">11</span>&#125;, &#123;<span class="hljs-number">10</span>, <span class="hljs-number">44</span>&#125;, &#123;<span class="hljs-number">10</span>, <span class="hljs-number">46</span>&#125;, &#123;<span class="hljs-number">11</span>, <span class="hljs-number">17</span>&#125;, &#123;<span class="hljs-number">11</span>, <span class="hljs-number">21</span>&#125;, &#123;<span class="hljs-number">11</span>, <span class="hljs-number">28</span>&#125;, &#123;<span class="hljs-number">11</span>, <span class="hljs-number">36</span>&#125;, &#123;<span class="hljs-number">11</span>, <span class="hljs-number">41</span>&#125;, &#123;<span class="hljs-number">12</span>, <span class="hljs-number">17</span>&#125;, &#123;<span class="hljs-number">12</span>, <span class="hljs-number">18</span>&#125;, &#123;<span class="hljs-number">12</span>, <span class="hljs-number">19</span>&#125;, &#123;<span class="hljs-number">12</span>, <span class="hljs-number">30</span>&#125;, &#123;<span class="hljs-number">12</span>, <span class="hljs-number">41</span>&#125;, &#123;<span class="hljs-number">12</span>, <span class="hljs-number">43</span>&#125;, &#123;<span class="hljs-number">12</span>, <span class="hljs-number">48</span>&#125;, &#123;<span class="hljs-number">13</span>, <span class="hljs-number">15</span>&#125;, &#123;<span class="hljs-number">13</span>, <span class="hljs-number">39</span>&#125;, &#123;<span class="hljs-number">13</span>, <span class="hljs-number">42</span>&#125;, &#123;<span class="hljs-number">13</span>, <span class="hljs-number">43</span>&#125;, &#123;<span class="hljs-number">13</span>, <span class="hljs-number">49</span>&#125;, &#123;<span class="hljs-number">14</span>, <span class="hljs-number">21</span>&#125;, &#123;<span class="hljs-number">90</span>, <span class="hljs-number">34</span>&#125;, &#123;<span class="hljs-number">91</span>, <span class="hljs-number">49</span>&#125;, &#123;<span class="hljs-number">92</span>, <span class="hljs-number">12</span>&#125;&#125;;<br>    vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt; res = <span class="hljs-built_in">JarvisFunc</span>(testData);<br>    cout &lt;&lt; <span class="hljs-string">&quot;res:&quot;</span>;<br>    <span class="hljs-built_in">printData</span>(res);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="增量算法"><a class="markdownIt-Anchor" href="#增量算法"></a> 增量算法</h2><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%204.png" alt="Untitled"></p><hr><ul><li>随机选择若干个不共线的点，作为初始凸包</li><li>每次增加一个点<ul><li>若该点在当前凸包内，则移除该点；</li><li>否则，移除对该点可见的边（可能有多条这样的边），连接该点与当前凸包上和该点相切的点，产生新的凸包；</li><li>重复上述步骤，直至点集中所有的点都处理为止。</li></ul></li></ul><blockquote><p>初始凸包可以是三角形也可以是四边形，为了使初始的凸包尽可能多的囊括非极点，可以选择最左、最右、最上、最下的四个点构成的四边形作为初始凸包。</p></blockquote><hr><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%205.png" alt="Untitled"></p><p>可见：若一个点p在凸多边形的边 e指向外的法向量的一侧，称点p对边e可见或者称边e对点p可见。</p><p>相切：若点p在凸多边形外，那么对点p可见的边必然是连续的，则边e的两个端点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>i</mi><mi mathvariant="normal">、</mi><mi>P</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">Pi、Pj</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>为凸多边形上与点p相切的两个点。</p><h2 id="快速凸包算法"><a class="markdownIt-Anchor" href="#快速凸包算法"></a> 快速凸包算法</h2><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%206.png" alt="Untitled"></p><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%207.png" alt="Untitled"></p><ul><li>首先，找到点集中最左、最右、最上、最下的四个点，作为初始的凸包</li><li>左上和右下两个点连线将凸包一分为二</li><li>对两个凸包外侧的点做如下递归处理：<ul><li>对于当前凸包的每条边：<ul><li>找到与该边e距离最远的点P0，找到当前凸包上与点P相切的两点P1和P2</li><li>删除边e，连接P0与P1，P0与P2，形成新的凸包；</li><li>舍弃新的凸包内的点</li><li>将新的凸包以P0为分界点，将凸包一分为二</li></ul></li><li>重复上述步骤，直至点集中所有的点都处理为止。</li></ul></li></ul><h1 id="三维凸包算法"><a class="markdownIt-Anchor" href="#三维凸包算法"></a> 三维凸包算法</h1><h2 id="礼物包裹算法gift-wrapping"><a class="markdownIt-Anchor" href="#礼物包裹算法gift-wrapping"></a> 礼物包裹算法(Gift Wrapping)</h2><p><strong>简介</strong></p><p>礼物包裹算法最早由Chand&amp;Kapur (1970) 提出的，它不仅可以实现二维、三维凸包，还可以实现更高维的凸包。</p><p>Jarvis步进法是礼物包裹算法在二维情况下的特例。</p><p>直观上，三维的礼物包裹算法，可以看做是在点集的外面包围了一张纸，每次更新一个新的顶点，用纸覆盖住它，就像包裹礼物一样，直至覆盖整个点集。</p><p><strong>关键问题</strong></p><ol><li><p>给定一个凸包上的面，如何确定与该面片上任意一条边相邻的三角形面片？</p><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%208.png" alt="Untitled"></p><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%209.png" alt="Untitled"></p></li><li><p>如何确定在凸包上的初始三角形面片？</p><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%2010.png" alt="Untitled"></p><p>从点集中找到最小的点，即点的x分量最小，若x分量最小的点有多个，则取其中y分量最小的点，若y分量最小的点有多个，则取其中z分量最小的点。</p></li></ol><p><strong>时间复杂度</strong></p><p>在礼物包裹算法中，确定初始的三角形面片，算法需要三次遍历点集，时间规模：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>3</mn><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(3n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">3</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p>把边结构存储在一个平衡二叉树的数据结构中，边结构的查询、插入操作只需要时间：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(log m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>（m为边的个数），根据三维空间的凸多胞体欧拉公式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo>−</mo><mi>E</mi><mo>+</mo><mi>F</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">V-E+F=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>可知，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>线性相关。（其中：V：顶点数， E：边数， F：面数）</p><p>总的时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></p><h2 id="快速凸包算法-2"><a class="markdownIt-Anchor" href="#快速凸包算法-2"></a> 快速凸包算法</h2><p><img src="/2022/05/19/%E5%AF%BB%E6%89%BE%E5%87%B8%E5%8C%85%E9%97%AE%E9%A2%98/Untitled%2011.png" alt="Untitled"></p><p><strong>简介</strong><br>快速凸包算法也可以看成是增量算法的一种变种，其思想类似于快排，因此得名。</p><p><strong>基本思想</strong></p><p>快速凸包算法首先会初始化一个4个点的凸包，然后把点集分割成各个面的外部点集，挑选距离面最远的点进行处理。任意一个极点都不会因为分割为外部点集导致被丢弃。</p><p>与增量算法相比，它们的不同就在于每次迭代从面的外部点集中选择的点不同。增量算法从外部点集中遍历所有点，但是快速凸包算法是选择距离最远的一个点。</p><p>最好的情况：每次划分都是平衡的，时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p>最坏的情况：每次划分点后某一半凸包不再需要处理，另一半需要处理划分前剩余的点，时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p>平均时间复杂度：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n*logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://zhuanlan.zhihu.com/p/158043191">凸包问题–概述</a></p><p><a href="https://zhuanlan.zhihu.com/p/158877025">凸包问题–礼物包裹算法</a></p>]]></content>
    
    
    <categories>
      
      <category>Algorithm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Algorithm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + GitHub 搭建我的个人博客记录</title>
    <link href="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="搭建教程"><a class="markdownIt-Anchor" href="#搭建教程"></a> 💙 搭建教程</h2><p>参考了网上一些教程和官方文档：</p><ul><li><a href="https://www.zhihu.com/question/59088760/answer/265741938">如何用github page搭建博客？ - 工匠羅的回答 - 知乎</a></li><li><a href="https://hexo.io/docs/">Hexo文档</a></li><li><a href="https://blog.csdn.net/qq_40780805/article/details/99559526">用Hexo在码云上搭建个人博客</a></li></ul><p>对主题进行轻微改动，最终效果如下：<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/001.png" alt="效果图"></p><h2 id="搭建过程"><a class="markdownIt-Anchor" href="#搭建过程"></a> 📗 搭建过程</h2><ol><li><p>在GitHub创建仓库<strong><a href="http://dreamfields.github.io">dreamfields.github.io</a></strong>，并安装<strong>Hexo、Git、Node</strong></p></li><li><p>本地拉取仓库，创建新文件夹<code>blogs</code>，运行命令<code>hexo init</code>进行初始化，并运行<code>npm install</code>安装依赖<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/002.png" alt="初始化过程"><br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/003.png" alt="初始化结果"></p></li><li><p>获取主题<strong>ayer</strong>，在<code>themes</code>文件夹下多出一个文件夹，按照其GitHub上的教程进行相关插件的安装并设置相关页面—— <a href="https://github.com/Shen-Yu/hexo-theme-ayer">Shen-Yu/hexo-theme-ayer</a></p></li><li><p>调整相关配置，包括主题的配置文件和hexo的配置文件</p></li><li><p>回到GitHub仓库，添加分支<code>gh-pages</code>，第4步中在hexo的配置文件中已经为部署到该分支上，此时运行命令<code>hexo deploy</code>进行部署即可</p></li></ol><h2 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 📋 常用命令</h2><h4 id="创建新博客"><a class="markdownIt-Anchor" href="#创建新博客"></a> 创建新博客</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><h4 id="创建新页面"><a class="markdownIt-Anchor" href="#创建新页面"></a> 创建新页面</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page newPageName<br></code></pre></td></tr></table></figure><h4 id="生成静态文件"><a class="markdownIt-Anchor" href="#生成静态文件"></a> 生成静态文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate (可缩写为 hexo g)<br></code></pre></td></tr></table></figure><h4 id="启动本地服务"><a class="markdownIt-Anchor" href="#启动本地服务"></a> 启动本地服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server (可缩写为 hexo s)<br></code></pre></td></tr></table></figure><h4 id="部署到远程网站"><a class="markdownIt-Anchor" href="#部署到远程网站"></a> 部署到远程网站</h4><p>要先在<code>_config.yml</code>进行配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><h2 id="问题与解决"><a class="markdownIt-Anchor" href="#问题与解决"></a> ❌ 问题与解决</h2><h4 id="图片的添加"><a class="markdownIt-Anchor" href="#图片的添加"></a> 图片的添加</h4><ul><li>首先要在配置文件<code>_config.yml</code>中进行如下更改</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">post_asset_folder: <span class="hljs-literal">true</span><br>marked:<br>  prependRoot: <span class="hljs-literal">true</span><br>  postAsset: <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ul><li>在引用的过程中，直接使用<code>![图 1](Hexo-GitHub搭建博客/001.png)</code>来引用同名资源文件夹下的001.png</li><li>其它引用方式可见官方文档：<a href="https://hexo.io/zh-cn/docs/asset-folders">Hexo文档-资源文件夹</a></li></ul><h4 id="markdown的编辑"><a class="markdownIt-Anchor" href="#markdown的编辑"></a> Markdown的编辑</h4><p>用VS Code尝试编辑了.md文件，效果一般，后来安装了几个插件，最终能基本上达到CSDN的在线编辑效果：</p><ul><li>Markdown All In One：是一个组合包，一股脑把最常用的Markdown优化都给你装好</li><li>Markdown Preview Github Styling：使用这个样式，在本地就能预览Markdown文件最终在Github Pages中显示的效果</li><li>Markdown Shortcuts：绑定了快捷键，方便编辑  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Bash">ctrl+L 添加链接<br>ctrl+B 加粗<br>ctrl+I 斜体<br>ctrl+<span class="hljs-built_in">shift</span>+L 为图片添加说明文字<br>ctrl+M+C 代码块<br>ctrl+M+I 内嵌行代码<br>ctrl+M+M 组合键，显示所有编辑快捷选项<br></code></pre></td></tr></table></figure></li><li>Markdown Paste：用于在.md文件中直接粘贴图片，点击右键进行添加，同时将配置设置为<code>$&#123;fileBasenameNoExtension&#125;</code>，表示将图片默认保存到与本.md文件同名且不包含扩展名的文件夹中。前提是Hexo的_config.yml中已经开启了<code>post_asset_folder: true</code>，这样每次添加新博客的时候就会自动创建与.md文件同名的资源文件夹。</li></ul><h4 id="自动部署travis-ci"><a class="markdownIt-Anchor" href="#自动部署travis-ci"></a> 自动部署travis-ci</h4><p>看到官方文档上写：<code>Travis CI 应该会自动开始运行，并将生成的文件推送到同一 repository 下的 gh-pages 分支下</code>，而我的博客仅在<code>master</code>上，况且配置的时候出了问题，干脆放弃挣扎…</p><p>目前代替的方式是每次写完博客直接使用命令行即可直接部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g -d<br></code></pre></td></tr></table></figure><p>后来的后来，还是想尝试把自动部署弄好，按照官网的步骤来的（<a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a>）但是卡到这一步：<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/error.png" alt></p><p>发现是yarn和npm包的问题，查了一些博客后，修改<code>.travis.yml</code>文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">language: node_js<br>node_js: stable<br><br>install:<br>  - npm install<br><br>script:<br>  - hexo g<br>  - hexo d<br><br>after_script:<br>  - git config user.name <span class="hljs-string">&quot;xxx&quot;</span><br>  - git config user.email <span class="hljs-string">&quot;xxx&quot;</span><br>  - git add .<br>  - git commit -m <span class="hljs-string">&quot;Update docs&quot;</span><br>  - git push --force --quiet <span class="hljs-string">&quot;https://<span class="hljs-variable">$&#123;GH_TOKEN&#125;</span>@<span class="hljs-variable">$&#123;GH_REF&#125;</span>&quot;</span> master:master  <span class="hljs-comment"># 自动引用之前在travis官网设置的GH_TOKEN</span><br><br>branches:<br>  only:<br>    - master<br>env:<br> global:<br>   - GH_REF: github.com/DreamFields/dreamfields.github.io.git <span class="hljs-comment"># 我的仓库地址</span><br></code></pre></td></tr></table></figure><p>于是乎，每次写完博客，就可以直接push到master分支（这个过程可以用SourceTree软件实现，方便一些），接着travis便会自动部署到gh-pages分支上：<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/result.png" alt="自动部署完毕"></p><p>但是修改完博客之后，push的时候发现：<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/refuse.png" alt="拒绝合并不相关的历史"></p><p>即配置的时候只将public文件夹提交到master分支，导致远程和本地代码冲突…接着用命令行<code>git push -f</code>强制提交，让master恢复，再修改配置文件。</p><p>之后对博客更新，更新内容不能同步，继续更改配置。</p><h4 id="使用vs-code插件code-runner一键部署并更新代码仓库"><a class="markdownIt-Anchor" href="#使用vs-code插件code-runner一键部署并更新代码仓库"></a> 使用VS Code插件Code Runner一键部署并更新代码仓库</h4><p>在自动部署这部分放弃挣扎后，通过使用<code>Code Runner</code>插件使我找到了更好的自动部署办法</p><ol><li><p>安装插件<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/2021-08-10-09-53-06.png" alt></p></li><li><p>设置插件执行映射：设置-扩展-Run Code Configuration-Executor Map-在setting.json中编辑<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/2021-08-10-09-55-44.png" alt></p></li><li><p>编辑setting.json，添加<code>&quot;shellscript&quot;: &quot; &amp; \&quot;C:\\Program Files\\Git\\bin\\bash.exe\&quot;&quot;,</code>即可<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/20221219011850.png" alt></p></li><li><p>编写脚本文件<code>finish.bash</code>，放到最外层目录<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/2021-08-10-10-06-08.png" alt></p></li><li><p>将bash.exe所在的bin目录<code>C:\Program Files (x86)\Git\bin</code>加入环境变量</p></li><li><p>本地编辑完博客后，打开<code>finish.bash</code>文件后，点击运行按钮即可<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/2021-08-10-10-09-17.png" alt></p></li></ol><h4 id="评论功能"><a class="markdownIt-Anchor" href="#评论功能"></a> 评论功能</h4><blockquote><p>参考：<a href="https://zhuanlan.zhihu.com/p/581640626">https://zhuanlan.zhihu.com/p/581640626</a></p></blockquote><p><strong>显示设置：</strong><br>去官网按照文档设置即可：<a href="https://valine.js.org/quickstart.html">valine官方文档-快速开始</a>，接着在主题的配置文件下修改应用的id和key。</p><p><strong>评论管理：</strong></p><ul><li><p>由于Valine 是无后端评论系统，所以也就没有开发评论数据管理功能，需要自行登录Leancloud应用管理。</p></li><li><p>具体步骤：登录 &gt; 选择你创建的应用 &gt; 存储 &gt; 选择Class &gt; Comment，然后就可以对评论管理。（ <a href="https://console.leancloud.cn/apps">Leancloud网站</a>）<br><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/comments.png" alt="测试评论"></p></li></ul><p><img src="/2022/04/10/Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/comment-admin.png" alt="管理评论"></p><h2 id="标签和分类"><a class="markdownIt-Anchor" href="#标签和分类"></a> 🎈 标签和分类</h2><p>博客的标签是随缘添加，格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">tags:<br>- 标签1<br>- 标签2<br></code></pre></td></tr></table></figure><p>博客的分类是参考官方文档，搬运如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">categories:<br>- [日记, 日记下分类1]<br>- [日记, 日记下分类2]<br>- [技术博客]<br></code></pre></td></tr></table></figure><h2 id="展望"><a class="markdownIt-Anchor" href="#展望"></a> 🔵 展望</h2><ul><li>[x] 评论系统完善</li><li>[ ] 自动部署travis-ci</li><li>[ ] 首页图片加载过慢优化</li><li>[ ] 在线.md文件编辑功能</li><li>[ ] “about关于我”界面，使用模板打造个人简历</li><li>[ ] …</li></ul>]]></content>
    
    
    <categories>
      
      <category>Configuration</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub Pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GAMES101 重要公式推导与算法补充</title>
    <link href="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/"/>
    <url>/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/</url>
    
    <content type="html"><![CDATA[<h1 id="rodrigues-旋转公式"><a class="markdownIt-Anchor" href="#rodrigues-旋转公式"></a> Rodrigues 旋转公式</h1><h2 id="概要"><a class="markdownIt-Anchor" href="#概要"></a> 概要</h2><p>实现某三维物体的坐标绕过原点的向量轴<strong>n</strong>（默认过原点），旋转 α 角度（右手定则的四指方向）的旋转矩阵为 R(<strong>n</strong>,α)，其表达形式为：<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-06-17-50-47.png" alt="Rodrigues旋转公式"></p><p>该旋转矩阵左乘三维物体上的某个点（列向量、列矩阵）即可得到旋转变换后的点。</p><h2 id="推导过程"><a class="markdownIt-Anchor" href="#推导过程"></a> 推导过程</h2><blockquote><p>说明：字母上带有<code>→</code>表示向量，不带箭头表示该向量对应的列矩阵；字母上的<code>^</code>表示该向量的单位向量。</p></blockquote><h4 id="step1"><a class="markdownIt-Anchor" href="#step1"></a> Step1</h4><p>将<strong>S</strong>向量分解为旋转轴<strong>n</strong>方向和垂直于旋转轴方向的两个向量，其中<code>I</code>表示旋转轴的单位列矩阵<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-07-09-55-48.png" alt></p><h4 id="step2"><a class="markdownIt-Anchor" href="#step2"></a> Step2</h4><p>求出与旋转轴<strong>n</strong>和向量<strong>S</strong>所在平面垂直的向量<strong>C</strong><br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-07-09-56-11.png" alt></p><h4 id="step3"><a class="markdownIt-Anchor" href="#step3"></a> Step3</h4><p>将<strong>S</strong>在垂直于旋转轴的分量向<strong>C</strong>旋转 α 度<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-07-09-57-58.png" alt></p><h4 id="step4"><a class="markdownIt-Anchor" href="#step4"></a> Step4</h4><p>上一步得到的向量与<strong>S</strong>在旋转轴的分量相加，得到旋转后的向量，由于两个向量的叉乘可以写成一个矩阵乘以列向量的形式（证明略）<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-07-09-53-09.png" alt></p><p>整理与提取，即可得到旋转矩阵 R（A 为单位矩阵）：<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-07-09-58-44.png" alt></p><hr><h1 id="正交投影矩阵求法"><a class="markdownIt-Anchor" href="#正交投影矩阵求法"></a> 正交投影矩阵求法</h1><p><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230222234625.png" alt></p><h1 id="透视投影矩阵求法"><a class="markdownIt-Anchor" href="#透视投影矩阵求法"></a> 透视投影矩阵求法</h1><h2 id="概要-2"><a class="markdownIt-Anchor" href="#概要-2"></a> 概要</h2><p>透视投影是利用相似三角形原理将远处平面坐标映射到相机可见的窗口处：<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-08-10-12-39.png" alt></p><p>但该过程可以等价为：可以看作先将远处的平面压缩为等同于相机可见的窗口大小的平面，得到一个长方体，然后再进行正交投影（先平移，后放缩）得到以原点为中心的边长为 2 的立方体（规范立方体）<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-08-10-14-43.png" alt="远处平面压缩"><br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-08-10-16-01.png" alt="正交投影变换"></p><h2 id="推导"><a class="markdownIt-Anchor" href="#推导"></a> 推导</h2><p><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230222231330.png" alt><br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230222231601.png" alt><br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230222231904.png" alt><br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230222231921.png" alt><br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230222231935.png" alt><br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230222231949.png" alt></p><h2 id="求取方法"><a class="markdownIt-Anchor" href="#求取方法"></a> 求取方法</h2><ul><li>总公式<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mtext>persp </mtext></msub><mo>=</mo><msub><mi>M</mi><mtext>ortho </mtext></msub><msub><mi>M</mi><mrow><mtext>persp </mtext><mo>→</mo><mtext> ortho </mtext></mrow></msub></mrow><annotation encoding="application/x-tex">M_{\text {persp }}=M_{\text {ortho }} M_{\text {persp } \rightarrow \text { ortho }}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">persp </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">ortho </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">persp </span></span><span class="mrel mtight">→</span><span class="mord text mtight"><span class="mord mtight"> ortho </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li>透视变换到正交（压缩远平面的矩阵）<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mtext>persp </mtext><mo>→</mo><mtext> ortho </mtext></mrow></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>n</mi><mi>f</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">M_{\text {persp } \rightarrow \text { ortho }}=\begin{pmatrix}n &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; n &amp; 0 &amp; 0\\0 &amp; 0 &amp; n+f &amp; -n f \\0 &amp; 0 &amp; 1 &amp; 0\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">persp </span></span><span class="mrel mtight">→</span><span class="mord text mtight"><span class="mord mtight"> ortho </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li>正交变换矩阵<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mtext>ortho </mtext></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>2</mn><mrow><mi>r</mi><mo>−</mo><mi>l</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>2</mn><mrow><mi>t</mi><mo>−</mo><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mfrac><mrow><mi>r</mi><mo>+</mo><mi>l</mi></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mfrac><mrow><mi>t</mi><mo>+</mo><mi>b</mi></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">M_{\text {ortho }}=\begin{pmatrix}\frac{2}{r-l} &amp; 0 &amp; 0 &amp; 0 \\0 &amp; \frac{2}{t-b} &amp; 0 &amp; 0 \\0 &amp; 0 &amp; \frac{2}{n-f} &amp; 0 \\0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}\begin{pmatrix}1 &amp; 0 &amp; 0 &amp; -\frac{r+l}{2} \\0 &amp; 1 &amp; 0 &amp; -\frac{t+b}{2} \\0 &amp; 0 &amp; 1 &amp; -\frac{n+f}{2} \\0 &amp; 0 &amp; 0 &amp; 1\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">ortho </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.023094em;vertical-align:-2.2615469999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.761547em;"><span style="top:-4.9164390000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.668em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.419561em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.0984530000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2615469999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.761547em;"><span style="top:-4.9164390000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.668em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.419561em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.0984530000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2615469999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.761547em;"><span style="top:-4.9164390000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.668em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.419561em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0984530000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2615469999999998em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.761547em;"><span style="top:-4.9164390000000004em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.668em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.419561em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.0984530000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2615469999999998em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.736216em;"><span style="top:-4.856108000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.6159999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.323784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.123784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.236216em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.736216em;"><span style="top:-4.856108000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.6159999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.323784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.123784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.236216em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.736216em;"><span style="top:-4.856108000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.6159999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.323784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.123784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.236216em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.736216em;"><span style="top:-4.856108000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6159999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.323784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.123784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.236216em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li>整理得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>r</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>l</mi><mo>=</mo><mo>−</mo><mi>r</mi><mo separator="true">,</mo><mi>t</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mo>−</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r&gt;0,l=-r,t&gt;0,b=-t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mtext>persp </mtext></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>r</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>t</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>2</mn><mi>n</mi><mi>f</mi></mrow><mrow><mi>n</mi><mo>−</mo><mi>f</mi></mrow></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">M_{\text {persp }}=\begin{pmatrix}n/r &amp; 0 &amp; 0 &amp; 0 \\0 &amp; n/t &amp; 0 &amp; 0 \\0 &amp; 0 &amp; \frac{n+f}{n-f} &amp; \frac{-2nf}{n-f} \\0 &amp; 0 &amp; 1 &amp; 0\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">persp </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.013324em;vertical-align:-2.256662em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord">/</span><span class="mord mathdefault">t</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.756662em;"><span style="top:-4.916662em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7166619999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4244459999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.1033380000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.256662em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h2 id="透视投影变换坐标变化证明"><a class="markdownIt-Anchor" href="#透视投影变换坐标变化证明"></a> 透视投影变换坐标变化证明</h2><h3 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h3><p><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20220824161104.png" alt><br>将远处的平面压缩的过程（即经过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mtext>persp </mtext><mo>→</mo><mtext> ortho </mtext></mrow></msub></mrow><annotation encoding="application/x-tex">M_{\text {persp } \rightarrow \text { ortho }}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">persp </span></span><span class="mrel mtight">→</span><span class="mord text mtight"><span class="mord mtight"> ortho </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 变换）规定：近处的平面的大小和位置永远不变；远处平面的大小会被压缩，但远近（z 值）不变；远处平面的中心点在压缩后也不变。那么对于近处和远处平面中间的点，其坐标的变化是——<strong>向远处平面靠近的</strong>，下面给出证明。</p><h3 id="证明过程"><a class="markdownIt-Anchor" href="#证明过程"></a> 证明过程</h3><h4 id="step1-透视投影变换矩阵形式"><a class="markdownIt-Anchor" href="#step1-透视投影变换矩阵形式"></a> Step1 透视投影变换矩阵形式</h4><p>该矩阵的推导过程见<a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_04.pdf">课程 PPT</a>，下面直接给出其形式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mtext>persp </mtext><mo>→</mo><mtext> ortho </mtext></mrow></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>n</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo>+</mo><mi>f</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>n</mi><mi>f</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">M_{\text {persp } \rightarrow \text { ortho }}=\begin{pmatrix}n &amp; 0 &amp; 0 &amp; 0\\   0 &amp; n &amp; 0 &amp; 0\\0 &amp; 0 &amp; n+f &amp; -n f \\0 &amp; 0 &amp; 1 &amp; 0\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">persp </span></span><span class="mrel mtight">→</span><span class="mord text mtight"><span class="mord mtight"> ortho </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="step2-2"><a class="markdownIt-Anchor" href="#step2-2"></a> Step2</h4><p>初始点经过变换后得到新坐标，其中 z 方向的新坐标为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mn>0</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>z</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">f(z0)/z0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">0</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">0</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>⋅</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>y</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>z</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><msub><mi>x</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><msub><mi>y</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>z</mi><mn>0</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mover><mo><mo>⟶</mo></mo><mrow><mi mathvariant="normal">/</mi><msub><mi>z</mi><mn>0</mn></msub></mrow></mover><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><msub><mi>x</mi><mn>0</mn></msub><mi mathvariant="normal">/</mi><msub><mi>z</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><msub><mi>y</mi><mn>0</mn></msub><mi mathvariant="normal">/</mi><msub><mi>z</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">/</mi><msub><mi>z</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">M \cdot\left(\begin{array}{c}x_{0} \\y_{0} \\z_{0} \\1\end{array}\right)=\left(\begin{array}{c}n x_{0} \\n y_{0} \\f\left(z_{0}\right) \\z_{0}\end{array}\right) \stackrel{/z_{0}}{\longrightarrow}\left(\begin{array}{c}n x_{0} / z_{0} \\n y_{0} / z_{0} \\f\left(z_{0}\right) / z_{0} \\1\end{array}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4220000000000002em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⟶</span></span></span><span style="top:-3.7969999999999997em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.04398em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.011em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="step3-2"><a class="markdownIt-Anchor" href="#step3-2"></a> Step3</h4><p>判断新坐标与初始坐标的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> 方向上的大小，记为函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>z</mi><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g(z0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>g</mi><mrow><mo fence="true">(</mo><msub><mi>z</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><msub><mi>z</mi><mn>0</mn></msub></mfrac><mo>−</mo><msub><mi>z</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>n</mi><mo>+</mo><mi>f</mi><mo>−</mo><mfrac><mrow><mi>n</mi><mi>f</mi></mrow><msub><mi>z</mi><mn>0</mn></msub></mfrac><mo>−</mo><msub><mi>z</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mover><mo><mo>=</mo></mo><mo stretchy="false">?</mo></mover><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}g\left(z_{0}\right) &amp;=\frac{f(z_{0})}{z_{0}}-z_{0}  \\&amp;=n+f-\frac{n f}{z_{0}}-z_{0} \\&amp; \stackrel{?}= 0\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.883418em;vertical-align:-3.191709em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.691709em;"><span style="top:-5.691709em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.1842690000000005em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span><span style="top:-0.8952910000000003em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.191709em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.691709em;"><span style="top:-5.691709em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1842690000000005em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.8952910000000003em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.152978em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">=</span></span></span><span style="top:-3.5668699999999998em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mclose mtight">?</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.191709em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mfrac><mrow><mi>n</mi><mi>f</mi><mo>−</mo><msubsup><mi>z</mi><mn>0</mn><mn>2</mn></msubsup></mrow><msubsup><mi>z</mi><mn>0</mn><mn>2</mn></msubsup></mfrac><mo separator="true">,</mo><msub><mi>z</mi><mn>0</mn></msub><mo>∈</mo><mo stretchy="false">[</mo><mi>f</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">g^{\prime}=\frac{n f-z_{0}^{2}}{z_{0}^{2}}, z_{0} \in[f, n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.443416em;vertical-align:-0.9523079999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911079999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.433692em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9523079999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">]</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msup><mi>g</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>&lt;</mo><mn>0</mn><mi mathvariant="normal">且</mi><msup><mi>g</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mn>0</mn><mo separator="true">,</mo><msup><mi>g</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">易</mi><mi mathvariant="normal">知</mi><mi mathvariant="normal">，</mi><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">在</mi><mo stretchy="false">[</mo><mi>f</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">]</mo><mi mathvariant="normal">区</mi><mi mathvariant="normal">间</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">先</mi><mi mathvariant="normal">减</mi><mi mathvariant="normal">后</mi><mi mathvariant="normal">增</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⇒</mo><mi>g</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⇒</mo><mi>g</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;  g^{\prime \prime}&lt;0且g^{\prime}(f)&lt;0, g^{\prime}(n)&gt;0,  易知，g(x)在[f,n]区间内先减后增\\&amp; \Rightarrow  g(f)=g(n)=0 \\&amp; \Rightarrow  g(z_0)&lt;0\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.500000000000002em;vertical-align:-2.000000000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.4999999999999991em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mord cjk_fallback">且</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">易</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord cjk_fallback">在</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mord cjk_fallback">区</span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">减</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">增</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>最终得到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><msub><mi>z</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">g(z_0)&lt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 恒成立，即新坐标小于初始坐标，由于视角方向是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">-z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span> 方向，可以得到中间点是向远处平面靠近的。</p><p>当然用绘图软件把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mn>0</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>z</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">f(z0)/z0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">0</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">0</span></span></span></span>绘制出来，y轴代表经过透视投影矩阵变换之后的深度，x轴表示变换之前的深度。在远近平面之间的点，其y值都会更加接近远平面。<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20230619193824.png" alt></p><h3 id="推广为什么需要进行近平面裁剪"><a class="markdownIt-Anchor" href="#推广为什么需要进行近平面裁剪"></a> 推广：为什么需要进行近平面裁剪？</h3><p>从上面的图中可以看出，当摄像机空间坐标下的深度值z：</p><ul><li>从近平面变化到0的过程中（近平面为负值，变化过程中始终为负值），经过透视投影之后其深度值从近平面变化到正无穷，即深度由负值变为了正值，这就导致这段距离的某个点经过透视投影跑到了摄像机的后面（摄像机处于原点），不需要保留。</li><li>从0变化到正无穷的过程中，经过透视投影之后其深度值永远为负值，这就导致本来在摄像机后面的某个点经过透视投影跑到了摄像机的前面且在远平面之后，不应该被绘制，因此不应该保留。</li></ul><h1 id="重心坐标插值透视投影矫正"><a class="markdownIt-Anchor" href="#重心坐标插值透视投影矫正"></a> 重心坐标插值——透视投影矫正</h1><p><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20220817160618.png" alt></p><h2 id="问题来源"><a class="markdownIt-Anchor" href="#问题来源"></a> 问题来源</h2><ul><li><p>世界坐标下的三角形 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mrow><mi>A</mi><mi>B</mi><mi>C</mi></mrow></mrow><annotation encoding="application/x-tex">\triangle{ABC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord"><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span></span> 投影到屏幕空间对应的三角形为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mrow><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup><msup><mi>B</mi><mo mathvariant="normal">′</mo></msup><msup><mi>C</mi><mo mathvariant="normal">′</mo></msup></mrow></mrow><annotation encoding="application/x-tex">\triangle{A&#x27;B&#x27;C&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 。</p></li><li><p>在光栅化的时候需要知道屏幕空间三角形内某点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 的深度值 ，我们目的实际是——获得 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 对应在世界坐标下的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 的深度值 。</p></li><li><p>通过重心坐标插值来获得 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 的深度值 ，即(<strong>世界坐标下</strong>)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>P</mi></msub><mo>=</mo><mi>α</mi><msub><mi>Z</mi><mi>A</mi></msub><mo>+</mo><mi>β</mi><msub><mi>Z</mi><mi>B</mi></msub><mo>+</mo><mi>γ</mi><msub><mi>Z</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">Z_P = \alpha Z_A + \beta Z_B + \gamma Z_C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>世界坐标下的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mi mathvariant="normal">、</mi><mi>β</mi><mi mathvariant="normal">、</mi><mi>γ</mi></mrow><annotation encoding="application/x-tex">\alpha 、\beta 、\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> 不方便获取，于是直接拿到的是屏幕坐标下的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mrow><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup><msup><mi>B</mi><mo mathvariant="normal">′</mo></msup><msup><mi>C</mi><mo mathvariant="normal">′</mo></msup></mrow></mrow><annotation encoding="application/x-tex">\triangle{A&#x27;B&#x27;C&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord"><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 坐标，因此可以直接求出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">、</mi><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">、</mi><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\alpha &#x27;、\beta &#x27; 、\gamma &#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 进行插值，即(<strong>屏幕坐标下</strong>)：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>P</mi></msub><mo>=</mo><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>A</mi></msub><mo>+</mo><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>B</mi></msub><mo>+</mo><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">Z_P = \alpha &#x27; Z_A + \beta &#x27; Z_B + \gamma &#x27; Z_C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9518920000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>但是透视实际上是一种近大远小的视觉现象，离视点远的部分会被缩放得更加厉害，所以需要对这个结果进行所谓的插值校正。</p></li><li><p>更本质的原因在于透视投影矩阵本身（参考：<a href="https://blog.csdn.net/softwarekid/article/details/45055253?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%2245055253%22%2C%22source%22%3A%22unlogin%22%7D">齐次空间的裁剪</a>）</p><ul><li>经过透视投影矩阵的变换之后，观察空间的所有点的x、y、z值与变换前相比都是线性的（只与远近平面、近平面的纵横比线性相关），但是经过透视除法之后，w值是变换前的-z值，因此x、y、z值与变换前相比是非线性的了。</li><li>上述的结论还告诉我们，对于透视投影变换后的顶点属性，那么将不能运用线性插值（当然可以使用这里将要推导的透视矫正插值），否则很多在原来坐标系中的存储信息将会变形；</li></ul></li></ul><h2 id="矫正公式推导"><a class="markdownIt-Anchor" href="#矫正公式推导"></a> 矫正公式推导</h2><p>根据重心坐标插值：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>P</mi></msub><mo>=</mo><mi>α</mi><msub><mi>Z</mi><mi>A</mi></msub><mo>+</mo><mi>β</mi><msub><mi>Z</mi><mi>B</mi></msub><mo>+</mo><mi>γ</mi><msub><mi>Z</mi><mi>C</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>A</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>B</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>C</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>α</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>β</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>γ</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">Z_{P}=\alpha Z_{A}+\beta Z_{B}+\gamma Z_{C}=\left[\begin{array}{lll}Z_{A} &amp; Z_{B} &amp; Z_{C}\end{array}\right]\left[\begin{array}{l}\alpha \\\beta \\\gamma\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup></msub><mo>=</mo><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup></msub><mo>+</mo><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><msup><mi>B</mi><mo mathvariant="normal">′</mo></msup></msub><mo>+</mo><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><msup><mi>C</mi><mo mathvariant="normal">′</mo></msup></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><msup><mi>B</mi><mo mathvariant="normal">′</mo></msup></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><msup><mi>C</mi><mo mathvariant="normal">′</mo></msup></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">Z_{P&#x27;}=\alpha &#x27; Z_{A&#x27;}+\beta &#x27; Z_{B&#x27;}+\gamma &#x27; Z_{C&#x27;}=\left[\begin{array}{lll}Z_{A&#x27;} &amp; Z_{B&#x27;} &amp; Z_{C&#x27;}\end{array}\right]\left[\begin{array}{l}\alpha &#x27; \\\beta &#x27; \\\gamma &#x27;\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9518920000000001em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>由重心插值公式的性质推导：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mo>+</mo><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mo>+</mo><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">    1 = \alpha &#x27; + \beta &#x27;  + \gamma &#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8852220000000001em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>P</mi></msub></mfrac><mo>=</mo><mfrac><msub><mi>Z</mi><mi>A</mi></msub><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mo>+</mo><mfrac><msub><mi>Z</mi><mi>B</mi></msub><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mo>+</mo><mfrac><msub><mi>Z</mi><mi>C</mi></msub><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}\frac{Z_{P}}{Z_{P}}=\frac{Z_{A}}{Z_{A}} \alpha^{\prime}+\frac{Z_{B}}{Z_{B}} \beta^{\prime}+\frac{Z_{C}}{Z_{C}} \gamma^{\prime}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3339409999999998em;vertical-align:-0.4169704999999999em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9169704999999999em;"><span style="top:-3.0283345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4169704999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>P</mi></msub></mfrac><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>A</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>B</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>C</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\frac{Z_{P}}{Z_{P}}=\left[\begin{array}{lll}Z_{A} &amp; Z_{B} &amp; Z_{C}\end{array}\right]\left[\begin{array}{c}\frac{1}{Z_{A}} \alpha^{\prime} \\\frac{1}{Z_{B}} \beta^{\prime} \\\frac{1}{Z_{C}} \gamma^{\prime}\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.871239em;vertical-align:-1.6856195000000005em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1856194999999996em;"><span style="top:-4.3405115em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500984999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.7596854999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6856195000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>P</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>A</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>B</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>C</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><msub><mi>Z</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">{Z_{P}}=\left[\begin{array}{lll}Z_{A} &amp; Z_{B} &amp; Z_{C}\end{array}\right]\left[\begin{array}{c}\frac{1}{Z_{A}} \alpha^{\prime} \\\frac{1}{Z_{B}} \beta^{\prime} \\\frac{1}{Z_{C}} \gamma^{\prime}\end{array}\right]Z_{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.871239em;vertical-align:-1.6856195000000005em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1856194999999996em;"><span style="top:-4.3405115em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500984999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.7596854999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6856195000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>P</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>A</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>B</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>Z</mi><mi>C</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">Z_{P}=\left[\begin{array}{lll}Z_{A} &amp; Z_{B} &amp; Z_{C}\end{array}\right]\left[\begin{array}{c}\frac{Z_{P}}{Z_{A}} \alpha^{\prime} \\\frac{Z_{P}}{Z_{B}} \beta^{\prime} \\\frac{Z_{P}}{Z_{C}} \gamma^{\prime}\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.20104em;vertical-align:-1.850025em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2509115em;"><span style="top:-4.3622755em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0283345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.6943935000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7509114999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>得到如下结论（<strong>重要结论</strong>）：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>α</mi><mi mathvariant="normal">，</mi><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>β</mi><mi mathvariant="normal">，</mi><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mi>γ</mi></mrow><annotation encoding="application/x-tex">\frac{Z_{P}}{Z_{A}} \alpha^{\prime}=\alpha ，\frac{Z_{P}}{Z_{B}} \beta^{\prime}=\beta ，\frac{Z_{P}}{Z_{C}} \gamma^{\prime}=\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span></span></p><p>其含义是某一点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 在屏幕空间下的重心坐标 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\alpha &#x27; , \beta &#x27; , \gamma &#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 对应于世界坐标点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 的重心坐标变成了 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\frac{Z_{P}}{Z_{A}} \alpha^{\prime} , \frac{Z_{P}}{Z_{B}} \beta^{\prime} , \frac{Z_{P}}{Z_{C}} \gamma^{\prime})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3339409999999998em;vertical-align:-0.44530499999999995em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。</p><p>由于重心坐标相加为 1：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mo>+</mo><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mo>+</mo><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{Z_{P}}{Z_{A}} \alpha^{\prime}+\frac{Z_{P}}{Z_{B}} \beta^{\prime}+\frac{Z_{P}}{Z_{C}} \gamma^{\prime}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.19633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>得到正确的深度值：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>P</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>A</mi></msub></mfrac><mo>+</mo><mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>B</mi></msub></mfrac><mo>+</mo><mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>C</mi></msub></mfrac></mrow></mfrac></mrow><annotation encoding="application/x-tex">Z_{P}=\frac{1}{\frac{\alpha^{\prime}}{Z_{A}}+\frac{\beta^{\prime}}{Z_{B}}+\frac{\gamma^{\prime}}{Z_{C}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.588961em;vertical-align:-1.267521em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.177784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.87198em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.924088em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267521em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>接下来的步骤就是求屏幕空间的点 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 的重心坐标 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">、</mi><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">、</mi><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">\alpha &#x27; 、 \beta &#x27; 、 \gamma &#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 代入上述公式得到其实际对应的深度值。</p><h2 id="通用属性插值"><a class="markdownIt-Anchor" href="#通用属性插值"></a> 通用属性插值</h2><p>正确得出深度的插值结果之后，再看看任意属性（法线向量，纹理坐标等）插值结果，设 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">I_P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为要插值求得的在屏幕空间中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 点所对应到世界坐标 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 点的属性。</p><p>对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">△</mi><mi>A</mi><mi>B</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">\triangle ABC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span> ，根据重心坐标插值有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>P</mi></msub><mo>=</mo><mi>α</mi><msub><mi>I</mi><mi>A</mi></msub><mo>+</mo><mi>β</mi><msub><mi>I</mi><mi>B</mi></msub><mo>+</mo><mi>γ</mi><msub><mi>I</mi><mi>C</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>A</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>B</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>C</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>α</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>β</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>γ</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">I_{P}=\alpha I_{A}+\beta I_{B}+\gamma I_{C}=\left[\begin{array}{lll}I_{A} &amp; I_{B} &amp; I_{C}\end{array}\right]\left[\begin{array}{l}\alpha \\\beta \\\gamma\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据上述重要结论有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>P</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="left left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>A</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>B</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>I</mi><mi>C</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><msub><mi>Z</mi><mi>P</mi></msub><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">I_{P}=\left[\begin{array}{lll}I_{A} &amp; I_{B} &amp; I_{C}\end{array}\right]\left[\begin{array}{c}\frac{Z_{P}}{Z_{A}} \alpha^{\prime} \\\frac{Z_{P}}{Z_{B}} \beta^{\prime} \\\frac{Z_{P}}{Z_{C}} \gamma^{\prime}\end{array}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.20104em;vertical-align:-1.850025em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2509115em;"><span style="top:-4.3622755em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0283345em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.6943935000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7509114999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.351015em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.104995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.351015em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>最后整理一下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>I</mi><mi>P</mi></msub><mo>=</mo><mrow><mo fence="true">(</mo><mfrac><msup><mi>α</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>A</mi></msub></mfrac><msub><mi>I</mi><mi>A</mi></msub><mo>+</mo><mfrac><msup><mi>β</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>B</mi></msub></mfrac><msub><mi>I</mi><mi>B</mi></msub><mo>+</mo><mfrac><msup><mi>γ</mi><mo mathvariant="normal">′</mo></msup><msub><mi>Z</mi><mi>C</mi></msub></mfrac><msub><mi>I</mi><mi>C</mi></msub><mo fence="true">)</mo></mrow><msub><mi>Z</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">I_{P}=\left(\frac{\alpha^{\prime}}{Z_{A}} I_{A}+\frac{\beta^{\prime}}{Z_{B}} I_{B}+\frac{\gamma^{\prime}}{Z_{C}} I_{C}\right) Z_{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4288919999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4288919999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h1 id="折射光线的计算"><a class="markdownIt-Anchor" href="#折射光线的计算"></a> 折射光线的计算</h1><p>折射（refraction） 是指光通过非均匀介质或者穿过不同介质的分界面时，由于其传播速度的变化而引起传播方向变化的现象。<br><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/20220916212421.png" alt></p><p>折射定律（law of refraction） 又称 斯涅耳定律（Snell’s law），它描述了光从一种介质进入另一种介质时产生折射现象的规律，内容如下：</p><ul><li>折射光线位于入射光线和界面法线所决定的平面内；</li><li>折射光线和入射光线分别在法线两侧；</li><li>入射角 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\theta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和折射角 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\theta_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的正弦之比是一个与入射角无关的常数，等于相对折射率，即 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>η</mi><mi>i</mi></msub><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mo>=</mo><msub><mi>η</mi><mi>t</mi></msub><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\eta_{i}\sin \theta_{i}=\eta_{t} \sin \theta_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>η</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\eta_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>η</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\eta_{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 分别是入射侧和折射侧介质的绝对折射率， 是相对折射率；</li></ul><h2 id="推导过程-2"><a class="markdownIt-Anchor" href="#推导过程-2"></a> 推导过程</h2><p>假设入射光线 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{\omega_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.10256em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span> 、出射光线 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{\omega_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.10256em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span>、法线向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span></span></span></span>均为单位向量，将出射光线<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>ω</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\omega_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分成垂直于法线向量和平行于法线向量的两个分量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mo>=</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>+</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mi mathvariant="normal">∥</mi></msub></mrow><annotation encoding="application/x-tex">\overrightarrow{\omega_t}={\overrightarrow{\omega_t}}_{\perp}+{\overrightarrow{\omega_t}}_{\|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.10256em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.15226em;vertical-align:-0.1997em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3272599999999999em;vertical-align:-0.3747em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3253em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3747em;"><span></span></span></span></span></span></span></span></span></span>，入射光线也是如此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>=</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>+</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi mathvariant="normal">∥</mi></msub></mrow><annotation encoding="application/x-tex">\overrightarrow{\omega_i}={\overrightarrow{\omega_i}}_{\perp}+{\overrightarrow{\omega_i}}_{\|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.10256em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.15226em;vertical-align:-0.1997em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3272599999999999em;vertical-align:-0.3747em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3253em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3747em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>由于：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>=</mo><msub><mi>η</mi><mi>i</mi></msub><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><msub><mi>η</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⇒</mo><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>=</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msup><mrow><mo fence="true">(</mo><mfrac><msub><mi>η</mi><mi>i</mi></msub><msub><mi>η</mi><mi>t</mi></msub></mfrac><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c}\sin \theta_{t} = \eta_{i} \sin \theta_{i}/\eta_{t} \\ \\\Rightarrow  \cos \theta_{t} = \sqrt{1- \left(\frac{\eta_{i}}{\eta_{t}} \sin \theta_{i}\right)^{2}}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.840000000000001em;vertical-align:-2.170000000000001em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.67em;"><span style="top:-5.466994em;"><span class="pstrut" style="height:3.6369939999999996em;"></span><span class="mord"><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.2669939999999995em;"><span class="pstrut" style="height:3.6369939999999996em;"></span><span class="mord"></span></span><span style="top:-2.269999999999999em;"><span class="pstrut" style="height:3.6369939999999996em;"></span><span class="mord"><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6369939999999996em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3540079999999999em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.596994em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg width="400em" height="2.48em" viewbox="0 0 400000 2592" preserveaspectratio="xMinYMin slice"><path d="M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8030060000000003em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.170000000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>其中：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mi mathvariant="normal">∥</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo><mo>⋅</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msup><mrow><mo fence="true">(</mo><mfrac><msub><mi>η</mi><mi>i</mi></msub><msub><mi>η</mi><mi>t</mi></msub></mfrac><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msup><mrow><mo fence="true">(</mo><mfrac><msub><mi>η</mi><mi>i</mi></msub><msub><mi>η</mi><mi>t</mi></msub></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⋅</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}{\overrightarrow{\omega_t }}_{\|}&amp;= \cos \theta_{t} \cdot (-\overrightarrow{n }) \\&amp;=(-\overrightarrow{n }) \cdot \sqrt{1- \left(\frac{\eta_{i}}{\eta_{t}} \sin \theta_{i}\right)^{2}} \\&amp;= \sqrt{1- \left(\frac{\eta_{i}}{\eta_{t}} \right)^{2}(1-(\overrightarrow{\omega_i } \cdot \overrightarrow{n })^2)}(-\overrightarrow{n })\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.30726em;vertical-align:-3.9036299999999997em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.403630000000001em;"><span style="top:-7.436934000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3253em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3747em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.776370000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"></span></span><span style="top:-1.4363700000000004em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9036299999999997em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.403630000000001em;"><span style="top:-7.436934000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.776370000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9858640000000003em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6540080000000001em;"><span style="top:-3.9029000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.9458640000000003em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width="400em" height="3.08em" viewbox="0 0 400000 3240" preserveaspectratio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702c3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80H400000v40H1017z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0541359999999997em;"><span></span></span></span></span></span></span></span><span style="top:-1.4363700000000004em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9858640000000003em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6540080000000001em;"><span style="top:-3.9029000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.9458640000000003em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width="400em" height="3.08em" viewbox="0 0 400000 3240" preserveaspectratio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702c3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80H400000v40H1017z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0541359999999997em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9036299999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>由于：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">/</mi><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>t</mi></msub><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">/</mi><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⇒</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>=</mo><mo>−</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>⋅</mo><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mo>=</mo><mo>−</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>⋅</mo><msub><mi>η</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><msub><mi>η</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c} | \overrightarrow{\omega_t }_{\perp} | / \sin \theta_{t}= | \overrightarrow{\omega_i }_{\perp} | /\sin \theta_{i} =1 \\\\ \Rightarrow\overrightarrow{\omega_t }_{\perp} = -\overrightarrow{\omega_i }_{\perp} \cdot \sin \theta_{t} /\sin \theta_{i} = -\overrightarrow{\omega_i }_{\perp} \cdot \eta_i / \eta_t \end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.82512em;vertical-align:-1.66256em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.16256em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">∣</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.69744em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.66256em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>对于上述公式的未知量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub></mrow><annotation encoding="application/x-tex">\overrightarrow{\omega_i}_{\perp}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.15226em;vertical-align:-0.1997em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span></span></span></span>有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>=</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>−</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mi mathvariant="normal">∥</mi></msub><mo>=</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>−</mo><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mo>⋅</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo>=</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>−</mo><mo stretchy="false">(</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⋅</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{\omega_i }_{\perp} = {\overrightarrow{\omega_i }} - {\overrightarrow{\omega_i }}_{\|}= {\overrightarrow{\omega_i }} - \cos \theta_{i} \cdot \overrightarrow{n }= {\overrightarrow{\omega_i }} - (\overrightarrow{\omega_i } \cdot \overrightarrow{n })  \overrightarrow{n }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.15226em;vertical-align:-0.1997em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.10256em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3272599999999999em;vertical-align:-0.3747em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3253em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3747em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.10256em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.10256em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20256em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20256em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span></span></span></span></span></p><p>得到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>+</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mi mathvariant="normal">∥</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>η</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><msub><mi>η</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>+</mo><mo stretchy="false">(</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⋅</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo><mo>+</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msup><mrow><mo fence="true">(</mo><mfrac><msub><mi>η</mi><mi>i</mi></msub><msub><mi>η</mi><mi>t</mi></msub></mfrac><mi>sin</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\overrightarrow{\omega_t }&amp;={\overrightarrow{\omega_t }}_{\perp}+{\overrightarrow{\omega_t }}_{\|} \\&amp;= \eta_i / \eta_t(-\overrightarrow{\omega_i }+(\overrightarrow{\omega_i } \cdot \overrightarrow{n }) \overrightarrow{n }) +  \sqrt{1- \left(\frac{\eta_{i}}{\eta_{t}} \sin \theta_{i}\right)^{2}}(-\overrightarrow{n })\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.96726em;vertical-align:-2.2336299999999993em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7336300000000002em;"><span style="top:-5.766934000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.106370000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2336299999999993em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7336300000000002em;"><span style="top:-5.766934000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3253em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3747em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.106370000000001em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9858640000000003em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6540080000000001em;"><span style="top:-3.9029000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.9458640000000003em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width="400em" height="3.08em" viewbox="0 0 400000 3240" preserveaspectratio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702c3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80H400000v40H1017z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0541359999999997em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2336299999999993em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>因此，在计算折射光线时，只需要得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><mo>=</mo><msub><mi>η</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><msub><mi>η</mi><mi>t</mi></msub><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>+</mo><mo stretchy="false">(</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⋅</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">{\overrightarrow{\omega_t }}_{\perp} = \eta_i / \eta_t(-\overrightarrow{\omega_i }+(\overrightarrow{\omega_i } \cdot \overrightarrow{n }) \overrightarrow{n })</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.15226em;vertical-align:-0.1997em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20256em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20256em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20256em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mi mathvariant="normal">∥</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msqrt><mrow><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><msub><mover accent="true"><msub><mi>ω</mi><mi>t</mi></msub><mo stretchy="true">→</mo></mover><mo>⊥</mo></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msup><mrow><mo fence="true">(</mo><mfrac><msub><mi>η</mi><mi>i</mi></msub><msub><mi>η</mi><mi>t</mi></msub></mfrac><mo fence="true">)</mo></mrow><mn>2</mn></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mover accent="true"><msub><mi>ω</mi><mi>i</mi></msub><mo stretchy="true">→</mo></mover><mo>⋅</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></msqrt><mo stretchy="false">(</mo><mo>−</mo><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}{\overrightarrow{\omega_t }}_{\|}&amp;=\sqrt{1- ({\overrightarrow{\omega_t }}_{\perp})^2}(-\overrightarrow{n })\\&amp;= \sqrt{1- \left(\frac{\eta_{i}}{\eta_{t}} \right)^{2}(1-(\overrightarrow{\omega_i } \cdot \overrightarrow{n })^2)}(-\overrightarrow{n }) \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.48em;vertical-align:-2.4900000000000007em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9899999999999998em;"><span style="top:-5.590709em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3253em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3747em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8499999999999996em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4900000000000007em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9899999999999998em;"><span style="top:-5.590709em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3851550000000001em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28640799999999994em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.345155em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M1001,80H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10zM1001 80H400000v40H1013z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.45484499999999994em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.8499999999999996em;"><span class="pstrut" style="height:3.9858640000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9858640000000003em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6540080000000001em;"><span style="top:-3.9029000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.95256em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.9458640000000003em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width="400em" height="3.08em" viewbox="0 0 400000 3240" preserveaspectratio="xMinYMin slice"><path d="M473,2793c339.3,-1799.3,509.3,-2700,510,-2702c3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80H400000v40H1017z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0541359999999997em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width="400em" height="0.522em" viewbox="0 0 400000 522" preserveaspectratio="xMaxYMin slice"><path d="M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z"/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4900000000000007em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h1 id="蒙特卡洛路径追踪算法"><a class="markdownIt-Anchor" href="#蒙特卡洛路径追踪算法"></a> 蒙特卡洛路径追踪算法</h1><p><img src="/2022/02/26/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/2021-08-30-18-47-31.png" alt="示意图"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 着色算法</span><br><span class="hljs-built_in">shade</span>(p, wo)<br><span class="hljs-comment">// Contribution from the light source.</span><br>L_dir = <span class="hljs-number">0.0</span><br>Uniformly sample the light at x’ (pdf_light = <span class="hljs-number">1</span> / A)<br>Shoot a ray from p to x’<br>If the ray is <span class="hljs-keyword">not</span> blocked in the middle<br>L_dir = L_i * f_r * cos θ * cos θ’ / |x’ - p|^<span class="hljs-number">2</span> / pdf_light<br><br><span class="hljs-comment">// Contribution from other reflectors.</span><br>L_indir = <span class="hljs-number">0.0</span><br>Test Russian Roulette with probability P_RR<br>Uniformly sample the hemisphere toward <span class="hljs-built_in">wi</span> (pdf_hemi = <span class="hljs-number">1</span> / <span class="hljs-number">2</span>pi)<br>Trace a ray <span class="hljs-built_in">r</span>(p, wi)<br>If ray r hit a non-emitting object at q<br>L_indir = <span class="hljs-built_in">shade</span>(q, -wi) * f_r * cos θ / pdf_hemi / P_RR<br>Return L_dir + L_indir<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
    </categories>
    
    
    <tags>
      
      <tag>旋转矩阵</tag>
      
      <tag>视图变换</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 19 相机与棱镜</title>
    <link href="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/"/>
    <url>/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="lecture-19-相机-棱镜"><a class="markdownIt-Anchor" href="#lecture-19-相机-棱镜"></a> Lecture 19 <a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_19.pdf">相机、棱镜</a></h1><hr><h1 id="成像"><a class="markdownIt-Anchor" href="#成像"></a> 成像</h1><ul><li>光栅化/光线追踪——合成方式成像，生成自然界没有的物体；</li><li>照相机——捕捉成像</li></ul><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/f237a651-e24f-44d9-b6c5-f640e5570e24-11709514.jpg" alt></p><h1 id="field-of-viewfov视场"><a class="markdownIt-Anchor" href="#field-of-viewfov视场"></a> Field of View（FOV）视场</h1><ul><li><p>视场用来描述拍摄的范围，​​​​​​​​​​​​​​​​​​​，h：高度，f：焦距。</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/1ef1ceec-8dad-444c-8733-16d1d158ce7e-11709514.jpg" alt></p></li><li><p>对视场的影响因素</p><ul><li><p>焦距（Focal length）对视场（FOV）的影响：当传感器大小一定时，FOV 随着焦距增加而减少。通常在定义视场时，用以 35mm 格式的胶片为基准（35mm-format film，36 × 24 mm )的焦距来定义视场</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/3d56e3ad-73d4-4e63-969d-856f5767b8a3-11709514.jpg" alt></p></li><li><p>传感器大小对视场的影响：传感器越小，视场越小</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/1b6514f4-eb6d-4123-89e7-534af20b17a7-11709514.jpg" alt></p></li><li><p>注意：在渲染中，传感器（Sensor）负责记录最后每个像素接受到的 Irradiance（指每单位照射面积所接收到的或者说入射的 power）有多大，最后的胶片（Film）决定最后图片的存储格式</p></li></ul></li></ul><h1 id="exposure-曝光"><a class="markdownIt-Anchor" href="#exposure-曝光"></a> Exposure 曝光</h1><h3 id="曝光定义为-h其计算公式"><a class="markdownIt-Anchor" href="#曝光定义为-h其计算公式"></a> 曝光定义为 H，其计算公式：​​​​​</h3><ul><li>T（曝光时间 Time）：由快门（shuttle）控制有多少光进来</li><li>E（Irradiance）由传感器上一个单位区域接收光的能量和镜头的光圈（aperture，通俗理解用来遮挡光线用的）和焦距控制。</li><li>可以看出曝光记录的是总体时间的能量</li></ul><h3 id="曝光的影响因素"><a class="markdownIt-Anchor" href="#曝光的影响因素"></a> 曝光的影响因素</h3><ul><li><p>光圈大小 Aperture size：仿生学设计，模拟瞳孔，通过打开和关闭 apeture 改变 f-stop</p><ul><li>其中，镜头的 f-stop（也被叫做 f-number）写作 FN 或 F/N，大小为焦距除以光圈的直径</li></ul></li><li><p>快门速度 Shuttle speed：改变 sensors 的曝光时间即每个像素接收光的时间，快门越快曝光越少。快门这个元件类似于一个窗帘，它的打开是有一个过程的</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/9e68ee4c-5921-48aa-9097-dffd53bab599-11709514.jpg" alt></p><ul><li><p>运动模糊的形成：在快门打开的这段时间内，高速运动的物体已经发生了位移，中间的过程都会被记录下来。（Slow Speed vs. Fast Speed）</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/c230f084-aabe-4282-ae52-fb6d785e0eda-11709514.jpg" alt></p></li><li><p>运动模糊不一定是坏事，从人的感知角度它可以形容速度快；从采样角度，它也可以进行反走样。</p></li><li><p>高速摄影 High-Speed Photography ：每秒拍更多的照片，也导致快门时间很少（短曝光时间）。</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/960507f7-c1bf-4b9d-85d1-a36fffdf2090-11709514.jpg" alt></p></li><li><p>延时摄影 Long-Exposure Photography</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/5f33b5a1-60aa-40fe-ac50-1127ba8b230f-11709514.jpg" alt></p></li></ul></li><li><p>感光度 ISO gain：是一个后期处理，更改传感器值和数字图像值之间的倍率，但是 ISO 在简单放大信号的同时会放大噪声</p></li></ul><h1 id="thin-lens-approximation-薄透镜近似"><a class="markdownIt-Anchor" href="#thin-lens-approximation-薄透镜近似"></a> Thin Lens Approximation 薄透镜近似</h1><ul><li><p>真正的透镜非常复杂，需要一个简单的方法描述。</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/ac55d814-1cdc-4ddc-85d6-b370c96e2183-11709514.jpg" alt></p></li><li><p>研究对象：Ideal Thin Lens - Focal Point 理想化薄透镜</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/d2183d6f-884c-4bad-b644-e2ceffb9e0af-11709514.jpg" alt></p><ul><li><p>所有进入透镜的平行光一定过焦点。</p></li><li><p>过交点的在透镜后面一定是平行光。</p></li><li><p>认为焦距可以被随意改变（利用透镜组）。</p></li><li><p>The Thin Lens Equation 薄透镜公式（利用相似三角形推导）</p><ul><li><p>​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/0501aa85-a115-4539-a179-b924ecccfd18-11709514.jpg" alt><br><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/3c7b4ad4-9558-436e-b763-5b8dadf9bf0e-11709514.jpg" alt></p></li></ul></li></ul></li></ul><h3 id="defocus-blur"><a class="markdownIt-Anchor" href="#defocus-blur"></a> Defocus Blur</h3><ul><li><p>Computing Cicle of Confusion(CoC) Size</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/5c3c1668-a6c4-45b8-8f4f-970b78c08a24-11709514.jpg" alt></p><ul><li><p>Object 远离 Focal Plane，聚焦后的点不在 Sensor Plane 上，而是在它前面聚焦，然后光线在聚焦点继续直线传播，到 Sensor Plane 上就变成了一个圆，这个圆就是 Cicle of Confusion(CoC)。</p></li><li><p>形成原因：在一段距离内的所有物体都会被对焦，如果在这个距离之外，物体上的某个点就会在成像平面（清晰的平面）之前就聚焦，然后光线继续沿直线传播，从而在成像平面上形成一个圈，并且其它点也可能落入这个圈中，所以就变得模糊不清。</p></li><li><p>CoC 的计算公式如下，其中 A 是光圈直径，C 是 CoC 的直径。</p><ul><li>​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</li><li>可以看出：Circle of Confusion 与光圈大小成正比，所以看到的东西是否模糊与光圈的大小有关。</li><li>将上面的公式与 F-Number 联系起来就得到如下公式：</li><li>​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</li></ul></li><li><p>CoC 告诉我们，看到的图片是否模糊，取决于光圈大小，左图光圈大小 A=f/1.4，右图 A=f/22</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/5f97764e-c15a-40e0-bda2-9f4752ef3430-11709514.jpg" alt></p></li></ul></li></ul><h3 id="ray-tracing-ideal-thin-lenses"><a class="markdownIt-Anchor" href="#ray-tracing-ideal-thin-lenses"></a> Ray Tracing Ideal Thin Lenses</h3><ul><li><p>小孔成像——从相机透过一个像素连线，无景深效果</p></li><li><p>模拟薄棱镜，可以产生景深效果，具体做法：</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/dd7fc1c2-80e0-4b57-bb25-d252bafda41e-11709514.jpg" alt></p><ul><li><p>建立场景</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/27296038-35c2-40fe-bed9-9455070875fa-11709514.jpg" alt></p><ul><li>先定义 Sensor 的大小（成像平面大小），然后定义透镜的属性，即焦距和光圈的大小。</li><li>定义透镜和关注平面的距离 ​​​（物距）。</li><li>根据透镜方程计算相应的深度 ​​​（相距）。</li></ul></li><li><p>渲染</p><ul><li>对于每个在 sensor 上的像素 ​​</li><li>在 lens plane 上取样随机一点 ​​​</li><li>根据透镜的属性可以计算通过透镜的光线会打到 ​​​​</li><li>计算光线 ​​​​​​​​​​​​​​​​​​​ 的 radiance（发射的、反射的、折射的、接收的光线在每单位立体角、每单位垂直面积上的 power，同时指定了光的方向与照射到的表面所接受到的亮度。），最后记录在 ​​ 上</li></ul></li></ul></li></ul><h3 id="depth-of-field-景深"><a class="markdownIt-Anchor" href="#depth-of-field-景深"></a> Depth of Field 景深</h3><ul><li><p>光圈大小的不同会影响模糊的范围，景深就是在场景内对应的 CoC 足够小的距离范围，在这个范围内，CoC 的大小小于或等于一个像素的大小，就可以认为这一部分深度内的场景是锐利的，非模糊的。</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/8e8f339b-c3ac-47d3-a1fc-ab900c04b6fe-11709514.jpg" alt></p></li><li><p>DOF 就是 Depth of Field，指成像清晰的一段范围。要做的事情：将 ​​​​​​​ 与焦距联系起来</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/b795aa66-3cf2-40f6-a091-fa8e98562310-11709514.jpg" alt></p></li><li><p>最终可以得到以下结论（<a href="http://graphics.stanford.edu/courses/cs178/applets/dof.html">一个在线网站</a>）</p><p><img src="/2022/02/14/Lecture-19-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E6%A3%B1%E9%95%9C/9777f2e6-480a-4f9d-ba3a-5b7e017933b9-11709514.jpg" alt></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 18 高级光线传播与材质</title>
    <link href="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/"/>
    <url>/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="lecture-18-高级光线传播和材质"><a class="markdownIt-Anchor" href="#lecture-18-高级光线传播和材质"></a> Lecture 18 <a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_18.pdf">高级光线传播和材质</a></h1><hr><h1 id="复习"><a class="markdownIt-Anchor" href="#复习"></a> 复习</h1><ul><li><p>无偏（Unbiased ）——估计量的期望等于真实值的期望；有偏则相反。</p></li><li><p>一致（Consistent）——随着样本容量的增加，估计量的序列在概率上收敛于 ​​​​​​，即估计值趋近于真实值。</p></li><li><p>区别：无偏描述的有限样本关于真实值的关系；一致性描述的大数样本与真实值的关系。</p></li><li><p>渲染上的简单理解：得到的画面结果只要有一点点模糊就是有偏；虽然画面有点模糊，但是样本足够多就能最后收敛到不模糊的结果，就是一致</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/0e1d5d22-926e-448f-bae0-9f45d78f1d9d-11709514.jpg" alt></p></li></ul><h1 id="高级光线传播advanced-light-transport"><a class="markdownIt-Anchor" href="#高级光线传播advanced-light-transport"></a> 高级光线传播（Advanced Light Transport）</h1><h3 id="无偏光线传播方法unbiased-light-transport-methods"><a class="markdownIt-Anchor" href="#无偏光线传播方法unbiased-light-transport-methods"></a> 无偏光线传播方法（Unbiased light transport methods）</h3><ul><li><p>双向路径追踪 Bidirectional path tracing (BDPT)</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/3b61c87a-1998-43cb-90cd-51265b748305-11709514.jpg" alt></p><ul><li><p>基本思想：</p><ul><li>对每个像素点进行多次采样</li><li>每个采样点对应：一条视点子路径（eye path）​​​​​​​​​ 和光源子路径（light path）​​​​​​​​​​​​​​​​​ 上的顶点连接起来（连接时需要测试可见性），以快速产生很多路径</li><li>计算每一条完整路径的贡献。在场景中，没有被物体拦截的每一条路径都会影响通过像素的估计通量或平均辐射。</li></ul></li><li><p>优点：能够产生一些传统路径追踪难以采样到的光路，是特别有效的渲染场景的间接照明方法。</p></li><li><p>对比：下图中，光源向上打在了天花板，以右侧墙壁上的某一点为例（漫反射材质），如果应用普通路径追踪，从人眼（相机）发出的光线经过漫反射可能会继续打到左边墙壁上，关键在于普通路径追踪不好控制光线打到能量集中的区域；而应用 BDPT 后，从光源会产生多条光路，与右侧从人眼（相机）打出的子路径连接，就可以得到一条较高能量的光线。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/cfa2a869-1e6a-4971-827d-9b4913d319d9-11709514.jpg" alt></p></li><li><p>缺点：一个严重的效率问题——每个采样点对应的多条完整路径中的大部分完整路径的贡献可能是 0。</p></li></ul></li><li><p>Metropolis 光线传播 Metropolis light transport (MLT)</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/64b35910-c212-4720-8fb8-c3ac284a0a6c-11709514.jpg" alt></p><ul><li><p>基本思想：利用统计学上的一个工具——马尔科夫链，其本身的定义可以理解为：假设某一时刻状态转移的概率只依赖于它的前一个状态，MLT 利用该工具，就可以在已有的一条较为复杂的路径的基础上，在原本路径的周围产生更多相似的路径，因此适用于做困难的复杂的路径追踪，即增加更多有意义的路径。</p></li><li><p>优点：给定足够时间，马尔科夫链的蒙特卡洛方法可以生成以任意函数的形状为 PDF（概率密度函数，probability density function）的样本，而统计学上的一个概念——采样的 PDF 和要积分的函数形状越相似，采样误差就越低</p></li><li><p>对比：左图的场景，其复杂性在于光照只从半开的门缝中通过，场景大部分由间接光照亮；右图是 Caustics 现象（由于光线聚焦产生了一系列非常强的图案，俗称“水光”，波光粼粼），其复杂性在于这种路径为 SDS 路径——人眼（相机）发出的光线要透过水波（Specular 折射材质）并达到水底（Diffuse 漫反射材质）进行聚焦，最后聚焦到一定的线上，再透过水波（Specular 折射材质）到达光源。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/03df7821-daec-496c-be59-5811237e0dc1-11709514.jpg" alt></p></li><li><p>缺点</p><ul><li>很难从理论上判断其收敛速度（普通的路径追踪会有采样数与收敛速度的一个理论关系）</li><li>所有的操作都是局部的，因此各个像素之间互不影响，导致各个像素收敛速度不一致，图片效果会很“脏”</li><li>由于以上原因，该方法不适用于渲染动画——上一帧与下一帧各自有些像素收敛速度不同，图像抖动剧烈</li></ul></li></ul></li></ul><h3 id="有偏光线传播方法biased-light-transport-methods"><a class="markdownIt-Anchor" href="#有偏光线传播方法biased-light-transport-methods"></a> 有偏光线传播方法（Biased light transport methods）</h3><ul><li><p>光子映射（Photon mapping）</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/04ac80f7-5301-4453-9f8b-a8354f532671-11709514.jpg" alt></p><ul><li><p>特点：特别适合渲染 caustics 和 Specular-Diffuse-Specular（SDS）</p></li><li><p>实现方法（其中一种）</p><ul><li><p>Stage1——photon tracing：从光源出发辐射出光子，在路径上发生反射折射等，直到光子打到 diffuse 漫反射材质的物体上就停下，将所有光子记录在 diffuse 物体上</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/dcfa9c3b-579f-4679-9c4e-4badcfe94dff-11709514.jpg" alt></p></li><li><p>Stage2——photon collection (final gathering) ：从人眼（相机）出发，在路径上发生反射折射等，直到打到 diffuse 的物体上</p></li><li><p>Stage3——local density estimation</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/beec61df-7c54-4c0a-9007-38ab5ecda6d7-11709514.jpg" alt></p><ul><li><p>思想：这一步建立在观察的基础上，越亮的地方光子应该越密集。</p></li><li><p>具体做法：① 对于任何的一个着色点，取其周围最近的 N 个光子（Nearest Neighbor 问题，将所有光子组织成自上而下的加速结构模式如 KD-Tree 来解）；② 计算 N 个光子所占据面积，计算光子密度（N 光子数/所占面积）</p></li><li><p>分析：为何光子映射是一个有偏的方法？</p><ul><li><p>正确的计算密度的方法应该是取一个很小的面积，计算里面的光子数，再用光子数/面积，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>N</mi><mi mathvariant="normal">/</mi><mi>d</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">dN/dA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathdefault">d</span><span class="mord mathdefault">A</span></span></span></span> ​​​​​，而我们的计算方法是去确定一个 N，通过 $\Delta N/\Delta A​​​​​​​​​​​​​​​​​ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">来</mi><mi mathvariant="normal">估</mi><mi mathvariant="normal">计</mi><mi mathvariant="normal">。</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">论</mi><mi mathvariant="normal">—</mi><mi mathvariant="normal">—</mi><mi mathvariant="normal">只</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi></mrow><annotation encoding="application/x-tex">来估计。结论——只有 ​​</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">估</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">论</span><span class="mord" style="margin-right:0.02778em;">—</span><span class="mord" style="margin-right:0.02778em;">—</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">有</span><span class="mord">​</span><span class="mord">​</span></span></span></span>dA$ 无限小时结果才是正确的。如果发射的光子数越多，取一个着色点相同数量的 N 个光子，所占的面积就更小（更加集中），结果就会更准确。因此当发射的总光子数 Q 趋近于无穷时，得到的画面就是完全正确的了。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>i</mi><msub><mi>m</mi><mrow><mi>Q</mi><mo>→</mo><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msub><mi mathvariant="normal">Δ</mi><mi>A</mi><mo>=</mo><mi>d</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">lim_{Q\rightarrow+\infty}\Delta A=dA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">Q</span><span class="mrel mtight">→</span><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">Δ</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">A</span></span></span></span><br>​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/d102ed83-6157-4dcc-a29b-087aa17b28f5-11709514.jpg" alt></p></li></ul></li></ul></li></ul></li></ul></li><li><p>Vertex connection and merging (VCM)</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/c8731dc6-6bd1-4aa9-84d0-10f1dfb2f6c7-11709514.jpg" alt></p><ul><li>结合了双向路径追踪和光子映射。上图中，左边的 path ​​​​​​​​​​​​​​​ 和右边的 path ​​​​​​​​​ 的两个端点即为接近，落在一个极小的区域中，这两根光线不能连接，也不浪费这样的光线，利用光子映射把能融合的光子融合起来。</li></ul></li></ul><h3 id="对比"><a class="markdownIt-Anchor" href="#对比"></a> 对比</h3><p><a href="http://www.iliyan.com/publications/VertexMerging/comparison/">Light transport simulation with vertex connection and merging（SIGGRAPH Asia 2012）</a></p><hr><h3 id="实时辐射度算法-instant-radiosity-vpl-many-light-methods"><a class="markdownIt-Anchor" href="#实时辐射度算法-instant-radiosity-vpl-many-light-methods"></a> 实时辐射度算法 Instant radiosity (VPL / many light methods）</h3><ul><li><p>基本思想：已经被照亮的面都可以看作是一个光源，再让其来照亮其它物体</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/b5704fd0-fe51-435f-af11-6c8664d251cb-11709514.jpg" alt></p></li><li><p>做法：从第一个真正的光源开始，向四周射出多个光源子路径（light sub-paths），假设每个光源子路径的终点都是一个虚拟光源（VPL，visual point light）；用这些 VPL 再照射其他地方；当摄像机看向一个着色点的时候，就研究所有的 VPL 对该着色点的影响，这样就用直接光照的方法完成了二次弹射的效果</p></li><li><p>优点：快速并且通常对漫反射场景的结果比较好</p></li><li><p>缺点：当 VPLs 非常接近着色点的时候，会产生亮点（右图）；不能处理 glossy 的材质</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/786e7555-b8c1-49fd-a3b6-a043257309fc-11709514.jpg" alt></p></li></ul><h1 id="高级外观建模advanced-appearance-modeling"><a class="markdownIt-Anchor" href="#高级外观建模advanced-appearance-modeling"></a> 高级外观建模（Advanced Appearance Modeling）</h1><h3 id="非表面模型-non-surface-models"><a class="markdownIt-Anchor" href="#非表面模型-non-surface-models"></a> 非表面模型 Non-surface models</h3><ul><li><p>散射介质 Participating media：雾、云…当光通过散射介质时，任何一点可以(部分)被吸收和被散射（外散射、内散射等）。视线在物体里任意方向任意距离传播，在每个着点对光源进行着色。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/bb6291b4-8a4a-4f36-b9e2-81bd3414373b-11709514.jpg" alt><br><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/47179d0a-55b0-452b-a3c6-2d2fb3b23232-11709514.jpg" alt></p><ul><li><p>使用相位函数（Phase Function）来描述参与介质中任意点的光散射角分布</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/9d64210e-9b28-43a5-9403-91444694646e-11709514.jpg" alt></p></li><li><p>如何渲染</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/71ea911e-4b30-4002-b8e6-9ac10f2e4dd7-11709514.jpg" alt></p><ul><li>光线进入散射介质中，随机选择一个方向来弹射。</li><li>随机选择一个距离直行，其行进距离由该介质的吸收能力</li><li>对于每一个“着色点”，把它连接到光源。</li></ul></li></ul></li><li><p>Hair / fur / fiber (BCSDF)</p><ul><li><p>Hair Appearance 考虑光线如何与一个曲线作用而不是一个面，效果较好的一个模型 Marschner Model，该模型把头发当成玻璃圆柱，考虑了以下三种类型的光线：</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/eeb3e434-d91d-4e78-be3b-73f649edc8d7-11709514.jpg" alt></p><ul><li><p>R：直接反射的光。</p></li><li><p>TT：传进去再传出去的光。</p></li><li><p>TRT：光线进到头发里面，在头发的内壁发生一次反射再回去。（R: reflection, T: transmission 透射）</p></li><li><p>得到的效果如下</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/b7ed2d54-9a2b-4cea-a450-891ff71a7d5f-11709514.jpg" alt></p></li></ul></li><li><p>Fur Appearance：人和动物毛发都具有三层结构皮质（Cortex）、髓质（Medulla）、角质层（Cuticle），如下图所示，但动物的髓质（Medulla）比人大很多，导致不能用人的头发模型来渲染动物毛发。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/e93e0629-bf15-4267-9523-e034339aa8b3-11709514.jpg" alt></p><ul><li><p>有人就构造了另外一种模型——双层圆柱模型 Double Cylinder Model，就是将 Cortex 也描述出来。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/2a38130b-19f5-4640-bc2a-0da1e9e745c5-11709514.jpg" alt></p></li><li><p>双层圆柱模型考虑了 5 种光线：除了原来的 Marschner Model 中的 ​​​​​​​​ 三种光线外（没有穿过髓质），又添加了 ​​​​ 和 ​​​​​（​​​​​​ 传入毛发之后穿过了髓质）</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/623db9d9-de9f-49e9-ad01-082b4cdef296-11709514.jpg" alt></p></li><li><p>得到的效果如下</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/da00e757-d54e-40fe-ac81-4c452b4b1852-11709514.jpg" alt></p></li></ul></li></ul></li><li><p>颗粒材质 Granular material</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/e93ed417-491c-498c-ac3a-fd06d59d7e50-11709514.jpg" alt></p><ul><li><p>以一个沙堆城堡为例，为了避免渲染所有的颗粒，可以进行适当简化，将一个场景中整个的颗粒模型分为多个微小的单元，每个单元由不同比例的微粒来组成，最后拿去渲染。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/dd2c6601-243d-4311-a048-20cab7d1516f-11709514.jpg" alt><br><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/184fbecc-463c-44ab-acd0-4a9cbaadb41c-11709514.jpg" alt></p></li></ul></li></ul><h3 id="表面模型-surface-models"><a class="markdownIt-Anchor" href="#表面模型-surface-models"></a> 表面模型 Surface models</h3><ul><li><p>半透明材质 Translucent material (BSSRDF)</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/59f0c42c-dd88-4a61-818d-692cbc626493-11709514.jpg" alt></p><ul><li><p>反映到物理过程：光线沿一个点进入了一个表面，在表面下进行大量的散射，并从另外一个表面钻出，光线并没有在内部被吸收——这种散射方式被定义为次表面散射（Subsurface Scattering）</p></li><li><p>如何理解次表面散射？</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/b5e5164d-cbdf-4681-b68f-b544eaa8835e-11709514.jpg" alt></p><ul><li><p>直观描述：由光线从不同的点射出而不是从不同的点进入所引起的许多表面的视觉特征</p></li><li><p>数学描述：可以认为是双向反射分布函数 BRDF（Bidirectional Reflectance Distribution Function）的延申</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/a01655a3-5c85-40c8-842d-29c0694cdefb-11709514.jpg" alt></p><ul><li><p>公式上看反射方程：</p><ul><li>BRDF 的反射方程：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><msub><mi>L</mi><mi>o</mi></msub><mrow><mo fence="true">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><msub><mi>L</mi><mi>e</mi></msub><mrow><mo fence="true">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mo>+</mo><msub><mo>∫</mo><msup><mi mathvariant="normal">Ω</mi><mo>+</mo></msup></msub><msub><mi>L</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>ω</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><msub><mi>f</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><mi>p</mi><mo separator="true">,</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mi>n</mi><mo>⋅</mo><msub><mi>ω</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mi mathvariant="normal">d</mi><msub><mi>ω</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​L_{o}\left(p, \omega_{o}\right)=L_{e}\left(p, \omega_{o}\right)+\int_{\Omega^{+}} L_{i}\left(p, \omega_{i}\right) f_{r}\left(p, \omega_{i}, \omega_{o}\right)\left(n \cdot \omega_{i}\right) \mathrm{d} \omega_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1608200000000002em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13604499999999997em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Ω</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>​​​​​​​​​​​​​​​​​​​​​​</li><li>BSSDRF的反射方程：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><mo>=</mo><msub><mo>∫</mo><mi>A</mi></msub><msub><mo>∫</mo><msup><mi>H</mi><mn>2</mn></msup></msub><mi>S</mi><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>o</mi></msub><mo fence="true">)</mo></mrow><msub><mi>L</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ω</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mrow><mtext> </mtext><mi mathvariant="normal">d</mi></mrow><msub><mi>ω</mi><mi>i</mi></msub><mrow><mtext> </mtext><mi mathvariant="normal">d</mi></mrow><mi>A</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi><mi mathvariant="normal">​</mi></mrow><annotation encoding="application/x-tex">L\left(x_{o}, \omega_{o}\right)=\int_{A} \int_{H^{2}} S\left(x_{i}, \omega_{i}, x_{o}, \omega_{o}\right) L_{i}\left(x_{i}, \omega_{i}\right) \cos \theta_{i} \mathrm{~d} \omega_{i} \mathrm{~d} A​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1608200000000002em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.12251099999999993em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16659999999999997em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mspace nobreak"> </span><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mspace nobreak"> </span><span class="mord mathrm">d</span></span><span class="mord mathdefault">A</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span><span class="mord">​</span></span></span></span>​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​</li><li>BRDF 规定了：光线达到了该点，并从该点出来向各个不同的方向去，所有的所用都发生在了一个点上，在渲染方程中积分区域为所有方向为正的方向（大小为半球的立体角）</li><li>BSSRDF 规定了：光线从哪个点进来，从哪个方向进来，从哪个点出去，从哪个方向出去，在渲染方程中为二重积分，积分区域为整个立体角（原因：某个入射点 ​​​ 可能有从其它点进入介质的光线从 ​​​ 射出）和面积（原因：所有的作用不再是一个点，而是一个面）</li></ul></li></ul></li><li><p>近似方法——<a href="https://graphics.stanford.edu/papers/bssrdf/bssrdf.pdf">Dipole Approximation 方法</a></p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/2fc2148d-c9a4-4e15-86d9-8b2f906ee29d-11709514.jpg" alt></p><ul><li><p>由于计算量过大，可以将次表面散射最终的效果看作是——光实际从左上角照射过来，次表面散射就好像表面内部有一个光源，表面上方也有一个光源的结果（为了物理上的真实），然后用这两个光源去照亮着色点这一块儿得到的效果。举个 🌰：手机灯光透过手掌</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/af8d6a30-4e25-4fb6-8b28-3723792c79a8-11709514.jpg" alt></p></li></ul></li></ul></li><li><p>一个有趣的网站：<a href="https://cgelves.com/10-most-realistic-human-3d-models-that-will-wow-you/?v=7516fd43adaa">10 Most Realistic Human 3D Models that will WOW You - CG Elves</a></p></li></ul></li><li><p>布料 Cloth</p><ul><li><p>概述</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/6d79f23e-f16a-4e81-a2ca-49d7a76a8e5e-11709514.jpg" alt></p><ul><li>布料是一系列缠绕的纤维构成的。</li><li>缠绕有两级：纤维（Fiber）第一次缠绕会成为股（Ply），股（Ply）缠绕会成为线（Yarn）</li></ul></li><li><p>渲染布料的三种方式</p><ul><li><p>把布料当作表面来渲染——给定编制图案，计算其总体表现；使用 BRDF 来渲染；但是对于天鹅绒，其纤维向各个方向进行分布，因此用手去滑过天鹅绒就会发现表面发生变化，所以根本不是一个平面，当作表面来渲染并不合理。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/b912ea58-7f6e-464d-89a2-6017af6fa7fe-11709514.jpg" alt><br><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/b4ef5611-c547-454c-b84e-e8ec8b2d9921-11709514.jpg" alt></p></li><li><p>把布料当作散射介质（空间中分布的体积）来渲染——把单个纤维和它们分布的性质转化为散射参数，然后把它们当作散射介质来渲染，就好像在渲染云、雾一样（计算量 ​​​​​​​​)</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/2f8b5bcf-05ae-4cfc-9cf4-006e9a099ec3-11709514.jpg" alt></p></li><li><p>把布料当作真实的纤维来渲染——即明确的渲染每一根纤维（最暴力的做法）</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/7cd9bb84-9f44-4cd6-bebb-18eb094558c5-11709514.jpg" alt></p></li></ul></li></ul></li><li><p>Detailed material (non-statistical BRDF)</p><ul><li><p>背景：渲染出来的太过“完美”，而真实的世界中充满着各种各样的细节，而细节很难通过渲染表现出来。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/00c8100e-bcb1-4039-b580-cc6786dce8c1-11709514.jpg" alt></p></li><li><p>重提微表面模型——最重要的是其法线分布，而我们描述分布时通常运用的是简单的分布函数，如正态分布、高斯等，自然得到的结果没有太多细节</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/168872e9-9829-489b-9ab4-f64be0498cbc-11709514.jpg" alt></p><ul><li><p>Statistical NDF vs. Actual NDF</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/1043efbe-72eb-408b-ab1e-7823c6b3ba0e-11709514.jpg" alt></p></li><li><p>实际效果对比：左图是细节的法线贴图得到的结果，右图是原始的采样 2h 得到，按照 996 工作制大约 20 天才能得到想要的结果</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/146e5cc4-bd7e-464c-a43a-67dcab7bf03c-11709514.jpg" alt></p></li><li><p>渲染如此困难的原因在于：认为每一个小的微表面是一个镜面，通过从光源的不断反射，只有非常少的一部分会被反射到相机</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/e53cdb4c-1ce9-4f66-a252-bc297f8c8430-11709514.jpg" alt></p></li><li><p>解决方法</p><ul><li><p>将一个小的范围内的微表面拿出来，计算其法线分布然后替换光滑的法线分布，用在微表面模型里。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/96469551-4c38-4183-b975-a1441affa98d-11709514.jpg" alt></p></li><li><p>一个像素可以覆盖不同大小的微表面，对于比较大的范围会得到统计学规律，而对于比较小的微表面得到的就比较有特点。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/4f6c4d6d-98fc-4218-bc8f-b6b443d3380d-11709514.jpg" alt></p></li><li><p>不同类型的法线贴图会得到不同的法线分布。左上：各向同性法线；右上：各向异性法线；左下：离散的亮片；右下：纹路类型法线</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/3f6c0422-5476-42cc-87d8-f3f369a739cc-11709514.jpg" alt></p></li><li><p>效果</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/2d0770b9-b04c-4cac-b808-e1ab3a5b6833-11709514.jpg" alt><br><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/e92442c6-d0bd-4d2f-81d2-fb21ea2ce62c-11709514.jpg" alt></p></li></ul></li></ul></li><li><p>深入探索</p><ul><li><p>有趣的是，事情还没有结束，当我们考虑细节的时候，如果一个物体表面的大小极小，小到和光的波长相当的时候，就不能再用几何学来计算了，此时光不再沿直线传播。举个 🌰：</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/76d450de-1574-4a24-9bf1-0546bd747194-11709514.jpg" alt></p></li><li><p>波动光学下的法线分布，可以发现：波动光学的 BRDF 与几何相似，但是相对而言比较不连续，原因在于光的干涉效应，使得有些地方接收不到光子，有些地方持续接收光子，可以联想物理上的双缝干涉实验来理解。</p><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/170cf257-6e25-41d2-996d-384586f639dc-11709514.jpg" alt></p></li></ul></li></ul></li></ul><h3 id="程序化生成外观-procedural-appearance"><a class="markdownIt-Anchor" href="#程序化生成外观-procedural-appearance"></a> 程序化生成外观 Procedural appearance</h3><p><img src="/2022/02/12/Lecture-18-%E9%AB%98%E7%BA%A7%E5%85%89%E7%BA%BF%E4%BC%A0%E6%92%AD%E4%B8%8E%E6%9D%90%E8%B4%A8/e06f6671-6469-4295-96f0-b2ac05e38bf7-11709514.jpg" alt></p><ul><li>背景：一个模型的外观通过纹理定义，模型内部并不存在纹理细节。</li><li>3D noise（噪声函数） 可以直接通过噪声函数来计算细节，即每次通过模型的一点，来查询该点所对应的纹理，使用这种方法可以看到被切割或断裂的内部纹理，相当于——这个纹理贴图已经不再是 2D，而是 3D。</li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 17 材质（微平面理论，Cook-Torrance BRDF）</title>
    <link href="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/"/>
    <url>/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="前置知识光线追踪中的反射-折射"><a class="markdownIt-Anchor" href="#前置知识光线追踪中的反射-折射"></a> 前置知识：光线追踪中的反射、折射</h1><h2 id="镜面反射"><a class="markdownIt-Anchor" href="#镜面反射"></a> 镜面反射</h2><p>镜面反射光线的计算较为简单，公式如下：<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022160952.png" alt></p><h2 id="折射"><a class="markdownIt-Anchor" href="#折射"></a> 折射</h2><p>折射光线的计算公式推导：<a href="https://dreamfields.github.io/2021/08/06/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/#%E6%8A%98%E5%B0%84%E5%85%89%E7%BA%BF%E7%9A%84%E8%AE%A1%E7%AE%97">折射光线的计算</a></p><h4 id="菲涅耳反射fresnel-reflection"><a class="markdownIt-Anchor" href="#菲涅耳反射fresnel-reflection"></a> 菲涅耳反射(Fresnel Reflection)</h4><p>观察折射现象的几何描述：<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022161858.png" alt></p><p>如果从一个折射率大的空间折射如一个折射率小的空间，折射角度会增大，且有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>η</mi><mi>i</mi></msub><mi mathvariant="normal">/</mi><msub><mi>η</mi><mi>t</mi></msub><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\eta_i / \eta_t&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，只要入射角度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\theta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>足够大，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1-(\cos \theta_i)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 就会接近 1，那么此时根号里的数便会小于 0，而这也就意味着，此时没有折射项，光线全部反射。</p><ul><li>菲涅尔项反映了光线有多少发生反射，有多少发生折射</li></ul><p><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/3117aae5-18c9-4c31-82e9-3f39d06cbfa2-11709514.jpg" alt><br>现象举例：垂直观察玻璃，你很容易看清玻璃外的东西(折射而来)，如果你视线玻璃近乎平行，此时你看到的大部分会是你自己(反射得到)，且视线越与玻璃平行，即与法线夹角越大，你的人像越加清晰，这种现象，就可以用菲涅尔反射来进行解释。</p><p><strong>对于绝缘体</strong>：看图上的实心红线，观察角度与法线夹角越大（与观察平面越平行），反射的程度就越大，如玻璃。看图上的虚线，表示光线的极化现象（由于光的波动性），两个方向极化性的平均就是红心实线。</p><p><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/c243f9f5-911c-473c-83ed-a65dce7fff0a-11709514.jpg" alt></p><p><strong>对于导体</strong>：观察角度很小时也有很大的反射率，如铜镜。</p><p><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/88bbb316-7d73-4174-880f-9d47601e99d8-11709514.jpg" alt></p><p>那么对于绝缘体和导体，如下公式可以精确计算反射率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>e</mi><mi>f</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{eff}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>：<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022163345.png" alt></p><p>但计算过于复杂，就有了一个近似公式，Schlick Approximation：<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022163532.png" alt></p><p>认为曲线就是从 R0(由入射材质的折射系数和出射材质的折射系数决定) 开始，随着入射角的变化近似得到反射率，在 RayTacing In One Weekend 中有涉及：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">reflectance</span><span class="hljs-params">(<span class="hljs-keyword">double</span> cosine, <span class="hljs-keyword">double</span> refraction_idx)</span> </span>&#123;<br>    <span class="hljs-comment">// Use Schlick&#x27;s approximation for reflectance.</span><br>    <span class="hljs-keyword">auto</span> r0 = (<span class="hljs-number">1</span> - refraction_idx) / (<span class="hljs-number">1</span> + refraction_idx);<br>    r0 = r0 * r0;<br>    <span class="hljs-comment">// return r0 + (1 - r0) * pow((1 - cosine), 5);</span><br>    <span class="hljs-comment">// 用三次乘法计算五次方</span><br>    <span class="hljs-keyword">auto</span> x1 = <span class="hljs-number">1</span> - cosine;<br>    <span class="hljs-keyword">auto</span> x2 = x1 * x1;<br>    <span class="hljs-keyword">auto</span> x5 = x2 * x2 * x1;<br>    <span class="hljs-keyword">return</span> r0 + (<span class="hljs-number">1</span> - r0) * x5;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="微平面理论"><a class="markdownIt-Anchor" href="#微平面理论"></a> 微平面理论</h1><p>微平面理论(Microfacets Theory)顾名思义，就是从微观的角度去分析，其认为任意物体的表面在到达微观的尺度之后，都是由许许多多的更小的镜面所组成的。<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022160651.png" alt><br>当这些微小的镜面的法线方向较为集中一致的时候，从宏观角度来看，物体的镜面反射会比较明显，反之，当这些微小镜面的法线方向较为杂乱，分布均匀的时候，物体表面则会相对粗糙。</p><p>但对于此，我们仅仅解释了微观角度的镜面反射现象，另外一个比较重要的部分则是漫反射。</p><p>对于微观尺度的漫反射可以作如下解释，当光线照射到物体表面时，一部分光线会与表面的许许多多的微小镜面发生镜面反射，另一部分光线则会折射进入物体内部，如下图：<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022154919.png" alt></p><p>当光线折射进入内部的时候会与物体的微小粒子不断发生碰撞并散射到随机方向，同时在碰撞的过程中一部分光线的能量会被吸收转换为热能，有些光线在多次碰撞之后能量消耗殆尽，则表示该光线完全被物体吸收。还有一部分折射到物体内部的光线会因为散射方向的随机性重新离开表面，而这部分光线就形成了漫反射。 (tips:光线折射进入物体内部之后再被散射出来，离开表面的点可能并不是进入表面的点，但这里并不考虑这种情形，次表面散射(Subsurface Scattering)技术则将这种现象考虑了进去。)</p><p>BRDF基于我们之前所探讨过的微平面理论来近似的求得材质的反射与折射属性。对于一个BRDF，为了实现物理学上的可信度，它必须遵守能量守恒定律，也就是说反射光线的总和永远不能超过入射光线的总量。严格上来说，同样采用ωi和ωo作为输入参数的 Blinn-Phong光照模型也被认为是一个BRDF。然而由于Blinn-Phong模型并没有遵循能量守恒定律，因此它不被认为是基于物理的渲染。</p><p>现在已经有很好几种BRDF都能近似的得出物体表面对于光的反应，但是几乎所有实时渲染管线使用的都是一种被称为Cook-Torrance BRDF模型。</p><p>Cook-Torrance模型作为图形学中最早的基于物理的BRDF模型，由Cook和Torrance提出，是Torrance-Sparrow模型的一个应用版本。现今，Cook-Torrance模型已经成为基于物理着色的标准模型之一。Cook-Torrance模型将物理学中的菲涅尔反射引入了图形学，实现了比较逼真的效果。</p><p><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022155445.png" alt><br>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mi>d</mi></msub><mo separator="true">,</mo><msub><mi>K</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">K_d,K_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别指<strong>入射光线中被折射部分的能量所占的比率</strong>与<strong>被反射部分的比率(一般由菲涅尔项决定)</strong>，而 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>l</mi><mi>a</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>r</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{lambert}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指漫反射的 BRDF，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>c</mi><mi>o</mi><mi>o</mi><mi>k</mi><mo>−</mo><mi>t</mi><mi>o</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{cook-torrance}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>指镜面反射的 BRDF。两部分结合得到最终的 BRDF。</p><p><strong>但请注意</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>c</mi><mi>o</mi><mi>o</mi><mi>k</mi><mo>−</mo><mi>t</mi><mi>o</mi><mi>r</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{cook-torrance}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>已经采用了微表面模型，就不能在与宏观表面模型Diffuse的假设一同采用，同样在物理上也是错误的，能量不能保证守恒，可能会出现发光的BRDF的情况。由于不同角度、不同粗糙度损失的能量是完全不同的，因此直接加一个Diffuse是完全错误的。而由于可以近似一些效果，因此仍然使用。</p><h1 id="cook-torrance-brdf-推导"><a class="markdownIt-Anchor" href="#cook-torrance-brdf-推导"></a> Cook-Torrance BRDF 推导</h1><p>关键：<strong>Material == BRDF</strong>，以下讨论皆为Cook-Torrance BRDF。</p><h2 id="漫反射材质的brdf"><a class="markdownIt-Anchor" href="#漫反射材质的brdf"></a> 漫反射材质的BRDF</h2><p>漫反射会均匀的向每个方向反射，因此，漫反射的 BRDF 一定是一个常数。<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022120922.png" alt><br>由于能量守恒，入射的 radiance=出射的 radiance，两边的 Lo、Li 约去，得到漫反射的 BRDF 为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>π</mi></mrow><annotation encoding="application/x-tex">1/\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span>。</p><p>现在引入一个“反射率 albedo”的量，可以类比光栅化当中的漫反射系数去理解，本质就是一个 3 维向量，含有物体表面的颜色信息，这样的话就可以引入不同颜色的 BRDF。</p><p>因此：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>l</mi><mi>a</mi><mi>m</mi><mi>b</mi><mi>e</mi><mi>r</mi><mi>t</mi></mrow></msub><mo>=</mo><mi>ρ</mi><mi mathvariant="normal">/</mi><mi>π</mi></mrow><annotation encoding="application/x-tex">f_{lambert} = \rho/\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ρ</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span></span></p><p>Tips：Lambertian漫反射和我们之前经常使用的漫反射到底有什么关系？之前我们是用表面法向量与光照方向向量进行点乘，然后再将结果与平面颜色相乘得到漫反射参数。点乘依然还在，但是却不在BRDF之内，而是转变成为了Lo积分末公式末尾处的n⋅ωi 。</p><h2 id="镜面反射与折射材质的brdf"><a class="markdownIt-Anchor" href="#镜面反射与折射材质的brdf"></a> 镜面反射与折射材质的BRDF</h2><p>BRDF的镜面反射部分要稍微更高级一些，它的形式如下所示：<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022165042.png" alt></p><p>在图中看得更加明显：<br><img src="/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/20221022165419.png" alt></p><p>Cook-Torrance BRDF的镜面反射部分包含三个函数，此外分母部分还有一个标准化因子 。字母D，F与G分别代表着一种类型的函数，各个函数分别用来近似的计算出表面反射特性的一个特定部分。三个函数分别为法线分布函数(Normal Distribution Function)，菲涅尔方程(Fresnel Rquation)和几何函数(Geometry Function)：</p><ul><li>D 法线分布函数：估算在受到表面粗糙度的影响下，取向方向与中间向量(half vector)一致的微平面的数量。这是用来估算微平面的主要函数。</li><li>G 几何函数：描述了微平面自成阴影的属性。当一个平面相对比较粗糙的时候，平面表面上的微平面有可能挡住其他的微平面从而减少表面所反射的光线（grassing。</li><li>F 菲涅尔方程：菲涅尔方程描述的是在不同的表面角下表面所反射的光线所占的比率。<br>以上的每一种函数都是用来估算相应的物理参数的，而且你会发现用来实现相应物理机制的每种函数都有不止一种形式。</li></ul><p>具体的推导见文末的第一篇笔记参考：<a href="https://zhuanlan.zhihu.com/p/152226698">Lecture 17：微平面理论(Cook-Torrance BRDF 推导)</a></p><p>Tips：BSDF 是一个统称，表示散射（包括 BRDF 反射和 BTDF 折射）</p><h1 id="笔记参考"><a class="markdownIt-Anchor" href="#笔记参考"></a> 笔记参考</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/152226698">Lecture 17：微平面理论(Cook-Torrance BRDF 推导)</a></li><li><a href="https://learnopengl-cn.github.io/07%20PBR/01%20Theory/#_4">LearnOpenGL：Physically Based Rendering</a></li><li>Cook-Torrance BRDF的Siggraph论文： <a href="https://dl.acm.org/doi/pdf/10.1145/965161.806819">A Reflectance Model for Computer Graphics</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 14-16 基于物理的渲染(辐射度量学，BRDF，路径追踪)</title>
    <link href="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/"/>
    <url>/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/</url>
    
    <content type="html"><![CDATA[<h1 id="辐射度量学"><a class="markdownIt-Anchor" href="#辐射度量学"></a> 辐射度量学</h1><blockquote><p>由于辐射通量和光通量的关系，以下的辐射相关概念的定义可以直接移植到图形学中对于光线相关概念的定义</p></blockquote><h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2><h3 id="辐射通量功率-radiant-flux-power"><a class="markdownIt-Anchor" href="#辐射通量功率-radiant-flux-power"></a> 辐射通量/功率 (Radiant Flux / Power)</h3><ul><li>辐射度量学中的辐射通量：指单位时间内通过表面或者空间区域的能量的总量，单位瓦特（Watts），或者焦耳/秒（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>J</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">J/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span>），用符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">\Phi_{e}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示，定义<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mi>e</mi></msub><mo>=</mo><mi mathvariant="normal">d</mi><mi>Q</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">d</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">\Phi_{e} = \mathrm{d}Q/ \mathrm{d}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">Q</span><span class="mord">/</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">t</span></span></span></span>。</li><li><strong>光源</strong>发出的所有功率中，能被人眼感知的那部分功率被称为光通量（luminous flux）单位流明（lumen，符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">lm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">m</span></span></span></span>），用符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">\Phi_{v}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示，光通量可用来衡量灯具发光的能力。</li><li>人眼对不同波长的光的灵敏度不同，根据辐射对国际照明委员会（CIE）标准光度观察者的作用，可从辐射通量导出光通量：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Φ</mi><mi mathvariant="normal">v</mi></msub><mo>=</mo><msub><mi>K</mi><mi>m</mi></msub><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant="normal">∞</mi></msubsup><mfrac><mrow><mi mathvariant="normal">d</mi><msub><mi mathvariant="normal">Φ</mi><mi mathvariant="normal">e</mi></msub><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">d</mi><mi>λ</mi></mrow></mfrac><mi>V</mi><mo stretchy="false">(</mo><mi>λ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>λ</mi></mrow><annotation encoding="application/x-tex">\Phi_{\mathrm{v}}=K_{m} \int_{0}^{\infty} \frac{\mathrm{d} \Phi_{\mathrm{e}}(\lambda)}{\mathrm{d} \lambda} V(\lambda) \mathrm{d} \lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">v</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.33895em;vertical-align:-0.9119499999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">λ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">e</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathdefault">λ</span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">λ</span></span></span></span></span></p><h3 id="辐射强度radiant-intensity"><a class="markdownIt-Anchor" href="#辐射强度radiant-intensity"></a> 辐射强度(Radiant intensity)</h3><ul><li><p>辐射度量学中的辐射强度：在给定方向上单位立体角内的辐射通量，符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>，单位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">W/sr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>。其大小不会随着 r 的增加而衰减，因为 r 变大的同时，立体角不变，辐射面积会以 r 平方的比例增加。</p></li><li><p>相应地，发光强度（luminous intensity）是从光源发出的给定方向上单位立体角上的光通量，单位坎德拉（candela，符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">cd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span></span></span></span> ），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi>c</mi><mi>d</mi><mo>=</mo><mn>1</mn><mi>l</mi><mi>m</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">1 cd = 1lm/sr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/bee9f66a-a901-4a99-b9ce-1638c030985b-11709514.jpg" alt></p></li></ul><h3 id="辐射照度irradiance"><a class="markdownIt-Anchor" href="#辐射照度irradiance"></a> 辐射照度(irradiance)</h3><ul><li><p>辐射度量学中的辐射照度：是入射到表面一点处单位面积上的辐射通量，符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>，单位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mi mathvariant="normal">/</mi><msup><mi>m</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">W/m^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>相应地，光照度（illuminance）是入射到表面一点处单位面积上的光通量，单位勒克斯（lux，符号<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">lx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">x</span></span></span></span>），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi>l</mi><mi>x</mi><mo>=</mo><mn>1</mn><mi>l</mi><mi>m</mi><mi mathvariant="normal">/</mi><msup><mi>m</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1lx = 1 lm/m^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/7be45c81-184e-45d9-b30e-f232bfe564e4-11709514.jpg" alt></p></li></ul><h3 id="辐射亮度radiance"><a class="markdownIt-Anchor" href="#辐射亮度radiance"></a> 辐射亮度(radiance)</h3><ul><li><p>辐射度量学中的辐射亮度：是辐射源在给定方向的单位投影面积在单位立体角内的辐射通量，符号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>，单位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>s</mi><mi>r</mi><mo>⋅</mo><msup><mi>m</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W/(sr \cdot m^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li><li><p>相应地，光亮度（luminance）是发射的、反射的、折射的、接收的光线在每单位立体角、每单位垂直面积上的 光通量。单位尼特（nit），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi>n</mi><mi>i</mi><mi>t</mi><mo>=</mo><mn>1</mn><mi>c</mi><mi>d</mi><mi mathvariant="normal">/</mi><msup><mi>m</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn><mi>l</mi><mi>x</mi><mi mathvariant="normal">/</mi><mi>s</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">1nit = 1 cd/m^2 = 1 lx/sr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">x</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>。<strong>光亮度可用来衡量光源的亮度</strong>。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/14e4b53a-59e9-47f6-9787-d005ad130dc9-11709514.jpg" alt></p></li></ul><h2 id="辨析"><a class="markdownIt-Anchor" href="#辨析"></a> 辨析</h2><ul><li><p>由公式可以看出，radiance 可认为是：每单位立体角上的 irradiance；每单位投影面积上的 intensity。</p></li><li><p>radiance 可以分为入射的和出射的</p><ul><li><p>入射 radiance：每单位立体角上的接收的 irradiance</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/14c77d6a-bc94-4767-899b-a4f51f603727-11709514.jpg" alt></p></li><li><p>出射 radiance：每单位投影面积发射的 intensity</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/f4fb15f9-3c35-4094-89be-51867b54cff4-11709514.jpg" alt></p></li></ul></li><li><p>讨论比较重要的 radiance 和 irradiance 的关联</p><ul><li><p>整理</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/9911c752-ea4f-449e-bfab-78178e42d848-11709514.jpg" alt></p></li><li><p>E ( p ) 就是点 p 的 irradiance，其物理含义是点 p 上每单位照射面积的 power，而 L (p,ω)指入射光每立体角，每垂直面积的 power。因此积分式子右边的 cosθ 解释了面积上定义的差异，而对 dω 积分，则是相当于对所有不同角度的入射光线做一个求和（这里的 H 平方是指的点 p 对应的整个半球面方向），那么该积分式子的物理含义便是：一个点(微分面积元)所接收到的亮度（irradiance)，由所有不同方向的入射光线亮度(radiance)共同贡献得到。</p></li></ul></li></ul><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221021204201.png" alt><br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221021204541.png" alt><br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221223165002.png" alt></p><h1 id="brdfbidirectional-reflectance-distribution-function"><a class="markdownIt-Anchor" href="#brdfbidirectional-reflectance-distribution-function"></a> BRDF（Bidirectional Reflectance Distribution Function）</h1><h2 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h2><p><strong>BEDF 双向反射分布函数</strong>，定义了物体表面某一点处接受来自方向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>入射的irradiance的微分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{d}E_i(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 向方向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">w_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>反射radiance的微分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>L</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>r</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{d}L_r(w_r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的比例关系。<br>换句话说，就是定义了<strong>从单位面积上，吸收了某个方向的入射光线后，向某个方向射出的光线的比例</strong>。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/5c3b82bd-4e2f-4b79-9a9a-06fc28c486eb-11709514.jpg" alt></p><h2 id="参数解释"><a class="markdownIt-Anchor" href="#参数解释"></a> 参数解释</h2><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>L</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>r</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{d}L_r(w_r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：特指从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向过来的贡献，经过表面反射到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">w_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向的反射光的radiance</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>r</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_r(w_r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：来自于表面上半球所有方向的入射光线的贡献，经过表面反射到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">w_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向的反射光的radiance</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_i(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：某点p处的单位面积，接收到的从表面上半球所有方向的入射光线的irradiance</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{d}E_i(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：某点p处的单位面积，接收到的从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向的入射光线的irradiance</li><li>BRDF单位是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>s</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">1/sr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，1/立体角度</li></ul><h2 id="理解"><a class="markdownIt-Anchor" href="#理解"></a> 理解</h2><p>光线反射的理解角度来看：一个点(微分面积元)在接受到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向上的亮度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{d}E_i(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>之后，再向不同方向把能量辐射出去<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>L</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>r</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{d}L_r(w_r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>不同物体表面材质自然会把一定方向上的入射亮度反射到不同的方向的光线上，如理想光滑表面会把入射光线完全反射到镜面反射方向，其它方向则完全没有。如理想粗糙表面会把入射光线均匀的反射到所有方向。因此所谓 BRDF 就是描述这样一个从不同方向入射之后，反射光线分布情况的函数。</p><h2 id="性质"><a class="markdownIt-Anchor" href="#性质"></a> 性质</h2><ul><li><p>非负性。线性：表面上某一点的全部反射辐射度可以简单地表示为各 BRDF 反射辐射度之和。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/1ae5d3d2-febe-4957-99c0-879e0f810411-11709514.jpg" alt></p></li><li><p>可逆性：交换入射光和反射光的角色，并不会改变 BRDF 的值。能量守恒：入射光的能量与出射光的总能量应该相等。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/10c6a83f-98c9-4905-9b4d-2c8de8d8f077-11709514.jpg" alt></p></li><li><p>各向同性与各向异性。如果是前者，其结果只与相对的方位角有关</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/4563ba9e-4f72-4449-93ab-4aaac53e6046-11709514.jpg" alt></p></li><li><p>Measuring BRDFs</p></li></ul><h1 id="渲染方程rendering-equation"><a class="markdownIt-Anchor" href="#渲染方程rendering-equation"></a> 渲染方程（Rendering Equation）</h1><h2 id="推导"><a class="markdownIt-Anchor" href="#推导"></a> 推导</h2><p>首先考虑来自方向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的入射光的radiance，由定义可得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi mathvariant="normal">d</mi><mi mathvariant="normal">Φ</mi></mrow><mrow><mi mathvariant="normal">d</mi><msub><mi>ω</mi><mi>i</mi></msub><mi mathvariant="normal">d</mi><msup><mi>A</mi><mo>⊥</mo></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">d</mi><mi mathvariant="normal">Φ</mi></mrow><mrow><mi mathvariant="normal">d</mi><msub><mi>ω</mi><mi>i</mi></msub><mi mathvariant="normal">d</mi><mi>A</mi><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">d</mi><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">d</mi><msub><mi>ω</mi><mi>i</mi></msub><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">L_{i}(w_i)=\frac{\mathrm{d} \Phi}{\mathrm{d} \omega_{i} \mathrm{d} A^{\perp}}=\frac{\mathrm{d} \Phi}{\mathrm{d} \omega_{i} \mathrm{d} A \cos \theta_{i}}=\frac{\mathrm{d} E_i(w_i)}{\mathrm{d} \omega_{i} \cos \theta_{i}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⊥</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>则某点p处的单位面积，接收到的从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向的入射光线的irradiance的微分：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>L</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><msub><mi>ω</mi><mi>i</mi></msub><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{d} E_i(w_i)= L_{i}(w_i) \mathrm{d} \omega_{i} \cos \theta_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>将BRDF代入，可以得到某点p，从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向过来的贡献，经过表面反射到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">w_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向的反射光的radiance：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">d</mi><msub><mi>L</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>r</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo>→</mo><msub><mi>ω</mi><mi>r</mi></msub><mo fence="true">)</mo></mrow><mo>⋅</mo><mi mathvariant="normal">d</mi><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo>→</mo><msub><mi>ω</mi><mi>r</mi></msub><mo fence="true">)</mo></mrow><mo>⋅</mo><msub><mi>L</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><msub><mi>ω</mi><mi>i</mi></msub><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{d}L_{r}(w_r) = f_{r}\left(\omega_{i} \rightarrow \omega_{r}\right) \cdot \mathrm{d} E_i(w_i)=f_{r}\left(\omega_{i} \rightarrow \omega_{r}\right) \cdot L_{i}(w_i) \mathrm{d} \omega_{i} \cos \theta_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>来自于表面上半球所有方向的入射光线的贡献，经过表面反射到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">w_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>方向的反射光的radiance，将上式对半球所有方向的光线进行积分：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>r</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∫</mo><msup><mi>H</mi><mn>2</mn></msup></msub><msub><mi>f</mi><mi>r</mi></msub><mrow><mo fence="true">(</mo><msub><mi>ω</mi><mi>i</mi></msub><mo>→</mo><msub><mi>ω</mi><mi>r</mi></msub><mo fence="true">)</mo></mrow><mo>⋅</mo><msub><mi>L</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>cos</mi><mo>⁡</mo><msub><mi>θ</mi><mi>i</mi></msub><mi mathvariant="normal">d</mi><msub><mi>ω</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">L_{r}(w_r) = \int_{H^2}f_{r}\left(\omega_{i} \rightarrow \omega_{r}\right) \cdot L_{i}(w_i)  \cos \theta_{i} \mathrm{d} \omega_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.27195em;vertical-align:-0.9119499999999999em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.38952999999999993em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>于是得到的就是反射方程，也可以叫做渲染方程。</p><h2 id="理解-2"><a class="markdownIt-Anchor" href="#理解-2"></a> 理解</h2><ul><li><p>由 BRDF 得到反射方程，描述的含义是：某个方向的反射光线的radiance，取决于从该点对应的半球面的所有方向（立体角）吸收的亮度 radiance。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/c717f6bc-0008-425c-98d7-08fe187503e0-11709514.jpg" alt></p></li><li><p>当然实际情况中可能不会考虑整个半球面方向的入射光线，如只有若干个点光源或面光源，则只把光源进行求和或积分（此时暂时不考虑非光源的光线，如其他反射光等）即可。</p></li></ul><h1 id="蒙特卡洛路径追踪"><a class="markdownIt-Anchor" href="#蒙特卡洛路径追踪"></a> 蒙特卡洛路径追踪</h1><h2 id="whitted-style-光线追踪的问题"><a class="markdownIt-Anchor" href="#whitted-style-光线追踪的问题"></a> (Whitted-Style) 光线追踪的问题</h2><ul><li><p>1.在磨砂材质上的表现不应该像镜面反射一样</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/43fcb693-bee4-4700-aa00-c01f8edfcfca-11709514.jpg" alt></p></li><li><p>2.对于漫反射材质之间不应该停止，而是要继续反射光线，左图是直接光照，右图是全局光照（出现了 color bleeding 现象）。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/432fb941-5c7a-40ab-8950-01589225bf6c-11709514.jpg" alt></p></li></ul><h2 id="路径追踪"><a class="markdownIt-Anchor" href="#路径追踪"></a> 路径追踪</h2><p>路径追踪（Path Tracing）方法由 Kajiya 在 1986 年提出，该方法的基本思想是从视点发出一条光线，光线与物体表面相交时根据表面的材质属性继续采样一个方向，发出另一条光线，如此迭代，直到光线打到光源上（或逃逸出场景），然后用蒙特卡洛方法，计算光线的贡献，作为像素的颜色值。而使用蒙特卡洛方法对积分的求解是无偏的，只要时间足够长，最终图像能收敛到一个正确的结果。</p><p>总结：路径追踪 = 光线追踪+ 蒙特卡洛方法</p><p>对于其正确性的证明参考：<a href="https://zhuanlan.zhihu.com/p/146144853">蒙特卡洛积分</a></p><h3 id="实现过程"><a class="markdownIt-Anchor" href="#实现过程"></a> 实现过程</h3><p>对于渲染方程：<br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022104003.png" alt></p><p>要解出来需要解决两个问题：</p><ol><li>如何计算积分</li><li>如何递归</li></ol><h4 id="stpe1-首先只考虑直接光照"><a class="markdownIt-Anchor" href="#stpe1-首先只考虑直接光照"></a> <strong>Stpe1 首先只考虑直接光照</strong></h4><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022104344.png" alt><br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022104405.png" alt></p><p>只有当采样的方向击中光源的时候，光源才会对该着色点有贡献，此时方程其实就只是一个单纯的积分计算了，其物理含义为着色点 p 到摄像机或人眼的 Radiance 值。</p><p>根据蒙特卡洛方法，积分项可以写成如下形式：<br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022104714.png" alt></p><p>公式中的分母可以这样理解：1/n是被累加面积的小矩形的底边长，被积函数是小矩形的高度，而由于在这里我们是按照概率密度pdf(x)去选择小矩形的位置的，这就导致pdf(x)较大的地方的小矩形会被重复地采集到。为了去掉这些重复的面积，我们需要添加一项1/pdf(x)来平均一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">shade(p, wo)<br>  <span class="hljs-comment"># 选定一个被积分变量的采样分布，随机选取N条光线</span><br>  Randomly choose N directions wi~pdf<br>  <span class="hljs-comment"># 初始化出射光线Lo</span><br>  Lo = 0.0<br>  <span class="hljs-comment"># 对于每个采样的立体角wi</span><br>  For each wi<br>    <span class="hljs-comment"># 追踪入射光线，打到光源即计算积分</span><br>    Trace a ray r(p, wi)<br>    <span class="hljs-comment"># 每条打在光源上的光线都取平均（1/N）</span><br>    If ray r hit the light<br>      Lo += (1 / N) * L_i * f_r * cosine / pdf(wi)<br>Return Lo<br></code></pre></td></tr></table></figure><h4 id="stpe2-加上间接光照后"><a class="markdownIt-Anchor" href="#stpe2-加上间接光照后"></a> <strong>Stpe2 加上间接光照后</strong></h4><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022105426.png" alt></p><p>此时采样的光线碰撞到了另一个物体的 Q 点，那么该条路径对着色点 P 的贡献是多少呢？自然是在点 Q 的直接光照再乘上反射到该方向上的百分比了！显然这是一个类似光线追踪的递归过程，不同在于该方法通过对光线方向的采样从而找出一条条可行的路径，这也正是为什么叫路径追踪的原因。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">shade(p, wo)<br>  <span class="hljs-comment"># 选定一个被积分变量的采样分布，随机选取N条光线</span><br>  Randomly choose N directions wi~pdf<br>  <span class="hljs-comment"># 初始化出射光线Lo</span><br>  Lo = 0.0<br>  <span class="hljs-comment"># 对于每个采样的立体角wi</span><br>  For each wi<br>    <span class="hljs-comment"># 追踪入射光线，打到光源即计算积分</span><br>    Trace a ray r(p, wi)<br>    <span class="hljs-comment"># 每条打在物体上的光线都取平均（1/N）</span><br>    If ray r hit the light<br>      Lo += (1 / N) * L_i * f_r * cosine / pdf(wi)<br>    <span class="hljs-comment"># 开始递归</span><br>    Else If ray r hit an object at q<br>      Lo += (1 / N) * shade(q, -wi) * f_r * cosine / pdf(wi)<br>Return Lo<br></code></pre></td></tr></table></figure><p><strong>问题 1——光线数量的指数式增长</strong></p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022105657.png" alt><br>通过每次对光线方向的采样从而解出方程，假设每次采样 100 条，那么从人眼出发的第一次采样就是 100 条，在进行第二次反射之后就是 10000 条，依次类推，反射越多次光线数量便会爆炸增长，计算量会无法负担，那么如何才能使得光线数量不爆炸增长呢？唯有每次只采样一个方向！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">shade(p, wo)<br>  <span class="hljs-comment"># 选定一个被积分变量的采样分布，随机选取1条光线</span><br>  Randomly choose ONE direction wi~pdf<br>  <span class="hljs-comment"># 初始化出射光线Lo</span><br>  Lo = 0.0<br>  <br>  <span class="hljs-comment"># 追踪入射光线，打到光源即计算积分</span><br>  Trace a ray r(p, wi)<br>  <span class="hljs-comment"># 每条打在物体上的光线都直接返回该光线的贡献</span><br>  If ray r hit the light<br>    Return L_i * f_r * cosine / pdf(wi)<br>  <span class="hljs-comment"># 开始递归</span><br>  Else If ray r hit an object at q<br>    Return shade(q, -wi) * f_r * cosine / pdf(wi)<br></code></pre></td></tr></table></figure><p>每次如果只采样一个方向那么所带来的问题也是显而易见的，积分计算的结果会非常的 noisy，虽然蒙特卡洛积分是无偏估计，但样本越少显然偏差越大。但该问题很好解决，如果每次只去寻找一条路径结果不好，那么重复多次寻找到多条路径，将多条路径的结果求得平均即可！<br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022105946.png" alt></p><p>因此光线生成的时候有如下算法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">ray_generation(camPos, pixel)<br>  <span class="hljs-comment"># 对于每个像素，发出N条采样光线</span><br>  Uniformly choose N sample positions within the pixel<br>  pixel_radiance = 0.0<br>  <span class="hljs-comment"># 对于每条采样光线</span><br>  For each sample <span class="hljs-keyword">in</span> the pixel<br>    Shoot a ray r(camPos, cam_to_sample)<br>    If ray r hit the scene at p<br>      <span class="hljs-comment"># 每条打在物体上的光线都取平均（1/N）</span><br>      pixel_radiance += 1 / N * shade(p, sample_to_cam)<br>Return pixel_radiance<br></code></pre></td></tr></table></figure><p>到此为止，有关于该算法的实现，其递归出口是光线追踪的设置最大递归深度，详细的实现见——<a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html">Raytracing in one weekend</a></p><p><strong>问题 2—— shade 函数的递归没有出口</strong><br>这里并不没有采用类似光线追踪当中设定反射深度显式的给出递归出口的方法，而是非常精妙的采用了俄罗斯轮盘赌(Russian Roulette)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">shade(p, wo)<br>  <span class="hljs-comment"># 手动确定一个概率</span><br>  Manually specify a probability P_RR<br>  <span class="hljs-comment"># 在[0,1]中选随机数ksi</span><br>  Randomly select ksi <span class="hljs-keyword">in</span> a uniform dist. <span class="hljs-keyword">in</span> [0, 1]<br>  <span class="hljs-comment"># 1-P_RR的概率返回0</span><br>  If (ksi &gt; P_RR) <span class="hljs-built_in">return</span> 0.0;<br><br>  <span class="hljs-comment"># 选定一个被积分变量的采样分布，随机选取1条光线</span><br>  Randomly choose ONE direction wi~pdf<br>  <span class="hljs-comment"># 初始化出射光线Lo</span><br>  Lo = 0.0<br>  <br>  <span class="hljs-comment"># 追踪入射光线，打到光源即计算积分</span><br>  Trace a ray r(p, wi)<br>  <span class="hljs-comment"># 每条打在物体上的光线都直接返回该光线的贡献/P_RR</span><br>  If ray r hit the light<br>    Return L_i * f_r * cosine / pdf(wi) / P_RR<br>  <span class="hljs-comment"># 开始递归</span><br>  Else If ray r hit an object at q<br>    Return shade(q, -wi) * f_r * cosine / pdf(wi) / P_RR<br></code></pre></td></tr></table></figure><p>而返回有效光线的概率是 P，有效光线在返回时除以了 P，那么最终期望 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mi>P</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>L</mi><mi>o</mi><mi mathvariant="normal">/</mi><mi>P</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>P</mi><mo stretchy="false">)</mo><mo>∗</mo><mn>0</mn><mo>=</mo><mi>L</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">E = P * (Lo / P) + (1 - P) * 0 = Lo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span></span></span></span>是不变的。</p><h4 id="stpe3-直接对光源进行采样减少无效光线"><a class="markdownIt-Anchor" href="#stpe3-直接对光源进行采样减少无效光线"></a> <strong>Stpe3 直接对光源进行采样，减少无效光线</strong></h4><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022112343.png" alt><br>在每次计算直接光照的时候，通过均匀采样任选一个方向，但很少会的光线可以碰到光源，尤其当光源较小的时候，这种现象越明显，大量采样的光线都被浪费了。</p><p>因此在计算直接光照的时候，取一个 pdf 能够直接采样光源，即改进为 <strong>直接对光源进行采样</strong> ，这样所有采样的光线都一定会击中光源(如果中间没有别的物体)，没有光线再会被浪费了。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022112626.png" alt><br>如上图所示，如果只对光源（右上角的 luminaire）进行均匀采样，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>d</mi><mi>f</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">pdf=1/A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathdefault">A</span></span></span></span>(because <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∫</mo><mi>p</mi><mi>d</mi><mi>f</mi><mi>d</mi><mi>A</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">∫pdf dA = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">d</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>);</p><p>那么对于渲染方程<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>o</mi><mo>=</mo><mo>∫</mo><mi>L</mi><mi>i</mi><mo>⋅</mo><mi>f</mi><mi>r</mi><mo>⋅</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi><mi>d</mi><mi>ω</mi></mrow><annotation encoding="application/x-tex">Lo = ∫Li \cdot fr \cdot cos \theta dω</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span></span></span></span>，如果想要对光源进行采样的并依然使用蒙特卡洛的方法，那么一定要将其修改为对光源面积 dA 的积分，就等价于只对光源对应的面积投影到半球立体角的那部分积分（左下角的积分域），换言之就是需要找到 dA 与 dω 的关系即可；</p><p>于是写出对应的关系式：<br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022113846.png" alt></p><p>关系式中的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><msup><mi>θ</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">cos \theta&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>是为了计算出光源上微分面积元正对半球的面积，之后再按照立体角的定义 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>ω</mi><mo>=</mo><mi>d</mi><mi>A</mi><mi mathvariant="normal">/</mi><msup><mi>r</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">dω=dA/r^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">A</span><span class="mord">/</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，除以着色点x与光源采样点x’距离的平方。</p><p><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022114222.png" alt></p><p>最终伪代码如下，分直接光照和间接光照两部分计算：</p><ol><li>来自于光源的贡献（不需要俄罗斯轮盘赌）</li><li>其它物体</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">shade(p, wo)<br>  <span class="hljs-comment"># part1：来自于光源的贡献</span><br>  Uniformly sample the light at x’ (pdf_light = 1 / A)<br>  L_dir = L_i * f_r * cos θ * cos θ’ / |x’ - p|^2 / pdf_light<br><br>  <span class="hljs-comment"># part2：来自于其它物体的贡献</span><br>  <br>  <span class="hljs-comment"># 手动确定一个概率</span><br>  Manually specify a probability P_RR<br>  <span class="hljs-comment"># 在[0,1]中选随机数ksi</span><br>  Randomly select ksi <span class="hljs-keyword">in</span> a uniform dist. <span class="hljs-keyword">in</span> [0, 1]<br>  <span class="hljs-comment"># 1-P_RR的概率返回0</span><br>  If (ksi &gt; P_RR) <span class="hljs-built_in">return</span> 0.0;<br><br>  <span class="hljs-comment"># 选定一个被积分变量的采样分布，随机选取1条光线</span><br>  Randomly choose ONE direction wi~pdf_hemi (pdf_hemi = 1 / 2pi)<br>  <span class="hljs-comment"># 初始化其他物体的光线贡献L_indir</span><br>  L_indir = 0.0<br><br>  Trace a ray r(p, wi)<br>  <span class="hljs-comment"># 每条打在物体上的光线都直接返回该光线的贡献/P_RR</span><br>  If ray r hit a non-emitting object at q<br>    L_indir = shade(q, -wi) * f_r * cosine / pdf_hemi(wi) / P_RR<br><br>  Return L_dir + L_indir<br></code></pre></td></tr></table></figure><p>其中，计算直接光照的时候还需要判断光源与着色点之间是否有物体遮挡，该做法也很简单，只需从着色点x向光源采样点x’发出一条检测光线判断是否与光源之外的物体相交即可。<br><img src="/2022/01/26/Lecture-14-16-%E5%9F%BA%E4%BA%8E%E7%89%A9%E7%90%86%E7%9A%84%E6%B8%B2%E6%9F%93/20221022115236.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">shade(p, wo)<br>  <span class="hljs-comment"># part1：来自于光源的贡献</span><br>  Uniformly sample the light at x’ (pdf_light = 1 / A)<br>  <span class="hljs-comment"># 从着色点x向光源采样点x’发出一条检测光线</span><br>  Shoot a ray from p to x’<br>  If the ray is not blocked <span class="hljs-keyword">in</span> the middle<br>    L_dir = L_i * f_r * cos θ * cos θ’ / |x’ - p|^2 / pdf_light<br><br>  <span class="hljs-comment"># part2：来自于其它物体的贡献</span><br>  <br>  <span class="hljs-comment"># 手动确定一个概率</span><br>  Manually specify a probability P_RR<br>  <span class="hljs-comment"># 在[0,1]中选随机数ksi</span><br>  Randomly select ksi <span class="hljs-keyword">in</span> a uniform dist. <span class="hljs-keyword">in</span> [0, 1]<br>  <span class="hljs-comment"># 1-P_RR的概率返回0</span><br>  If (ksi &gt; P_RR) <span class="hljs-built_in">return</span> 0.0;<br><br>  <span class="hljs-comment"># 选定一个被积分变量的采样分布，随机选取1条光线</span><br>  Randomly choose ONE direction wi~pdf_hemi (pdf_hemi = 1 / 2pi)<br>  <span class="hljs-comment"># 初始化其他物体的光线贡献L_indir</span><br>  L_indir = 0.0<br><br>  Trace a ray r(p, wi)<br>  <span class="hljs-comment"># 每条打在物体上的光线都直接返回该光线的贡献/P_RR</span><br>  If ray r hit a non-emitting object at q<br>    L_indir = shade(q, -wi) * f_r * cosine / pdf_hemi(wi) / P_RR<br><br>  Return L_dir + L_indir<br></code></pre></td></tr></table></figure><p>其它：点光源在路径追踪中并不好计算，建议做成很小的面积光源</p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><ul><li><p><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_14.pdf">Games101 lecture14 pdf</a></p></li><li><p><a href="https://blog.csdn.net/qq_38065509/article/details/106496354">计算机图形学十四：基于物理渲染的基础知识(辐射度量学，BRDF和渲染方程)</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/145410416">Lecture 14-15：基于物理渲染的基础知识(辐射度量学，BRDF 和渲染方程)</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/146714484">Lecture 16：全局光照(蒙特卡洛路径追踪)</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/459101196">光的能量与颜色——辐射度量学，光度学，色度学</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/21376124">基于物理着色：BRDF</a></p></li><li><p><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_16.pdf">Games101 lecture16 pdf</a></p></li><li><p><a href="https://blog.csdn.net/qq_38065509/article/details/106619170">计算机图形学十五：基于物理的渲染(蒙特卡洛路径追踪)</a></p></li><li><p><a href="https://www.zhihu.com/topic/19675767/hot">蒙特卡洛积分推导和性质</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 13-14 光线追踪</title>
    <link href="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/"/>
    <url>/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/</url>
    
    <content type="html"><![CDATA[<h1 id="光栅化与光线追踪"><a class="markdownIt-Anchor" href="#光栅化与光线追踪"></a> 光栅化与光线追踪</h1><ul><li><p>光栅化主要用于实时渲染（速度快），光追主要用于离线渲染（速度慢）。</p></li><li><p>光栅化不能解决的问题</p><p><img src="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/05a9ebe9-d09b-4a7b-8f0a-76924abd7de6-11709514.jpg" alt></p></li></ul><h1 id="光线追踪原理"><a class="markdownIt-Anchor" href="#光线追踪原理"></a> 光线追踪原理</h1><h4 id="基本假设"><a class="markdownIt-Anchor" href="#基本假设"></a> 基本假设</h4><ul><li>光线一定沿着直线传播</li><li>光线之间无法碰撞</li><li>光线路径可逆，即从 A 发出的到 B 的光线，一定也可以从 B 发出到 A（中途可发生反射和折射）</li></ul><h4 id="光线投射过程只考虑光线的一次投射并未考虑反射和折射"><a class="markdownIt-Anchor" href="#光线投射过程只考虑光线的一次投射并未考虑反射和折射"></a> 光线投射过程（只考虑光线的一次投射，并未考虑反射和折射）</h4><ul><li><p>Ray Casting。从人眼或摄像机向近投影平面上的每一个像素点发射一条光线，判断与场景物体的最近交点（其实是做了深度测试）</p><p><img src="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/6cd29b8d-4eb0-4a8f-b424-751d1127ca85-11709514.jpg" alt></p></li><li><p>阴影判断。接着连接该交点和光源，只要判断这条连线之间是否有物体存在就可以知道该交点是否在阴影之中（比 shadow mapping 那一套简单了许多）。</p></li><li><p>着色，写入像素值。根据各种着色模型（如 Blinn-Phong)。</p><p><img src="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/4aef80f5-3e83-4d63-bd90-4697b7068480-11709514.jpg" alt></p></li><li><p>注意：</p><ul><li>明暗效果仅仅由第一次相交的物体表面法向方向、材质、视点和光照方向、以及光照强度等因素共同决定。</li><li>光线投射并不考虑 第二层 以及更深层次的光线，因此 不具有阴影、反射 、折射 等效果。</li></ul></li></ul><h4 id="whitted-style-光线追踪"><a class="markdownIt-Anchor" href="#whitted-style-光线追踪"></a> (Whitted-Style) 光线追踪</h4><ul><li><p>Recursive (Whitted-Style) Ray Tracing。在考虑 Ray Casting 的基础上，该条光线第一个与圆球物体相交，假设该圆球是一个玻璃球，那么便会发生镜面反射和折射。同时反射与折射出去的光线会可能与场景中的物体再次碰撞，发生第二次折射与反射。计算这些光线与物体的最近交点。</p><p><img src="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/4016976d-f6b0-4f90-90a1-318bfd876cfd-11709514.jpg" alt><br><img src="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/4a35ccd5-5c41-4918-b933-6be146bec18e-11709514.jpg" alt></p></li><li><p>着色。将这些所有交点与光源连接，称这些线为 shadow rays（因为可以用来检测阴影），计算这些所有点的局部光。将其按照光线能量权重累加(该做法与递归过程等价，读者可以看看伪代码思考一下)，最终得到近投影平面上该像素点的颜色。</p><p><img src="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/f0a8be5f-bfea-4601-888d-56d20708dae3-11709514.jpg" alt></p></li><li><p>总结：递归的光线追踪算法</p><p><img src="/2022/01/20/Lecture-13-14-%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/8e9ce952-9c18-4177-a269-5f8b098a1a12-11709514.jpg" alt></p></li></ul><h4 id="whitted-style-光线追踪注意点"><a class="markdownIt-Anchor" href="#whitted-style-光线追踪注意点"></a> (Whitted-Style) 光线追踪注意点</h4><ul><li>整体过程是一个递归的过程，因此需要一定的递归终止条件，可以是：递归深度-在光线弹射一定次数后停止；光线的贡献-在光线的贡献衰减到足够小时停止。</li><li>光线在每次反射和折射之后都有能量损耗的，由系数决定，因此越往后的折射和反射光贡献的能量越小，这也是为什么在上文中提到根据光线能量权重求和。e.g. 反射系数为 0.7，那么第一次反射折损 30%，第二次反射折损 1-（70%x70%），依次类推。</li><li>如果反射或折射光线没有碰撞到物体，一般直接返回一个背景色。</li></ul><h1 id="细节实现参考文章"><a class="markdownIt-Anchor" href="#细节实现参考文章"></a> 细节实现（<a href="https://blog.csdn.net/qq_38065509/article/details/106299336">参考文章</a>）</h1><ol><li>光线求交</li></ol><ul><li>与隐式表面求交</li><li>与显式表面求交（对于某个封闭物体，如果光线与物体有奇数个交点，那么光线一定在物体内；偶数在外）</li><li>光线追踪加速（<a href="https://blog.csdn.net/qq_38065509/article/details/106396844">参考文章</a>）</li></ul><ol start="2"><li>光线反射</li><li>光线折射</li></ol><p>以上实现细节参看：<a href="https://dreamfields.github.io/2022/02/08/Lecture-17-%E6%9D%90%E8%B4%A8/">Lecture17 材质（微平面理论，Cook-Torrance BRDF）</a></p><h1 id="笔记参考"><a class="markdownIt-Anchor" href="#笔记参考"></a> 笔记参考</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/144403005">Lecture 13： Whitted-Style 光线追踪原理详解及实现细节</a></li><li><a href="https://zhuanlan.zhihu.com/p/144403802">Lecture 14：利用包围盒技术加速光线追踪（KD-Tree and BVH）</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 10-12 几何（曲面细分、减面）</title>
    <link href="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/"/>
    <url>/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="几何表示"><a class="markdownIt-Anchor" href="#几何表示"></a> <a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_10.pdf">几何表示</a></h1><h3 id="隐式表面implicit-surface"><a class="markdownIt-Anchor" href="#隐式表面implicit-surface"></a> 隐式表面（Implicit Surface）</h3><ul><li><p>特点</p><ul><li>一个函数定义一个隐式几何 f(x,y,z)=0。</li><li>容易判断一个点是在几何体内部（f&lt;0）还是外部（f&gt;0）。</li></ul></li><li><p>几种隐式表面</p><ul><li><p>代数曲面：表达式定义</p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/1d525a00-51a1-4311-9a0a-c5511ee34b36-11709514.jpg" alt></p></li><li><p>Constructive Soild Geometry（CSG，隐式表示）</p><ul><li><p>通过几何体布尔运算合成的几何体</p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/724203b0-14bb-4d95-8b4c-5fedec0b7c68-11709514.jpg" alt></p></li></ul></li><li><p>距离函数（Distance Function，隐式表示）</p><ul><li><p>输入空间中的任意一个点，输出与这个点最近的几何体距离（有向距离，可正可负），得到各个几何体的距离函数后，将距离函数融合，再恢复为原来的物体，即可得到复杂的几何体。</p></li><li><p>Distance Function 的插值会有着几何融合（blend）的效果（与一般的插值效果很不一样）</p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/b6007f53-bb73-452b-9d49-bbd91c462908-11709514.jpg" alt></p></li><li><p>一个例子：A 状态被一个物体遮挡 1/3，B 状态被一个物体遮挡 2/3，那么想要得到中间状态，即被物体遮挡了 1/2，该如何做？求有向距离函数 SDF（Signed Distance Function），即求正方形内任意点到被遮挡的 1/3 边界的最短距离，形成距离函数。这里采用最简单的 SDF = SDF(A)+SDF(B)来举例，最终得到的 SDF 为零的点的集合即为 blend 之后曲面，对该例子来说，就是两道阴影之间中点的一条线。对于几何体混合效果自然不可能像这里简单的两个距离相加就可以得到了，该效果具体实现是找出任一个点到两个几何体表面距离中的最短距离再减去一个变量作为该点最终的 SDF。<a href="https://www.youtube.com/watch?v=Cp5WWtMoeKg">Coding Adventure:Ray Marching</a></p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/9c9044d0-4aab-4222-ac69-7a66307be559-11709514.jpg" alt></p></li><li><p>水平集（Level Set Methods）：水平集则是一种用来表示 Distance Function 的存储结构，网格存储近似函数值，坐标通过网格之间的插值可以得到函数输出。从水平集中可以得到函数值为 0 的位置，对应的就是物体表面。</p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/571c869d-3c37-4431-aed9-2ef9453d281f-11709514.jpg" alt></p></li><li><p>水平集也可以定义在三维中，如该纹理图定义的是组织的密度大小，取出该图中所有密度等于某个值的位置，得到某个密度下的物体表面。</p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/ee44b40f-ef1a-4846-9831-61dcbaf391ac-11709514.jpg" alt></p></li></ul></li><li><p>分型几何(Fractals，隐式表示)</p><ul><li>分型几何是指许许多多自相似的形体最终所组成的几何形状。</li><li>如雪花是一个六边形，放大之后会发现每一个边上又是一个六边形，再放大六边形边上的六边形边上又是六边形，类似于递归。</li></ul></li></ul></li></ul><h3 id="显式表面explicit-surface"><a class="markdownIt-Anchor" href="#显式表面explicit-surface"></a> 显式表面（Explicit Surface）</h3><ul><li><p>特点</p><ul><li><p>低维参数映射成隐式函数的高维参数。</p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/f0e97131-f635-4513-a75b-4c8a15123da1-11709514.jpg" alt></p></li><li><p>相对容易采样，因为低维参数所需参数数量相对少了,可采样面积覆盖率更大。</p></li><li><p>不容易判断点在几何体内部/外部（需要将多维参数解算成低维参数，这一步相当麻烦）。</p></li></ul></li><li><p>几种显式表面</p><ul><li><p>点云：很多点构成的曲面，直接有着所有点的信息。点云通常是经过扫描物体之后的原始输出结果，常常会转化为多边形网格</p></li><li><p>多边形网格(Polygon Mesh)</p><ul><li><p>通过定义各个多边形面的顶点以及顶点之间的连接关系就可以得到许许多多的三角形面或是四边形面，再通过这些面来近似表现出我们想要的模型效果。</p></li><li><p>一个立方体的模型数据</p><p><img src="/2022/01/11/Lecture-10-12-%E5%87%A0%E4%BD%95/c982d66d-9a6e-4811-8a77-002152fafc36-11709514.jpg" alt></p><ul><li>3-10 行定义了立方体的 8 个顶点信息。</li><li>12-25 行定义了这些顶点的纹理坐标信息(每个面 4 个点，共 6 个面所以最多有 24 种不同的纹理坐标信息，这里有一些纹理对于不同面上的点是公用的)。</li><li>27-34 行定义了 6 个面的法线信息，为什么有 8 个是因为建模软件输出的精度问题不必在意，其中有两个是重复的。</li><li>36-47 行，f 代表一个面，其中 x/x/x 的第一位表示是哪个顶点，第二位表示该顶点纹理坐标是第几个，第三位表示法线信息是第几个。 3 个 x/x/x 表示 3 个顶点的信息构成一个三角形面。</li></ul></li></ul></li><li><p>贝塞尔曲线与曲面</p><ul><li><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_11.pdf">课件</a></li><li><a href="https://blog.csdn.net/qq_38065509/article/details/106127805">参考笔记</a></li></ul></li></ul></li></ul><h1 id="曲面细分mesh-subdivision与曲面简化mesh-smplication"><a class="markdownIt-Anchor" href="#曲面细分mesh-subdivision与曲面简化mesh-smplication"></a> 曲面细分(Mesh subdivision)与曲面简化(Mesh Smplication)</h1><ul><li><a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_12.pdf">课件</a></li><li><a href="https://blog.csdn.net/qq_38065509/article/details/106154299">参考笔记</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 07-09 着色</title>
    <link href="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/"/>
    <url>/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="深度缓冲与着色"><a class="markdownIt-Anchor" href="#深度缓冲与着色"></a> <a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_07.pdf">深度缓冲与着色</a></h1><ul><li><p>思路与算法：在绘制最终的图像同时，绘制深度图，记录每个像素距离相机最近的深度值</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/885605b7-fa53-4251-801b-abc5e1dd54a3-11709514.jpg" alt><br><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/9ba89a84-9af3-45cf-86c0-1d4b80765924-11709514.jpg" alt></p></li></ul><h1 id="着色-shading"><a class="markdownIt-Anchor" href="#着色-shading"></a> 着色 Shading</h1><ul><li><strong>对不同的物体应用不同的材质的过程（不同的材质就是不同的着色方法）</strong></li></ul><h3 id="漫反射"><a class="markdownIt-Anchor" href="#漫反射"></a> 漫反射</h3><ul><li><p>漫反射与人眼位置无关，从各个方向看上去亮度均相同，公式中也可以反映出来。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/20220529163944.png" alt></p></li><li><p>其中，Kd 表示漫反射系数，0 为完全不反射，1 为镜面反射。可以使用一个颜色向量值来表示该点反射出的光线的颜色</p></li></ul><h3 id="高光"><a class="markdownIt-Anchor" href="#高光"></a> <a href="https://sites.cs.ucsb.edu/~lingqi/teaching/resources/GAMES101_Lecture_08.pdf">高光</a></h3><ul><li><p>当眼睛的方向和镜面反射光线的方向较为接近时可以看到，即下图的 R 与 v 接近</p></li><li><p>Blinn-Phong 模型：将“R 与 v 接近”转换为“半程向量 h 与法向量 n 接近”<br><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/20220529171316.png" alt><br><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/20220529171404.png" alt></p></li><li><p>上图的指数 p 表示高光系数，原因：余弦函数对角度的容忍度较高，而期望的效果是高光集中在很小的范围内，因此对其进行指数操作。p 一般取 100~200。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/20220529171431.png" alt></p></li></ul><h3 id="环境光"><a class="markdownIt-Anchor" href="#环境光"></a> 环境光</h3><ul><li>来自四面八方的反射光线，极为复杂，因此假设（简化后）：环境光来自所有方向，且强度相同，颜色相同。与实际光线方向和眼睛的方向无关，设为一个常数。实际上要计算真实环境光需要用到全局光照的部分。</li></ul><h3 id="blinn-phong-反射模型"><a class="markdownIt-Anchor" href="#blinn-phong-反射模型"></a> Blinn-Phong 反射模型</h3><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/20220530093749.png" alt></p><h3 id="着色频率"><a class="markdownIt-Anchor" href="#着色频率"></a> 着色频率</h3><ul><li><p>通俗理解：将着色应用到哪些点上</p></li><li><p>着色频率的分类</p><ul><li><p>Flat shading（对每个三角形求一个法向量，对应只有一个颜色，对光滑表面效果较差）</p></li><li><p>Gouraud shading（对每个顶点求法向量，三角形内部利用插值进行着色）。顶点的法向量，可以对其相邻接的三角形的各个法向量求加权平均，权重可以设置为该三角形的面积。<br><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/20220530093930.png" alt></p></li><li><p>Phong shading（对每个三角形，得到三个顶点的法向量，从而插值出三角形内部每个像素的法向量，然后对每个像素进行一次着色）</p></li></ul></li><li><p>当顶点足够多、模型足够复杂时，就可以使用比较简单的着色频率，效果可以接收。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/20220530093951.png" alt></p></li></ul><h1 id="图形管线实时渲染管线"><a class="markdownIt-Anchor" href="#图形管线实时渲染管线"></a> 图形管线（实时渲染管线）</h1><ul><li><p>通俗理解：从场景到一张图片所经历的整个过程的不同操作</p></li><li><p>OpenGL 中的 Fragment（片段）可以理解为像素。该过程已经在硬件中写好，即 GPU 的渲染过程。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/d6369dca-3917-4cbf-958d-f1ca1a10e58d-11709514.jpg" alt></p><ul><li><p>顶点处理的作用是指对所有的顶点数据进行 Model，View，和 Projection 的变换，最终得到投影到二维平面的坐标信息(同时为了 Zbuffer 保留深度 z 值)。当然如果超出观察空间的会被剪裁掉。</p></li><li><p>三角形处理就是将所有的顶点按照原几何信息，变成三角面，每个面由 3 个顶点组成。得到了许许多多个三角形之后，接下来的操作自然就是三角形光栅化。</p></li><li><p>在进行完三角形的光栅化之后，知道了哪些在三角形内的点可以被显示，那么如何确定每个像素点或者说片元(Fragement)的颜色呢？[注：片元可能比像素更小，如 MSAA 抗拒齿操作的进一步细分得到的采样点]。那自然就是着色了，也就是片元处理阶段应该做的。</p></li><li><p>着色部分在顶点和像素处理过程都可能发生，关键看着色频率的方法。如果是 Gouraud shading，仅在顶点进行着色；如果是 Phong shading，则会在像素生成之后进行着色。因此，着色的关键在于——顶点或者像素（片段）如何着色，该部分的程序即为着色器（定义了一个顶点或者像素该执行什么操作，且只执行一次）。在现代的 GPU 中，该套渲染管线允许某些部分是可编程的。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/c33119a5-bd24-4b62-992d-aab9af40546a-11709514.jpg" alt></p></li><li><p>Framebuffer 的操作，就是将所有的像素颜色信息整合在一起，输送给显示设备加以显示。</p></li></ul></li></ul><h1 id="纹理"><a class="markdownIt-Anchor" href="#纹理"></a> 纹理</h1><h2 id="规定"><a class="markdownIt-Anchor" href="#规定"></a> 规定</h2><ul><li>假设三维物体中的坐标可以映射到二维纹理图片的坐标（参数化）</li><li>对于二维的纹理图片（不考虑像素和长宽），其 u、v 均在（0，1）范围内</li></ul><h2 id="重心坐标"><a class="markdownIt-Anchor" href="#重心坐标"></a> 重心坐标</h2><ul><li><p>针对顶点的任意属性（如纹理坐标、颜色、法向量、深度等）做三角形内部的插值</p></li><li><p>重心坐标定义在一个三角形中，如果某个点在三角形内部，这三个值（α、β、γ）均为非负，且和为 1。三个值（α、β、γ）可以用面积求得，也可以利用三个顶点的坐标公式求得。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/13eff49a-6d7e-4282-bce5-b6c645bc45b6-11709514.jpg" alt><br><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/fd247a7b-20a3-4364-b4f8-a5589ab5efb2-11709514.jpg" alt></p></li><li><p>详细的推导： <a href="https://zhuanlan.zhihu.com/p/361943207">直线与三角形的重心坐标（Barycentric Coordinates）的推导与应用</a></p></li><li><p>插值应该在三维物体投影到二维平面之前做，因为重心坐标不能保证投影后插值得到的属性值不变。如果插值在投影到二维平面之后做，就需要进行一个矫正操作——<a href="https://zhuanlan.zhihu.com/p/144331875">透视矫正插值</a>。</p></li></ul><h2 id="存在的问题"><a class="markdownIt-Anchor" href="#存在的问题"></a> 存在的问题</h2><ul><li><p>如果屏幕分辨率很大（如 4k），而纹理图片分辨率很小（如 256*256），那么会出现：屏幕与纹理图片上的点并不能一一对应，得到的是非整数的纹理坐标。解决方法：</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/dc915635-f15f-467a-93cf-4c3fdb24cc8e-11709514.jpg" alt></p><ul><li><p>Nearest：取整，相当于屏幕的多个点（像素）对应了纹理图片的一个像素</p></li><li><p>Bilinear：双线性插值。红点的来源：三维物体中三角面片内部的某一点，经过插值得到一个点，再经过投影变换到屏幕上，再经过映射得到纹理坐标，即该红点。双线性插值经历了两次水平方向的插值，一次竖直方向的插值，最终得到一个平滑的纹理的像素值。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/b6a30e8c-fce6-47b6-bb14-bca0a5dfb44d-11709514.jpg" alt></p></li><li><p>Bicubic：双三次插值，对周围的 16 个纹理坐标进行插值得到像素值。</p></li></ul></li><li><p>相反，如果屏幕分辨率很小，而纹理图片分辨率很大，那么会出现一个屏幕像素点对应了多个纹理像素点，即覆盖了大块的包含图案变化的纹理区域，便出现走样（屏幕的采样频率跟不上纹理的变化频率）。解决方法：</p><ul><li><p>超采样：一个屏幕像素点分为多个采样点来对应纹理坐标，最后取平均值（有效果，开销过大）</p></li><li><p>Mipmap 多级渐远纹理（利用范围查询的知识：给一个区域，立刻能够知道该区域内部纹理像素的平均值），只能做近似的正方形的范围查询。在渲染之前，提前计算纹理图的渐远纹理，存储空间仅为原图的 4/3。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/9f87a3c3-d840-483d-b3d8-66dd5df0dfc8-11709514.jpg" alt></p><ul><li><p>关键：计算某个屏幕像素应该映射到哪个 level（记为 D）的纹理上。将一个屏幕像素的临近点映射到 level 0 的纹理图上，估计该像素覆盖的一个正方形的边长 L，求以 2 为底的对数即可得到 D。如果 L=1，即一个屏幕像素对应 1 个原始纹理像素，利用原始纹理图即可，D=0；如果 L=4，即一个屏幕像素对应 4*4 个原始纹理像素，那么利用 D=2 的纹理图即可得到对应的 1 个纹理像素。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/aacbafb2-25b5-4f68-b510-2ecf4ff175a4-11709514.jpg" alt></p></li><li><p>问题 1：如果 L 不是 2 的指数，可以对 D 取整，但很有可能得到的纹理映射结果出现断层。此时利用三线性（Trilinear）插值即可——L=3 时，分别计算 D=1 和 D=2 的双线性插值结果后，再计算两个结果的线性插值。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/d8ab277e-341c-4975-b72b-84428cc81159-11709514.jpg" alt></p></li><li><p>问题 2：过度模糊（Overblur）问题，在远处无法得到清晰的纹理映射。原因在于，屏幕上的一个像素映射到纹理坐标，可能覆盖了多个纹理像素，此时查询多级渐远纹理后只对应了一个平均的纹理像素值，就产生了模糊。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/00e56316-69c7-4f3e-9287-5c161b68d53b-11709514.jpg" alt></p><ul><li><p>解决方法</p><ul><li><p>各向异性过滤（Anisotropic Filtering，或 Ripmap），将纹理像素的长和宽分别压缩与同时压缩，耗费了原始纹理像素的 3 倍存储空间，那么对于上图右侧的矩形即可准确得到纹理映射。缺点在于：对于上图左侧的倾斜矩形，无法得到正确的结果。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/10a8e5e2-135b-4982-b8d5-576ae0af7c25-11709514.jpg" alt></p></li><li><p>EWA 过滤，把一个覆盖到纹理像素的不规则形状拆分为多个圆形，执行多级查询，耗费时间，但效果较好。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/e6846262-5bfc-4528-9477-f50b49decc05-11709514.jpg" alt></p></li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="纹理应用技术"><a class="markdownIt-Anchor" href="#纹理应用技术"></a> 纹理应用技术</h2><ul><li><p>现代计算机 GPU 中，可以把纹理理解为一块内存，以及可以在这块内存中进行范围查询，即 texture = memory + range query (filtering)</p></li><li><p>环境映射（Environment Mapping）。为了实现接受环境光的效果，我们可以用一个贴图来存放环境光信息，即 环境贴图（Environment Map） 或 反射贴图（Reflection Map），在给物体着色的时候不仅采样普通纹理，也采样环境贴图，按一定比例混合这两者的颜色（例如物体材质越光滑，镜面反射效果越强）。即用纹理描述环境光的样子，从而用该纹理去渲染物体。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/df959a07-ad93-4529-b7b0-dfd17ee8b3a4-11709514.jpg" alt></p></li><li><p>球面环境贴图（Spherical Environment Map）。把环境光记录到球面上，并展开，但会出现扭曲现象。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/15f78112-fa47-4662-b969-e8d3e80a3108-11709514.jpg" alt></p></li><li><p>解决球面环境贴图扭曲现象的办法——立方体贴图（Cube Map）。设置一个包围盒，将球面上的点延长交于包围盒，并展开。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/82604133-9408-4d05-a820-4d8d21022015-11709514.jpg" alt></p></li><li><p>凹凸贴图（Bump Mapping）。通过改变表面各点的相对高度，使本来是平的东西看起来有凹凸的效果，是一种欺骗眼睛的技术（因为物体结构并没有发生改变）。例如这个球看起来凹凸不平，实际它的几何结构就是光滑的球，只是通过凹凸贴图改变了各像素点的法线方向，从而导致光照结果不一，产生出凹凸不平的视觉效果。即不把几何形体变复杂的情况下，可以通过应用复杂的纹理定义相对高度，从而法线会发生变化。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/f89bdc6f-1b36-45ec-b54d-364b79ed708a-11709514.jpg" alt></p><ul><li><p>首先，凹凸贴图是在不增加三角面片的情况下增加表面细节来实现的。黑色的线是真实的表面，黄色的线是通过凹凸贴图定义的，那么其法向量原本是 p，改变为 n</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/eaa66795-188d-4d03-94c4-89b08c1d3398-11709514.jpg" alt></p></li><li><p>下图展示的是二维情况下的法向量改变的过程：先假设某一点 p 的局部法向量 n（p），计算该点处在凹凸贴图上的切线，求其垂直向量。之后推广到三维情况即可，需要注意的是：真实模型中某一点 p 的法向量不一定是朝向 z 的，但假设在该局部是这样，计算好改变后的法向量后需要通过变换才能得到真实的改变了的法向量。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/fe60eddd-d3a7-4d04-a0eb-a5d8be7d6b05-11709514.jpg" alt><br><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/a8c244a4-2543-4d87-bf82-582f7b1e3bdc-11709514.jpg" alt></p></li></ul></li><li><p>位移贴图（Displacement mapping），需要三角形足够细致，否则还会出现走样问题。但在 DirectX 中可以根据需要将三角形进行细分，从而避免该问题。</p><p><img src="/2022/01/06/Lecture-07-09-%E7%9D%80%E8%89%B2/f189f5db-db71-4bc9-a4bf-2d0e2739a254-11709514.jpg" alt></p></li><li><p>除此之外，还有三维纹理、环境光遮蔽、医学体渲染等纹理应用。可以参考：<a href="https://www.cnblogs.com/KillerAery/p/15106770.html#%E7%BA%B9%E7%90%86%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF%EF%BC%88texture-application%EF%BC%89">纹理映射技术</a></p></li></ul><h1 id="阴影"><a class="markdownIt-Anchor" href="#阴影"></a> 阴影</h1><ul><li>这里考虑点光源产生的阴影，只有两种情况：在阴影中和不在阴影中（硬阴影）。如果是软阴影，则光源一定有大小。</li><li><strong>关键——人眼和光源能够同时看到该点，就不在阴影中。</strong></li><li>step1：假设光源前有一个屏幕，从光源看场景，记录每个点到光源屏幕的深度，得到一张深度图</li><li>step2：从人眼（相机）看物体的每个点，再投影到光源处，计算该点到光源的深度，如果等于 step1 中计算的深度，就表示不在阴影中。</li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 06 反走样</title>
    <link href="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/"/>
    <url>/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="走样"><a class="markdownIt-Anchor" href="#走样"></a> 走样</h1><ul><li><p>扫描转换的算法在处理图形非水平或者非垂直线段时引起了锯齿或阶梯状的变形。</p></li><li><p>具体解释</p><ul><li>（1）几何图形中的直线段无限细，多边形的边亦如此，它们均是带宽无限的信号，即傅里叶频谱中的最高频率为无限大；</li><li>（2）由于几何图形为带宽无限信号，所以将几何图形像素化时，采样频率无法满足乃奎斯特定理，导致采样过程中丢失高频成分，因而产生的图像信号失真现象，称为“走样”。</li><li>（3）在视觉上，直线段或多边形边界走样呈现为锯齿状，即“直线边界不直”。</li></ul></li></ul><h1 id="采样理论"><a class="markdownIt-Anchor" href="#采样理论"></a> 采样理论</h1><ul><li><p>频率与频谱的理解</p><ul><li><p>通过傅里叶变换（时域 → 频域），将任何周期信号通过级数理论转变为正弦或余弦信号的叠加（每个正余弦信号叫做谐波），而通过刻画这些单个正余弦信号的属性（频率、振幅、相位）形成的对应关系，就形成了该信号的频谱。而原来是通过记录信号随时间变化的起伏来描述该信号（时域），现在便可以通过频谱来描述该信号（频域）。</p><ul><li><p>总结</p><p><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/30f27f04-cb35-4143-a29f-80c5f2661505-11709514.jpg" alt><br><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/8dcc19b2-f5b0-431a-8064-45d23d07459a-11709514.jpg" alt></p></li><li><p>振幅频谱</p><p><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/8e2c07f0-5647-40e6-b793-bebeff4b2f2e-11709514.jpg" alt></p></li><li><p>相位频谱</p><p><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/f652c394-f00f-4452-9046-8d31742bee70-11709514.jpg" alt></p></li></ul></li></ul></li><li><p>如何对图像分析频率和频谱</p><ul><li><p>基础知识的理解</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/19763358">傅里叶分析</a></p><ul><li><p>相位谱和频率谱的直观理解</p><p><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/0265e20c-1abd-4338-93c8-d8fd229492ba-11709514.jpg" alt></p></li></ul></li><li><p><a href="https://blog.csdn.net/Vichael_Chan/article/details/102570542">数字图像处理：图像的频域</a></p></li><li><p><a href="http://www.360doc.com/content/18/0410/09/7551_744364416.shtml">图像 RGB 值、灰度值与像素值的关系</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/99605178">通俗讲解：图像傅里叶变换</a></p></li><li><p><a href="https://www.zhihu.com/question/26969067/answer/567804862">对图像二维傅立叶变换到底是完成什么功能？</a></p></li><li><p><a href="https://blog.csdn.net/turbogofi/article/details/12048777?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.control&amp;spm=1001.2101.3001.4242">图像处理中频域(Fourier)的应用总结</a></p></li><li><p>图像频谱</p><p><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/76eed36a-099d-443c-8348-cfc44d132a80-11709514.jpg" alt></p></li></ul></li><li><p>通过频率分析图像中的走样：通过同样的频率采样两种频率截然不同的函数，得到的采样点可以完全相同，即为走样</p><p><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/8f5ba925-a659-4fd8-926e-87eb1f77fffd-11709514.jpg" alt></p></li><li><p>图像操作</p><ul><li>时域上的卷积=频域上的乘积</li><li>卷积核可以看作一张小的图片，卷积核越大，保留的高频信息越少，在频域图上高频区域的亮度就越低</li><li>高通滤波器——保留高频信息</li><li>采样反映到频谱中——重复原始信号的频谱。采样的频率越小，反映到频谱中，频谱的重复越密集，于是出现频谱的混叠，产生走样</li></ul></li></ul></li></ul><h1 id="反走样的思路"><a class="markdownIt-Anchor" href="#反走样的思路"></a> 反走样的思路</h1><ul><li><p>增加采样率（并不是反走样所研究的）</p></li><li><p>采样之前，先对信号进行模糊（或者说低通滤波，即拿掉高频信息，这样边界会看起来变得更浅，具体做法是将某个像素计算其在图形内部的覆盖面积，将该像素值进行平均覆盖），再进行采样，那么在频谱中便不容易发生混叠，可以对走样进行一定程度的改善</p><p><img src="/2021/12/27/Lecture-06-%E5%8F%8D%E8%B5%B0%E6%A0%B7/45769713-a6c4-44b3-91f2-414194b0212d-11709514.jpg" alt></p><ul><li>如何判断某个像素在三角形内部的比例？MSAA 方法，将每个像素分割为更小的像素点，计算在三角形内部的点占该像素所有点的比例即可。</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 04-05 旋转、光栅化</title>
    <link href="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&amp;%E5%85%89%E6%A0%85%E5%8C%96/"/>
    <url>/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&amp;%E5%85%89%E6%A0%85%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="旋转"><a class="markdownIt-Anchor" href="#旋转"></a> 旋转</h1><ul><li><p>Rodrigues 旋转公式：实现某三维物体的坐标绕过原点的向量轴 n 旋转 α 角度的旋转矩阵为 R(n,α)，这是<a href="https://dreamfields.github.io/2021/08/06/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/#Rodrigues%E6%97%8B%E8%BD%AC%E5%85%AC%E5%BC%8F">Rodrigues 旋转公式的推导</a></p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/11e15ed4-a5a4-4d8f-9548-8ea3a666bc1e-11709514.jpg" alt><br><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/c07cae47-379d-4cf9-be8e-c374a6d6d84a-11709514.jpg" alt></p></li><li><p>图形学的成像，类比拍照。</p><ul><li><p>第一步将模型摆好，称为模型变换；第二部将相机的位置摆好，称为视图（或相机）变换；第三步将物体投影到屏幕上，称为投影变换。</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/b4c37547-b653-4143-9757-fa34a446a312-11709514.jpg" alt></p></li><li><p>其中，观测变换包括两部分：视图变换 + 投影变换</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/aa77ced8-dfb8-4956-9bd1-abeb8ca11b24-11709514.jpg" alt></p></li><li><p>1.视图变换</p><ul><li><p>摆放相机：因为我们屏幕看到的物体始终是从原点看向负 z 轴，所以这一步的任务就是——将一个任意位置、看向任意方向的相机，摆放到原点，并看向负 z 轴，即定义位置（原点）、上方向（y 方向）、看的方向（-z 方向）。该过程实际上是将世界坐标系的物体进行变换，使得从原点处向负 z 轴看变换后的该物体等于原来相机位置处看向原来物体的样子，也就是说，得到一个视图变换矩阵，让物体经过该矩阵的变换，达到屏幕显示的物体等于摄像机在原来位置处想要看到的物体的效果。进一步说，关键在于——将相机固定住，所有的移动都是物体在移动</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/15b83597-7bb1-4818-b44b-a790899a53f9-11709514.jpg" alt></p></li><li><p>如何将当前相机（左）变换到规定的方向（右）</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/305737c0-7340-4837-aeb0-b4526b5f978a-11709514.jpg" alt></p><ul><li><p>通过一个变换矩阵，其中 T（view）为平移矩阵，R（view）为旋转矩阵。</p><ul><li><p>可以验证，R 逆分别对 X(1,0,0,0)、Y(0,1,0,0)、Z(0,0,1,0)进行变换后，就可以得到 g×t、t、-g</p></li><li><p>如何写出 R 的逆矩阵？从右图的标准位置向左变换即可。</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/6ea2e63d-54d3-40bc-9aa1-12e1db58e706-11709514.jpg" alt></p></li></ul></li></ul></li></ul></li><li><p>2.投影变换</p><ul><li><p>正交投影</p><ul><li><p>相机看作一个平面。将空间中的所有物体经过变换矩阵统统变换到以原点为中心的边长为 2 的立方体中，注意是先平移到原点后放缩为立方体，其变换矩阵如下：（此时物体会被放缩变形，但之后会再进行视口变换，再次对物体进行放缩还原）</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/cf838ce3-a04b-4e9c-a9ed-78c28f7bc83e-11709514.jpg" alt></p></li></ul></li><li><p>透视投影</p><ul><li><p>相机看作一个点。将空间中的物体所在面映射到一个固定的平面，可以看作先将远处的平面压缩为等同于固定平面大小的平面，得到上图的最左边的立方体，然后再进行正交投影得到以原点为中心的边长为 2 的立方体。</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/48860929-7010-4941-af7c-c7c3c3ae8f5c-11709514.jpg" alt></p></li><li><p>规定：近处的平面的大小和位置永远不变；远处平面的大小会被压缩，但远近（z 值不变）；远处平面的中心点在压缩后也不变。<a href="https://dreamfields.github.io/2021/08/06/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/">经过证明</a>，中间的点会向远处的平面靠近。</p></li><li><p>透视投影矩阵的形式见： <a href="https://dreamfields.github.io/2021/08/06/GAMES101%E9%87%8D%E8%A6%81%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC%E8%A1%A5%E5%85%85/">GAMES101 重要公式推导与算法补充</a></p></li></ul></li></ul></li></ul></li></ul><h1 id="光栅化"><a class="markdownIt-Anchor" href="#光栅化"></a> 光栅化</h1><ul><li><p>光栅化是一种将几何图元变为二维图像的过程。</p><ul><li><p>视口变换：将经过视图和投影变换后，得到的二维平面将会是中心点在原点、边长为 2 的正方形，视口变换就是将该正方形重新拉伸为实际的长方形，并将左下角移动到原点的过程，便于将像素值存储到二维矩阵中。在 OpenGL 中，视口变换是通过 glViewport 函数来完成的。</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/6aba5f6a-94a1-4a3d-bd57-338475d7f0e1-11709514.jpg" alt></p></li><li><p>这个过程与 z 并不相关，注意是先放缩为矩形后平移，其变换矩阵如下：</p><p><img src="/2021/12/26/Lecture-04-05-%E6%97%8B%E8%BD%AC&%E5%85%89%E6%A0%85%E5%8C%96/5b874574-796c-4b3c-8da2-03a6065a548a-11709514.jpg" alt></p></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lecture 02-03 线性代数基础与线性变换</title>
    <link href="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&amp;%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/"/>
    <url>/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&amp;%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="线性代数基础"><a class="markdownIt-Anchor" href="#线性代数基础"></a> 线性代数基础</h1><ul><li><p>叉乘计算公式（两个向量的叉积等价于一个矩阵与一个向量的乘积）</p><p><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/52012971-bac3-4e11-9ba2-73fd1f57b629-11709514.jpg" alt></p></li><li><p>任意向量在三维坐标中的分解（该向量在三个基方向上的投影之和）</p><p><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/fe4ca04a-0d81-4f06-84c0-d5c72e06226e-11709514.jpg" alt></p></li><li><p>向量与矩阵的联系</p><p><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/00568a0e-8eac-43bc-af48-9ff6cb4b1eff-11709514.jpg" alt></p></li></ul><h1 id="线性变换"><a class="markdownIt-Anchor" href="#线性变换"></a> 线性变换</h1><ul><li><p>基本概念</p><ul><li>如果 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msup><mi>A</mi><mi>T</mi></msup><mo>=</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">AA^T=E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>（E 为单位矩阵）或 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>A</mi><mi>T</mi></msup><mi>A</mi><mo>=</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">A^TA=E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>，则 n 阶实矩阵 A 称为正交矩阵</li><li>设 A 是一个 n 阶矩阵，若存在另一个 n 阶矩阵 B，使得： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>B</mi><mo>=</mo><mi>B</mi><mi>A</mi><mo>=</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">AB=BA=E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span> ，则称方阵 A 可逆，并称方阵 B 是 A 的逆矩阵</li></ul></li><li><p>齐次坐标的目的：将线性变换（压缩、旋转等）和非线性变换（平移）都用一个变换矩阵来表示。向量和点的区别：<strong>3D 向量的第 4 个代数分量是 0，而 3D 点的第 4 个代数分量是 1。</strong></p><p><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/3b2d1d7d-0b8a-4162-a6ec-cd26254f8ce9-11709514.jpg" alt><br><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/19f91740-8e76-482a-a411-fdd3c516cc62-11709514.jpg" alt></p></li><li><p>仿射变换，又称仿射映射，是指在<a href="https://baike.baidu.com/item/%E5%87%A0%E4%BD%95/303227">几何</a>中，一个<a href="https://baike.baidu.com/item/%E5%90%91%E9%87%8F%E7%A9%BA%E9%97%B4/5936597">向量空间</a>进行一次<a href="https://baike.baidu.com/item/%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/5904192">线性变换</a>并接上一个<a href="https://baike.baidu.com/item/%E5%B9%B3%E7%A7%BB/2376933">平移</a>，变换为另一个向量空间。</p></li><li><p>投影变换（projection transformation）是将一种<a href="https://baike.baidu.com/item/%E5%9C%B0%E5%9B%BE%E6%8A%95%E5%BD%B1">地图投影</a>点的<a href="https://baike.baidu.com/item/%E5%9D%90%E6%A0%87%E5%8F%98%E6%8D%A2/5261943">坐标变换</a>为另一种地图投影点的<a href="https://baike.baidu.com/item/%E5%9D%90%E6%A0%87/85345">坐标</a>的过程。研究投影点坐标变换的理论和方法。</p></li><li><p>从中可以思考得知，对于平移 T、旋转 R、缩放 S 这 3 个最常见的仿射变换，平移变换只对于点才有意义，因为普通向量没有位置概念，只有大小和方向<br><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/20220816204532.png" alt></p></li><li><p>表示旋转的时候，变换矩阵的逆矩阵等于变换矩阵的转置（说明该变换矩阵为正交矩阵）</p><p><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/ffe289b4-2652-4ceb-a63e-020602e17b64-11709514.jpg" alt></p></li><li><p>如何判断一个点是否在三角形中？<br><img src="/2021/12/24/Lecture-02-03-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E5%9F%BA%E7%A1%80&%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/20220817112618.png" alt><br>按照逆时针方向连接三个顶点形成三个向量：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>A</mi><mi>B</mi></mrow><mo>⃗</mo></mover><mo>×</mo><mover accent="true"><mrow><mi>A</mi><mi>P</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{AB} \times\vec{AP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0496599999999998em;vertical-align:-0.08333em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>B</mi><mi>C</mi></mrow><mo>⃗</mo></mover><mo>×</mo><mover accent="true"><mrow><mi>B</mi><mi>P</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{BC}\times\vec{BP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0496599999999998em;vertical-align:-0.08333em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>C</mi><mi>A</mi></mrow><mo>⃗</mo></mover><mo>×</mo><mover accent="true"><mrow><mi>C</mi><mi>P</mi></mrow><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{CA}\times\vec{CP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0496599999999998em;vertical-align:-0.08333em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">A</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9663299999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9663299999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewbox="0 0 471 714" preserveaspectratio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"/></svg></span></span></span></span></span></span></span></span></span></span>，计算它们的结果是否同号（同为正或者同为负），是，则在三角形内部。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>GAMES101</category>
      
      <category>Theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CG</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端规范</title>
    <link href="/2021/12/06/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/"/>
    <url>/2021/12/06/%E5%89%8D%E7%AB%AF%E8%A7%84%E8%8C%83/</url>
    
    <content type="html"><![CDATA[<h1 id="代码编辑器-使用-vscode"><a class="markdownIt-Anchor" href="#代码编辑器-使用-vscode"></a> 🔵代码编辑器: 使用 vscode</h1><p>编辑器使用vscode，代码的规范基本都要依赖于 vscode的插件</p><h3 id="这里需要使用的插件有"><a class="markdownIt-Anchor" href="#这里需要使用的插件有"></a> 这里需要使用的插件有:</h3><ul><li>ESLint</li><li>koroFileHeader</li><li>Prettier - Code formatter</li></ul><h3 id="可选插件"><a class="markdownIt-Anchor" href="#可选插件"></a> 可选插件</h3><ul><li>Chinese (Simplified) Language Pack for Visual Studio Code  (中文插件)</li><li>GitLens — Git supercharged</li><li>One Dark Pro</li><li>vscode-icons</li></ul><h1 id="包管理器使用-yarn-替代npm"><a class="markdownIt-Anchor" href="#包管理器使用-yarn-替代npm"></a> 🔵包管理器：使用 Yarn 替代NPM</h1><h2 id="yarn-优点"><a class="markdownIt-Anchor" href="#yarn-优点"></a> yarn 优点:</h2><h3 id="1缓存"><a class="markdownIt-Anchor" href="#1缓存"></a> 1.缓存</h3><p>Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。</p><h3 id="2安全性"><a class="markdownIt-Anchor" href="#2安全性"></a> 2.安全性</h3><p>在执行代码之前，Yarn 会通过算法校验每个安装包的完整性。</p><h3 id="3可靠性"><a class="markdownIt-Anchor" href="#3可靠性"></a> 3.可靠性</h3><p>使用详细、简洁的锁文件格式和明确的安装算法，Yarn 能够保证在不同系统上无差异的工作。</p><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><p>中文文档: <a href="https://yarn.bootcss.com/docs/usage/">https://yarn.bootcss.com/docs/usage/</a></p><h3 id="初始化一个新项目"><a class="markdownIt-Anchor" href="#初始化一个新项目"></a> 初始化一个新项目:</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yarn init<br></code></pre></td></tr></table></figure><h3 id="添加依赖包"><a class="markdownIt-Anchor" href="#添加依赖包"></a> 添加依赖包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">yarn add [package]<br>yarn add [package]@[version]<br>yarn add [package]@[tag]<br></code></pre></td></tr></table></figure><h3 id="将依赖项添加到不同依赖项类别中"><a class="markdownIt-Anchor" href="#将依赖项添加到不同依赖项类别中"></a> 将依赖项添加到不同依赖项类别中</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">yarn add [<span class="hljs-keyword">package</span>] <span class="hljs-comment">--dev</span><br>yarn add [<span class="hljs-keyword">package</span>] <span class="hljs-comment">--peer</span><br>yarn add [<span class="hljs-keyword">package</span>] <span class="hljs-comment">--optional</span><br></code></pre></td></tr></table></figure><h3 id="升级依赖包"><a class="markdownIt-Anchor" href="#升级依赖包"></a> 升级依赖包</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs inform7">yarn upgrade <span class="hljs-comment">[package]</span><br>yarn upgrade <span class="hljs-comment">[package]</span>@<span class="hljs-comment">[version]</span><br>yarn upgrade <span class="hljs-comment">[package]</span>@<span class="hljs-comment">[tag]</span><br></code></pre></td></tr></table></figure><h3 id="移除依赖包"><a class="markdownIt-Anchor" href="#移除依赖包"></a> 移除依赖包</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">yarn <span class="hljs-built_in">remove</span> [<span class="hljs-built_in">package</span>]<br></code></pre></td></tr></table></figure><h3 id="安装项目的全部依赖"><a class="markdownIt-Anchor" href="#安装项目的全部依赖"></a> 安装项目的全部依赖</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yarn<br>或者 yarn <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><h1 id="静态代码分析工具eslint"><a class="markdownIt-Anchor" href="#静态代码分析工具eslint"></a> 🔵静态代码分析工具：ESLint</h1><p>ESLint 是在 ECMAScript/JavaScript 代码中识别和报告模式匹配的工具，它的目标是保证代码的一致性和避免错误。</p><p>在 TypeScript 中直使用 tslint 来对代码质量进行保障。但是 tslint 是 eslint 的子集。tslint 大概提供了 151 条基础规则，eslint 却有 249 条，更不用说 eslint 发达的生态了，提供了更多的规范代码。</p><h4 id="例如"><a class="markdownIt-Anchor" href="#例如"></a> 例如：</h4><p>ESLint 的标准里面禁止使用var ，需要使用let 或者 const 替代。</p><h2 id="1安装-eslint"><a class="markdownIt-Anchor" href="#1安装-eslint"></a> 1.安装 Eslint:</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">yarn <span class="hljs-built_in">add</span> eslint <span class="hljs-comment">--dev</span><br></code></pre></td></tr></table></figure><h2 id="2使用umi中的eslint-规则-umi-fabric"><a class="markdownIt-Anchor" href="#2使用umi中的eslint-规则-umi-fabric"></a> 2.使用umi中的eslint 规则 umi-fabric:</h2><p>文档: <a href="https://pro.ant.design/blog/use-eslint-typescript-cn">https://pro.ant.design/blog/use-eslint-typescript-cn</a></p><p>🌟🌟umi-fabric 🌟🌟, 这个库提供了 eslint ，stylelint 和 prettier 的一些预设。</p><h3 id="安装-umi-fabric"><a class="markdownIt-Anchor" href="#安装-umi-fabric"></a> 安装 umi-fabric</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">yarn <span class="hljs-keyword">add</span> <span class="hljs-variable">@umijs</span><span class="hljs-operator">/</span>fabric <span class="hljs-comment">--dev</span><br></code></pre></td></tr></table></figure><h3 id="并且在根目录-eslintrcjs-中做如下配置"><a class="markdownIt-Anchor" href="#并且在根目录-eslintrcjs-中做如下配置"></a> 并且在根目录 .eslintrc.js 中做如下配置</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-keyword">const</span> fabric = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@umijs/fabric&#x27;</span>);<br><span class="hljs-built_in">module</span>.<span class="hljs-built_in">exports</span> = fabric.eslint;<br></code></pre></td></tr></table></figure><h3 id="在-vscode-中-eslint-的插件并不会默认的去-lint-ts-文件我们需要在-settingsjson-中设置"><a class="markdownIt-Anchor" href="#在-vscode-中-eslint-的插件并不会默认的去-lint-ts-文件我们需要在-settingsjson-中设置"></a> 在 vscode 中 eslint 的插件并不会默认的去 lint .ts 文件，我们需要在 settings.json 中设置</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-string">&quot;eslint.validate&quot;</span>: [<br> <span class="hljs-string">&quot;javascript&quot;</span>,<br> <span class="hljs-string">&quot;javascriptreact&quot;</span>,<br> <span class="hljs-string">&quot;typescript&quot;</span>,<br> <span class="hljs-string">&quot;typescriptreact&quot;</span><br>],<br></code></pre></td></tr></table></figure><h2 id="3安装vscode-中的eslint-插件"><a class="markdownIt-Anchor" href="#3安装vscode-中的eslint-插件"></a> 3.安装vscode 中的Eslint 插件</h2><p>Eslint 扩展使用安装在打开的工作区文件夹中的ESLint库。写代码的时候可以静态检测代码。</p><p>eslint可以按照使用情况来自己定义哪些规则需要使用，哪些不需要使用。这里给出一个项目中的配置文件参考</p><h3 id="eslintrcjs-配置文件参考"><a class="markdownIt-Anchor" href="#eslintrcjs-配置文件参考"></a> .eslintrc.js 配置文件参考：</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-built_in">module</span>.exports = &#123;<br> <span class="hljs-attr">extends</span>: [<span class="hljs-built_in">require</span>.resolve(<span class="hljs-string">&#x27;@umijs/fabric/dist/eslint&#x27;</span>)],<br> <span class="hljs-attr">globals</span>: &#123;<br>  <span class="hljs-attr">ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">page</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">REACT_APP_ENV</span>: <span class="hljs-literal">true</span>,<br> &#125;,<br> <span class="hljs-attr">rules</span>: &#123;<br>  <span class="hljs-string">&#x27;no-param-reassign&#x27;</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">&#x27;no-restricted-syntax&#x27;</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">&#x27;no-underscore-dangle&#x27;</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">&#x27;import/no-unresolved&#x27;</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">&#x27;@typescript-eslint/naming-convention&#x27;</span>: <span class="hljs-number">0</span>,<br> &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h1 id="代码格式化工具prettier-code-formatter"><a class="markdownIt-Anchor" href="#代码格式化工具prettier-code-formatter"></a> 🔵代码格式化工具：Prettier - Code formatter</h1><p>Prettier 是一个“有主见”的代码格式化工具，支持列表如下： JavaScript，包括 ES2017 JSX Flow TypeScript CSS、LESS 和 SCSS</p><h2 id="安装-prettier-包"><a class="markdownIt-Anchor" href="#安装-prettier-包"></a> 安装 Prettier 包</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">yarn <span class="hljs-built_in">add</span> prettier <span class="hljs-comment">--dev</span><br></code></pre></td></tr></table></figure><h2 id="安装vscode-中的prettier-插件"><a class="markdownIt-Anchor" href="#安装vscode-中的prettier-插件"></a> 安装vscode 中的Prettier 插件</h2><h3 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法:</h3><p>快捷键 : <strong>shift + alt +F</strong></p><p>或者 参考官方文档中 的方法:</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dos">\<span class="hljs-number">1</span>. <span class="hljs-built_in">CMD</span> + <span class="hljs-built_in">Shift</span> + P -&gt; <span class="hljs-built_in">Format</span> Document<br>OR<br>\<span class="hljs-number">1</span>. Select the text you want to Prettify<br>\<span class="hljs-number">2</span>. <span class="hljs-built_in">CMD</span> + <span class="hljs-built_in">Shift</span> + P -&gt; <span class="hljs-built_in">Format</span> Selection<br></code></pre></td></tr></table></figure><h2 id="配置文件参考"><a class="markdownIt-Anchor" href="#配置文件参考"></a> 配置文件参考</h2><p><strong>这里同样也引入了umi中的规则 🌟🌟umi-fabric 🌟🌟</strong></p><p><strong>.prettierrc.js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> fabric = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;@umijs/fabric&#x27;</span>);<br><span class="hljs-built_in">module</span>.exports = &#123;<br> ...fabric.prettier,<br>&#125;;<br></code></pre></td></tr></table></figure><h1 id="注释插件-korofileheader"><a class="markdownIt-Anchor" href="#注释插件-korofileheader"></a> 🔵注释插件: koroFileHeader</h1><p>不一定所有的函数都需要写注释，一般是比较关键的函数需要注释。文件头部的注释在安装插件后在创建的时候会默认加上。</p><h3 id="1文件头部添加注释"><a class="markdownIt-Anchor" href="#1文件头部添加注释"></a> 1.文件头部添加注释:</h3><ul><li>在文件开头添加注释，记录文件信息/文件的传参/出参等</li><li>支持用户高度自定义注释选项, 适配各种需求和注释。</li><li>保存文件的时候，自动更新最后的编辑时间和编辑人</li><li>快捷键：window：ctrl+alt+i,mac：ctrl+cmd+i, linux: ctrl+meta+I</li></ul><h3 id="2在光标处添加函数注释"><a class="markdownIt-Anchor" href="#2在光标处添加函数注释"></a> 2.在光标处添加函数注释:</h3><ul><li>在光标处自动生成一个注释模板, 自动解析函数参数，生成函数参数注释。</li><li>支持用户高度自定义注释选项</li><li>快捷键：window：ctrl+alt+t,mac：ctrl+cmd+t,linux: ctrl+meta+t</li><li>快捷键不可用很可能是被占用了,参考这里</li></ul><h3 id="函数注释配置参考"><a class="markdownIt-Anchor" href="#函数注释配置参考"></a> 函数注释配置参考:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&quot;fileheader.cursorMode&quot;</span>: &#123;<br>  <span class="hljs-comment">// 函数注释</span><br>  <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;param&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;return&quot;</span>: <span class="hljs-string">&quot;&quot;</span><br> &#125;,<br></code></pre></td></tr></table></figure><h3 id="文件头部注释配置参考"><a class="markdownIt-Anchor" href="#文件头部注释配置参考"></a> 文件头部注释配置参考:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-string">&quot;fileheader.customMade&quot;</span>: &#123;<br>  <span class="hljs-comment">// 头部注释</span><br>  <span class="hljs-string">&quot;Author&quot;</span>: <span class="hljs-string">&quot;linkenzone&quot;</span>, <span class="hljs-comment">// 文件编辑者</span><br>  <span class="hljs-string">&quot;Date&quot;</span>: <span class="hljs-string">&quot;Do not edit&quot;</span>, <span class="hljs-comment">// 文件创建时间</span><br>  <span class="hljs-string">&quot;Descripttion&quot;</span>: <span class="hljs-string">&quot;Do not edit&quot;</span>, <span class="hljs-comment">// 文件描述</span><br> &#125;,<br></code></pre></td></tr></table></figure><h1 id="页面代码结构推荐"><a class="markdownIt-Anchor" href="#页面代码结构推荐"></a> 🔵页面代码结构推荐</h1><p>参考: <a href="https://beta-pro.ant.design/docs/folder-cn">https://beta-pro.ant.design/docs/folder-cn</a></p><p>为了让项目代码组织更加规范，让开发能够更方便的定位到相关页面组件代码，我们定义了一套规范，该规范当前只作为推荐的指导，并非强制。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">src<br>├── components<br>└── pages<br>    ├── Welcome        <span class="hljs-regexp">//</span> 路由组件下不应该再包含其他路由组件，基于这个约定就能清楚的区分路由组件和非路由组件了<br>    |   ├── components <span class="hljs-regexp">//</span> 对于复杂的页面可以再自己做更深层次的组织，但建议不要超过三层<br>    |   ├── Form.tsx<br>    |   ├── index.tsx  <span class="hljs-regexp">//</span> 页面组件的代码<br>    |   └── index.less <span class="hljs-regexp">//</span> 页面样式<br>    ├── Order          <span class="hljs-regexp">//</span> 路由组件下不应该再包含其他路由组件，基于这个约定就能清楚的区分路由组件和非路由组件了<br>    |   ├── index.tsx<br>    |   └── index.less<br>    ├── user           <span class="hljs-regexp">//</span> 一系列页面推荐通过小写的单一字母做 group 目录<br>    |   ├── components <span class="hljs-regexp">//</span> group 下公用的组件集合<br>    |   ├── Login      <span class="hljs-regexp">//</span> group 下的页面 Login<br>    |   ├── Register   <span class="hljs-regexp">//</span> group 下的页面 Register<br>    |   └── util.ts    <span class="hljs-regexp">//</span> 这里可以有一些共用方法之类，不做推荐和约束，看业务场景自行做组织<br>    └── *              <span class="hljs-regexp">//</span> 其它页面组件代码<br></code></pre></td></tr></table></figure><p>所有路由组件（会配置在路由配置中的组件）我们推荐以大驼峰命名打平到 pages 下面第一级（复杂的项目可以增加 group 层级，在 group 下放置 pages）。不建议在路由组件内部再嵌套路由组件 - 不方便分辨一个组件是否是路由组件，而且不方便快速从全局定位到路由组件。</p><p>我们推荐尽可能的拆分路由组件为更细粒度的组件，对于多个页面可能会用到的组件我们推荐放到 src/components 中，对于只是被单个页面依赖的（区块）组件，我们推荐就近维护到路由组件文件夹下即可。</p><h1 id="其他的规范参考"><a class="markdownIt-Anchor" href="#其他的规范参考"></a> 🔵其他的规范参考</h1><p><strong>Isobar 前端代码规范 及 最佳实践:</strong></p><p><a href="http://coderlmn.github.io/code-standards/#_javascript_libraries">http://coderlmn.github.io/code-standards/#_javascript_libraries</a></p><p><strong>使用 stylelint 来约束样式文件</strong></p><p><a href="https://stylelint.io/">https://stylelint.io/</a></p><p><strong>TypeScript 规范参考</strong></p><p><a href="https://beta-pro.ant.design/docs/type-script-cn">https://beta-pro.ant.design/docs/type-script-cn</a></p><p><strong>antd pro v5 参考</strong></p><p><a href="https://beta-pro.ant.design/">https://beta-pro.ant.design/</a></p><p><strong>antd pro v4 参考</strong></p><p><a href="https://pro.ant.design/index-cn">https://pro.ant.design/index-cn</a></p><p>…</p>]]></content>
    
    
    <categories>
      
      <category>Front-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>规范</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LearnOpenGL-环境配置</title>
    <link href="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="step1获取glfw与glad依赖库"><a class="markdownIt-Anchor" href="#step1获取glfw与glad依赖库"></a> Step1：获取GLFW与GLAD依赖库</h1><p>GLFW是一个专门针对OpenGL的C语言库，它提供了一些渲染物体所需的最低限度的接口。它允许用户创建OpenGL上下文，定义窗口参数以及处理用户输入。该步骤保证它恰当地创建OpenGL上下文并显示窗口。</p><p>GLAD是用来管理OpenGL的函数指针的，所以在调用任何OpenGL的函数之前我们需要初始化GLAD。</p><blockquote><p>获取教程参考链接：</p><ul><li><a href="https://learnopengl-cn.github.io/01%20Getting%20started/02%20Creating%20a%20window/">Learn OpenGL——创建窗口</a></li><li><a href="https://blog.csdn.net/u012278016/article/details/105582080">openGL学习笔记七： glad库及使用</a></li></ul></blockquote><p>按照上面的参考链接得到的文件，整理为如下结构：</p><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-11-32-17.png" alt="目录结构"></p><h1 id="step2创建项目并编写代码"><a class="markdownIt-Anchor" href="#step2创建项目并编写代码"></a> Step2：创建项目并编写代码</h1><p>按照以下步骤依次创建项目：</p><ul><li>创建空项目</li></ul><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-11-23-54.png" alt="创建空项目"></p><ul><li>将<code>src/glad.c</code>加入源文件</li></ul><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-11-30-28.png" alt="右键选择"></p><ul><li><p>在源文件中创建<code>main.cpp</code><br><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-11-35-50.png" alt="创建main.cpp"></p></li><li><p>编写代码</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;glad/glad.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;GLFW/glfw3.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-comment">/*对窗口注册一个回调函数(Callback Function)，它会在每次窗口大小被调整的时候被调用。</span><br><span class="hljs-comment">这个帧缓冲大小函数需要一个GLFWwindow作为它的第一个参数，以及两个整数表示窗口的新维度。</span><br><span class="hljs-comment">每当窗口改变大小，GLFW会调用这个函数并填充相应的参数供你处理。*/</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">framebuffer_size_callback</span><span class="hljs-params">(GLFWwindow* window, <span class="hljs-keyword">int</span> width, <span class="hljs-keyword">int</span> height)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">glViewport</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, width, height);<br>&#125;<br><br><span class="hljs-comment">/*检查用户是否按下了返回键(Esc)。如果没有按下，glfwGetKey将会返回GLFW_RELEASE。如果用户的确按下了返回键，我们将通过</span><br><span class="hljs-comment">glfwSetwindowShouldClose使用把WindowShouldClose属性设置为 true的方法关闭GLFW。</span><br><span class="hljs-comment">下一次while循环的条件检测将会失败，程序将会关闭。</span><br><span class="hljs-comment">接下来在渲染循环的每一个迭代中调用processInput</span><br><span class="hljs-comment">*/</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">processInput</span><span class="hljs-params">(GLFWwindow* window)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//glfwGetKey函数，它需要一个窗口以及一个按键作为输入，返回这个按键是否正在被按下</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">glfwGetKey</span>(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)<br>        <span class="hljs-built_in">glfwSetWindowShouldClose</span>(window, <span class="hljs-literal">true</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">glfwInit</span>();<br>    <span class="hljs-comment">// 将主版本号(Major)和次版本号(Minor)都设为3</span><br>    <span class="hljs-built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MAJOR, <span class="hljs-number">3</span>);<br>    <span class="hljs-built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MINOR, <span class="hljs-number">3</span>);<br>    <span class="hljs-comment">// 告诉GLFW我们使用的是核心模式(Core-profile)</span><br>    <span class="hljs-built_in">glfwWindowHint</span>(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);<br>    <span class="hljs-comment">//glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); // Mac OS X系统，你还需要加这行代码</span><br><br>    <span class="hljs-comment">// 创建窗口对象</span><br>    GLFWwindow* window = <span class="hljs-built_in">glfwCreateWindow</span>(<span class="hljs-number">800</span>, <span class="hljs-number">600</span>, <span class="hljs-string">&quot;LearnOpenGL&quot;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">if</span> (window == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        std::cout &lt;&lt; <span class="hljs-string">&quot;Failed to create GLFW window&quot;</span> &lt;&lt; std::endl;<br>        <span class="hljs-built_in">glfwTerminate</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-comment">//通知GLFW将我们窗口的上下文设置为当前线程的主上下文</span><br>    <span class="hljs-built_in">glfwMakeContextCurrent</span>(window);<br><br>    <span class="hljs-comment">//给GLAD传入了用来加载系统相关的OpenGL函数指针地址的函数</span><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">gladLoadGLLoader</span>((GLADloadproc)glfwGetProcAddress))<br>    &#123;<br>        std::cout &lt;&lt; <span class="hljs-string">&quot;Failed to initialize GLAD&quot;</span> &lt;&lt; std::endl;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//调用glViewport函数来设置窗口的维度(Dimension)</span><br>    <span class="hljs-comment">//glViewport函数前两个参数控制窗口左下角的位置。第三个和第四个参数控制渲染窗口的宽度和高度（像素）。</span><br>    <span class="hljs-comment">// 处理过的OpenGL坐标范围只为-1到1，因此我们事实上将(-1到1)范围内的坐标映射到(0, 800)和(0, 600)。</span><br>    <span class="hljs-built_in">glViewport</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">800</span>, <span class="hljs-number">600</span>);<br><br>    <span class="hljs-comment">//注册这个函数，告诉GLFW我们希望每当窗口调整大小的时候调用这个函数</span><br>    <span class="hljs-comment">//还可以将我们的函数注册到其它很多的回调函数中</span><br>    <span class="hljs-built_in">glfwSetFramebufferSizeCallback</span>(window, framebuffer_size_callback);<br><br><br>    <span class="hljs-comment">//渲染循环(Render Loop)，它能在我们让GLFW退出前一直保持运行</span><br>    <span class="hljs-comment">// glfwWindowShouldClose函数在我们每次循环的开始前检查一次GLFW是否被要求退出，如果是的话该函数返回</span><br>    <span class="hljs-comment">// true然后渲染循环便结束了，之后为我们就可以关闭应用程序了。</span><br>    <span class="hljs-keyword">while</span> (!<span class="hljs-built_in">glfwWindowShouldClose</span>(window))<br>    &#123;<br>        <span class="hljs-built_in">processInput</span>(window);<br><br>        <span class="hljs-comment">//各种渲染指令</span><br>        <span class="hljs-comment">//------------</span><br>        <span class="hljs-comment">//glClearColor来设置清空屏幕所用的颜色。当调用glClear函数，清除颜色缓冲之后，整个颜色缓冲都会被</span><br>        <span class="hljs-comment">//填充为glClearColor里所设置的颜色。</span><br>        <span class="hljs-built_in">glClearColor</span>(<span class="hljs-number">0.2f</span>, <span class="hljs-number">0.3f</span>, <span class="hljs-number">0.3f</span>, <span class="hljs-number">1.0f</span>);<br>        <span class="hljs-built_in">glClear</span>(GL_COLOR_BUFFER_BIT);<br><br>        <br>        <span class="hljs-comment">//检查并调用事件，交换缓冲</span><br>        <span class="hljs-comment">//------------------------</span><br>        <span class="hljs-comment">//glfwSwapBuffers函数会交换颜色缓冲（它是一个储存着GLFW窗口每一个像素颜色值的大缓冲），它在这一</span><br>        <span class="hljs-comment">//迭代中被用来绘制，并且将会作为输出显示在屏幕上。</span><br>        <span class="hljs-built_in">glfwSwapBuffers</span>(window);<br><br>        <span class="hljs-comment">//glfwPollEvents函数检查有没有触发什么事件（比如键盘输入、鼠标移动等）、更新窗口状态，并调用对应的</span><br>        <span class="hljs-comment">// 回调函数（可以通过回调方法手动设置）</span><br>        <span class="hljs-built_in">glfwPollEvents</span>();<br>    &#125;<br><br>    <span class="hljs-comment">//当渲染循环结束后我们需要正确释放 / 删除之前的分配的所有资源</span><br>    <span class="hljs-built_in">glfwTerminate</span>();<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="step3配置项目属性"><a class="markdownIt-Anchor" href="#step3配置项目属性"></a> Step3：配置项目属性</h1><p>到了这一步，还不能正常运行，需要对项目的属性进行配置：</p><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-11-40-16.png" alt="打开项目属性"></p><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-11-42-19.png" alt="将include文件夹加入包含目录"></p><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-23-02-53.png" alt="将lib文件夹加入库目录"></p><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-23-05-50.png" alt="添加附加依赖项"></p><h1 id="运行结果"><a class="markdownIt-Anchor" href="#运行结果"></a> 运行结果</h1><p>配置完成之后，可以看到正常的结果为一个深绿色窗口：</p><p><img src="/2021/08/02/LearnOpenGL-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2021-08-03-23-08-01.png" alt="运行结果"></p>]]></content>
    
    
    <categories>
      
      <category>CG</category>
      
      <category>Configuration</category>
      
      <category>OpenGL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenGL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DWV及其React实践简要学习</title>
    <link href="/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/"/>
    <url>/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="dwv简介"><a class="markdownIt-Anchor" href="#dwv简介"></a> DWV简介</h1><blockquote><p>DWV (DICOM Web Viewer) is an open source zero footprint medical image viewer.</p></blockquote><p>DWV是一款开源的Web端DICOM医学影像查看器，这是其 <a href="https://ivmartel.github.io/dwv/doc/stable/index.html">官方文档</a>。</p><p>从其架构上来看：<br><img src="/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/architecture-overview.png" alt="DWV项目架构"></p><p>拆分为两个过程：一是<strong>load</strong>，对DICOM数据的加载；二是<strong>view</strong>，对视图的渲染，包括图层控制（视图层-对图片渲染展示、绘制层-利用Konva进行标注）和工具控制（控制工具的加载和派发交互事件到已选工具）两部分。</p><h1 id="react实践"><a class="markdownIt-Anchor" href="#react实践"></a> React实践</h1><p>本次主要学习如何对项目进行组织并应用到React框架上，因此重点关注其在<a href="https://github.com/ivmartel/dwv-react">React上的实践</a></p><p>可以很方便地下载源码并运行起来这个小的Demo，具体效果是将DICOM文件拖入区域，读取数据后渲染出一幅图像，并利用工具进行操作。</p><p><img src="/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/2021-07-23-17-09-37.png" alt="运行结果"></p><p><img src="/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/2021-07-23-17-12-32.png" alt="运行结果"></p><p>在控制台看DOM元素的结构，标注信息层和图像层是分开到2个canvas中的：</p><p><img src="/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/2021-07-23-17-41-04.png" alt="DOM元素结构"></p><p>接下来看源码，结构如下：<br><img src="/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/2021-07-23-17-13-55.png" alt="源码结构"></p><p>标准的React项目，UI界面框架用的是<code>Material-UI</code>，现在主要看<code>DwvComponent</code>组件中的标尺如何进行实现。</p><h3 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">props</span>)</span> &#123;<br>    <span class="hljs-built_in">super</span>(props);<br>    <span class="hljs-built_in">this</span>.state = &#123;<br>      <span class="hljs-comment">// 版本控制</span><br>      <span class="hljs-attr">versions</span>: &#123;<br>        <span class="hljs-attr">dwv</span>: dwv.getVersion(),<br>        <span class="hljs-attr">react</span>: React.version<br>      &#125;,<br><br>      <span class="hljs-comment">// 工具设置</span><br>      <span class="hljs-attr">tools</span>: &#123;<br>        <span class="hljs-attr">Scroll</span>: &#123;&#125;,<br>        <span class="hljs-attr">ZoomAndPan</span>: &#123;&#125;,<br>        <span class="hljs-attr">WindowLevel</span>: &#123;&#125;,<br>        <span class="hljs-attr">Draw</span>: &#123;<br>          <span class="hljs-attr">options</span>: [<span class="hljs-string">&#x27;Ruler&#x27;</span>], <span class="hljs-comment">// 声明绘制工具的“选项”为“标尺”</span><br>          <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;factory&#x27;</span>,<br>          <span class="hljs-attr">events</span>: [<span class="hljs-string">&#x27;drawcreate&#x27;</span>, <span class="hljs-string">&#x27;drawchange&#x27;</span>, <span class="hljs-string">&#x27;drawmove&#x27;</span>, <span class="hljs-string">&#x27;drawdelete&#x27;</span>] <span class="hljs-comment">// 包括4个响应事件</span><br>        &#125;<br>      &#125;,<br>      <span class="hljs-attr">toolNames</span>: [],<br>      <span class="hljs-attr">selectedTool</span>: <span class="hljs-string">&#x27;Select Tool&#x27;</span>,<br>      <br>      <span class="hljs-comment">// 数据加载相关</span><br>      <span class="hljs-attr">loadProgress</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">dataLoaded</span>: <span class="hljs-literal">false</span>,<br>      <span class="hljs-attr">dwvApp</span>: <span class="hljs-literal">null</span>,<br>      <span class="hljs-attr">metaData</span>: [],<br>      <span class="hljs-attr">showDicomTags</span>: <span class="hljs-literal">false</span>,<br>      <br>      <span class="hljs-comment">// 工具在菜单上挂载元素</span><br>      <span class="hljs-attr">toolMenuAnchorEl</span>: <span class="hljs-literal">null</span>,<br><br>      <span class="hljs-attr">dropboxDivId</span>: <span class="hljs-string">&#x27;dropBox&#x27;</span>,<br>      <span class="hljs-attr">dropboxClassName</span>: <span class="hljs-string">&#x27;dropBox&#x27;</span>,<br>      <span class="hljs-attr">borderClassName</span>: <span class="hljs-string">&#x27;dropBoxBorder&#x27;</span>,<br>      <span class="hljs-attr">hoverClassName</span>: <span class="hljs-string">&#x27;hover&#x27;</span><br>    &#125;;<br>  &#125;<br></code></pre></td></tr></table></figure><p>在构造函数里直接用state来控制图片数据加载和工具设置</p><h3 id="渲染函数"><a class="markdownIt-Anchor" href="#渲染函数"></a> 渲染函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs JavaScript"><span class="hljs-function"><span class="hljs-title">render</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123; classes &#125; = <span class="hljs-built_in">this</span>.props;<br>    <span class="hljs-keyword">const</span> &#123; versions, tools, toolNames, loadProgress, dataLoaded, metaData, toolMenuAnchorEl &#125; = <span class="hljs-built_in">this</span>.state;<br><br>    <span class="hljs-comment">// 将工具名称通过一个工具控制函数绑定，并返回包括工具的子菜单，toolNames从state中获取</span><br>    <span class="hljs-keyword">const</span> toolsMenuItems = toolNames.map( <span class="hljs-function">(<span class="hljs-params">tool</span>) =&gt;</span><br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">MenuItem</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.handleMenuItemClick.bind(this,</span> <span class="hljs-attr">tool</span>)&#125; <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;tool&#125;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;tool&#125;</span>&gt;</span>&#123;tool&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">MenuItem</span>&gt;</span></span><br>    );<br><br>    <span class="hljs-keyword">return</span> (<br>      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dwv&quot;</span>&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">LinearProgress</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;determinate&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#123;loadProgress&#125;</span> /&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;button-row&quot;</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;contained&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">aria-owns</span>=<span class="hljs-string">&#123;toolMenuAnchorEl</span> ? &#x27;<span class="hljs-attr">simple-menu</span>&#x27; <span class="hljs-attr">:</span> <span class="hljs-attr">null</span>&#125;</span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">aria-haspopup</span>=<span class="hljs-string">&quot;true&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.handleMenuButtonClick&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">disabled</span>=<span class="hljs-string">&#123;!dataLoaded&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;classes.button&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;medium&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">          &gt;</span>&#123; this.state.selectedTool &#125;</span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">ArrowDropDownIcon</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;classes.iconSmall&#125;/</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Menu</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;simple-menu&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">anchorEl</span>=<span class="hljs-string">&#123;toolMenuAnchorEl&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">open</span>=<span class="hljs-string">&#123;Boolean(toolMenuAnchorEl)&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">onClose</span>=<span class="hljs-string">&#123;this.handleMenuClose&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          &gt;</span></span><br><span class="xml">            &#123;toolsMenuItems&#125;</span><br><span class="xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">Menu</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">          <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">variant</span>=<span class="hljs-string">&quot;contained&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">disabled</span>=<span class="hljs-string">&#123;!dataLoaded&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">            <span class="hljs-attr">onClick</span>=<span class="hljs-string">&#123;this.onReset&#125;</span></span></span><br><span class="hljs-tag"><span class="xml">          &gt;</span>Reset<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 省略了tags对话框的DOM --&gt;</span></span><br><span class="xml"></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dropBox&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 这里存放两个图层，一个为图像层，一个为标注层 --&gt;</span></span><br><span class="xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;layerContainer&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml"></span><br><span class="xml">        <span class="hljs-comment">&lt;!-- 省略了页脚的DOM --&gt;</span></span><br><span class="xml"></span><br><span class="xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="xml">    );</span><br><span class="xml">  &#125;</span><br></code></pre></td></tr></table></figure><h3 id="生命周期函数"><a class="markdownIt-Anchor" href="#生命周期函数"></a> 生命周期函数</h3><p><code>componentDidMount</code>函数会在<code>render</code>渲染完之后执行，此时组件已经初始化完毕。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-title">componentDidMount</span>(<span class="hljs-params"></span>)</span> &#123;<br>    <span class="hljs-comment">// create app</span><br>    <span class="hljs-keyword">var</span> app = <span class="hljs-keyword">new</span> dwv.App();<br>    <span class="hljs-comment">// initialise app</span><br>    app.init(&#123;<br>      <span class="hljs-string">&quot;containerDivId&quot;</span>: <span class="hljs-string">&quot;dwv&quot;</span>,<br>      <span class="hljs-string">&quot;tools&quot;</span>: <span class="hljs-built_in">this</span>.state.tools<br>    &#125;);<br><br>    <span class="hljs-comment">// load events</span><br>    <span class="hljs-keyword">let</span> nLoadItem = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">let</span> nReceivedError = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">let</span> nReceivedAbort = <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-comment">// 通过addEventListener函数向类dwv.App中添加事件监听</span><br>    app.addEventListener(<span class="hljs-string">&#x27;loadstart&#x27;</span>, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-comment">/*event*/</span></span>) =&gt;</span> &#123;<br>      ...<br>    &#125;);<br>    <span class="hljs-comment">// 在图片加载后，将工具名称添加到state中</span><br>    app.addEventListener(<span class="hljs-string">&quot;load&quot;</span>, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-comment">/*event*/</span></span>) =&gt;</span> &#123;<br>      <span class="hljs-comment">// set dicom tags</span><br>      <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">metaData</span>: dwv.utils.objectToArray(app.getMetaData())&#125;);<br>      <span class="hljs-comment">// available tools</span><br>      <span class="hljs-keyword">let</span> names = [];<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">const</span> key <span class="hljs-keyword">in</span> <span class="hljs-built_in">this</span>.state.tools) &#123;<br>        <span class="hljs-keyword">if</span> ((key === <span class="hljs-string">&#x27;Scroll&#x27;</span> &amp;&amp; app.canScroll()) ||<br>          (key === <span class="hljs-string">&#x27;WindowLevel&#x27;</span> &amp;&amp; app.canWindowLevel()) ||<br>          (key !== <span class="hljs-string">&#x27;Scroll&#x27;</span> &amp;&amp; key !== <span class="hljs-string">&#x27;WindowLevel&#x27;</span>)) &#123;<br>          names.push(key);<br>        &#125;<br>      &#125;<br>      <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">toolNames</span>: names&#125;);<br>      <span class="hljs-built_in">this</span>.onChangeTool(names[<span class="hljs-number">0</span>]);<br>      <span class="hljs-comment">// set the selected tool</span><br>      <span class="hljs-keyword">let</span> selectedTool = <span class="hljs-string">&#x27;Scroll&#x27;</span><br>      <span class="hljs-keyword">if</span> (app.isMonoSliceData() &amp;&amp; app.getImage().getNumberOfFrames() === <span class="hljs-number">1</span>) &#123;<br>        selectedTool = <span class="hljs-string">&#x27;ZoomAndPan&#x27;</span>;<br>      &#125;<br>      <span class="hljs-built_in">this</span>.onChangeTool(selectedTool);<br>      <span class="hljs-comment">// set data loaded flag</span><br>      <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">dataLoaded</span>: <span class="hljs-literal">true</span>&#125;);<br>    &#125;);<br>    app.addEventListener(<span class="hljs-string">&#x27;loadend&#x27;</span>, <span class="hljs-function">(<span class="hljs-params"><span class="hljs-comment">/*event*/</span></span>) =&gt;</span> &#123;<br>      ...<br>    &#125;);<br>    <br>    ...<br>    <br>    <span class="hljs-comment">// handle window resize</span><br>    <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;resize&#x27;</span>, app.onResize);<br><br>    <span class="hljs-comment">// store</span><br>    <span class="hljs-built_in">this</span>.setState(&#123;<span class="hljs-attr">dwvApp</span>: app&#125;);<br><br>    <span class="hljs-comment">// setup drop box</span><br>    <span class="hljs-built_in">this</span>.setupDropbox(app);<br><br>    <span class="hljs-comment">// possible load from location</span><br>    dwv.utils.loadFromUri(<span class="hljs-built_in">window</span>.location.href, app);<br>  &#125;<br></code></pre></td></tr></table></figure><h3 id="控制函数"><a class="markdownIt-Anchor" href="#控制函数"></a> 控制函数</h3><p>此步骤将一些dom操作和事件操作封装为函数放到整个组件里。</p><h3 id="标尺工具"><a class="markdownIt-Anchor" href="#标尺工具"></a> 标尺工具</h3><p>在dwv中留有class类的接口进行实现，内部封装的是Konva，找源码看：</p><p><img src="/2021/07/23/dwv%E5%8F%8A%E5%85%B6React%E5%AE%9E%E8%B7%B5%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0/2021-07-23-18-21-37.png" alt="标尺实现"></p><p>应该是将多个Konva.Line放到一起组成标尺的基本形状，至于长度的计算，思路应该是根据两个端点的坐标求出像素长度，再根据图片的比例换算为实际长度。</p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><ul><li>DWV的结构的重点在于，把工具的添加实现了自动化，只需要在state中声明需要的工具，通过渲染函数和dwv.app类的接口调用即可实现工具的添加</li><li>对于图像的查看功能实现，应按照逻辑进行分层来处理：图形层（获取数据并显示）和绘制层（形状标注），对于事件的监听放到最外层，以避免层覆盖使得事件监听失效。同时可以仿照DWV，对事件监听的控制统一进行添加管理</li><li>DWV这个Demo较小，对于数据流没有明显展现，如果使用Mobx数据流的话，可以将<strong>数据获取</strong>和<strong>界面状态</strong>分别封装为两个Store</li></ul><p>目前只是对dwv简单进行了解，其接口使用、具体实践还有待进一步学习。</p>]]></content>
    
    
    <categories>
      
      <category>Front-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>React</tag>
      
      <tag>DWV</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>链接合集</title>
    <link href="/2021/07/09/%E9%93%BE%E6%8E%A5%E5%90%88%E9%9B%86/"/>
    <url>/2021/07/09/%E9%93%BE%E6%8E%A5%E5%90%88%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="工具介绍"><a class="markdownIt-Anchor" href="#工具介绍"></a> 📗 工具介绍</h1><ul><li><a href="https://www.jianshu.com/p/c4f02f46224f">yarn的介绍及workspace的使用</a></li><li><a href="https://zhuanlan.zhihu.com/p/77577415">Monorepo 是什么，为什么大家都在用？</a></li><li><a href="https://www.jianshu.com/p/dafc2052eedc">Monorepo实战</a></li></ul><h1 id="文档链接"><a class="markdownIt-Anchor" href="#文档链接"></a> 🎈 文档链接</h1><ul><li><a href="https://yarn.bootcss.com/docs/">Yarn</a></li><li><a href="https://webpack.docschina.org/configuration">webpack</a></li><li><a href="https://github.com/lerna/lerna">Lerna</a></li></ul><h1 id="参考教程"><a class="markdownIt-Anchor" href="#参考教程"></a> 💙 参考教程</h1><h2 id="vs-code-c开发"><a class="markdownIt-Anchor" href="#vs-code-c开发"></a> VS Code —— C++开发</h2><ul><li><a href="https://www.whbwiki.com/335.html">开发环境配置详细教程</a></li><li><a href="https://blog.csdn.net/weixin_43343144/article/details/85147439">配置文件说明</a></li><li><a href="https://zhuanlan.zhihu.com/p/153252108">插件CodeRunner运行C++代码时中文乱码问题的解决</a></li><li><a href="https://blog.csdn.net/weixin_43940314/article/details/115456199">安装和使用C++线性代数库eigen（Windows，MinGW，VS Code和VS2019的配置）</a></li><li>Code-Runner在编译时不会自动引入eigen，需要在setting.json中设置<code>&quot;code-runner.executorMap&quot;</code>中的<code>&quot;cpp&quot;: &quot;cd $dir &amp;&amp; g++ -g $fileName -o $fileNameWithoutExt -I 'C:/Users/xxx/eigen-3.4-rc1' &amp;&amp; $dir$fileNameWithoutExt&quot;</code>，才可以正常运行。当然这个插件配置较为简单，更加复杂、稳妥的配置推荐使用C/C++插件中的tasks.json文件。</li></ul><h2 id="vs-code-cmake"><a class="markdownIt-Anchor" href="#vs-code-cmake"></a> VS Code —— CMake</h2><ul><li><a href="https://www.cnblogs.com/herelsp/p/8679200.html#_label2">CMake+MinGW64搭建C/C++编译环境</a></li><li><a href="https://blog.csdn.net/JohnJim0/article/details/81842249?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-9.pc_relevant_baidujshouduan&amp;spm=1001.2101.3001.4242">CMake+VSCode搭建C/C++编译环境</a></li></ul><h4 id="使用cmake编译和运行包含有eigen库的步骤"><a class="markdownIt-Anchor" href="#使用cmake编译和运行包含有eigen库的步骤"></a> 使用CMake编译和运行包含有eigen库的步骤</h4><ol><li>编写main.cpp文件</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Eigen/Core&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Eigen/Dense&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-comment">// Example of vector</span><br>    std::cout &lt;&lt; <span class="hljs-string">&quot;Example of vector \n&quot;</span>;<br>    <span class="hljs-comment">// vector definition</span><br>    <span class="hljs-function">Eigen::Vector3f <span class="hljs-title">v</span><span class="hljs-params">(<span class="hljs-number">1.0f</span>,<span class="hljs-number">2.0f</span>,<span class="hljs-number">3.0f</span>)</span></span>;<br>    <span class="hljs-function">Eigen::Vector3f <span class="hljs-title">w</span><span class="hljs-params">(<span class="hljs-number">1.0f</span>,<span class="hljs-number">0.0f</span>,<span class="hljs-number">0.0f</span>)</span></span>;<br>    <span class="hljs-comment">// vector output</span><br>    std::cout &lt;&lt; <span class="hljs-string">&quot;Example of output \n&quot;</span>;<br>    std::cout &lt;&lt; v &lt;&lt; std::endl;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>编写CMakeLists.txt文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs txt">cmake_minimum_required (VERSION 2.8.11)<br><br># 项目名<br>project (Transformation)<br><br># 将解压后的Eigen库的目录引入<br>include_directories(&quot;C:/Users/xxx/eigen-3.4-rc1/&quot;)<br><br># 添加可执行文件<br>add_executable (Transformation main.cpp)<br><br></code></pre></td></tr></table></figure><ol start="3"><li>在main.cpp所在目录下，打开终端(命令行)，依次输入：</li></ol><ul><li><code>mkdir build</code> 创建名为build的文件夹</li><li><code>cd build</code> 移动到build文件夹下</li><li><code>cmake -G &quot;MinGW Makefiles&quot; ..</code> 注意其中<code>..</code>表示上一级目录，若为<code>.</code>则表示当前目录；<code>&quot;MinGW Makefiles&quot;</code>指定了使用MinGW编译器，否则默认是MSVC（Visual Studio的编译器）</li><li><code>mingw32-make.exe</code> 编译程序，错误提示会显示在终端中</li><li><code>./Transformation</code>：若上一步无错误，则可运行程序(这里的Transformation为可执行文件名，可参照CMakeLists.txt中修改)</li></ul><p><img src="/2021/07/09/%E9%93%BE%E6%8E%A5%E5%90%88%E9%9B%86/2021-08-10-09-06-58.png" alt="文件目录结构"></p><p><img src="/2021/07/09/%E9%93%BE%E6%8E%A5%E5%90%88%E9%9B%86/2021-08-10-09-16-22.png" alt="执行结果"></p><blockquote><p>cmake 在 find_path 和 find_library 时，会搜索一些默认的路径。当我们将一些lib安装在非默认搜索路径时，cmake就没法搜索到了。这是我们需要添加路径。方法如下：<br><code>set(CMAKE_INCLUDE_PATH &quot;include_path&quot;)</code><br><code>set(CMAKE_LIBRARY_PATH &quot;lib_path&quot;)</code></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Link-collect</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>webpack</tag>
      
      <tag>Monorepo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建并发布一个react组件到npm</title>
    <link href="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/"/>
    <url>/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考链接与官方文档：</p><ol><li><a href="https://segmentfault.com/a/1190000018079170">教程——发布 react 组件到 npm 上</a></li><li><a href="https://webpack.docschina.org/configuration">webpack中文文档</a></li><li><a href="https://www.npmjs.com/package/webpack-dev-server#browser-support">NPM: webpack-dev-server</a></li><li><a href="https://blog.csdn.net/woshiwangdaye/article/details/105182357">Github 徽章shields使用教程</a></li><li><a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json">NPM的 package.json 配置官网</a></li><li><a href="https://semver.org/lang/zh-CN/">包的版本控制规范</a></li></ol></blockquote><h2 id="问题与解决"><a class="markdownIt-Anchor" href="#问题与解决"></a> 🔵 问题与解决</h2><h4 id="1包版本兼容问题"><a class="markdownIt-Anchor" href="#1包版本兼容问题"></a> 1.包版本兼容问题</h4><p>按照教程来，会自动进行安装最新的npm包，最后在启动本地服务时会产生版本不匹配的错误，解决方法是先对<strong>package.json</strong>文件的依赖版本设定好，再使用<code>npm install</code>命令安装相关依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot;devDependencies&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;@babel/cli&quot;</span>: <span class="hljs-string">&quot;^7.14.5&quot;</span>,<br>    <span class="hljs-string">&quot;@babel/core&quot;</span>: <span class="hljs-string">&quot;^7.14.6&quot;</span>,<br>    <span class="hljs-string">&quot;@babel/preset-env&quot;</span>: <span class="hljs-string">&quot;^7.14.7&quot;</span>,<br>    <span class="hljs-string">&quot;@babel/preset-react&quot;</span>: <span class="hljs-string">&quot;^7.14.5&quot;</span>,<br>    <span class="hljs-string">&quot;babel-loader&quot;</span>: <span class="hljs-string">&quot;^8.2.2&quot;</span>,<br>    <span class="hljs-string">&quot;html-webpack-plugin&quot;</span>: <span class="hljs-string">&quot;^3.2.0&quot;</span>,<br>    <span class="hljs-string">&quot;react&quot;</span>: <span class="hljs-string">&quot;^16.7.0&quot;</span>,<br>    <span class="hljs-string">&quot;react-dom&quot;</span>: <span class="hljs-string">&quot;^16.7.0&quot;</span>,<br>    <span class="hljs-string">&quot;webpack&quot;</span>: <span class="hljs-string">&quot;^4.29.0&quot;</span>,<br>    <span class="hljs-string">&quot;webpack-cli&quot;</span>: <span class="hljs-string">&quot;^3.2.1&quot;</span>,<br>    <span class="hljs-string">&quot;webpack-dev-server&quot;</span>: <span class="hljs-string">&quot;^3.1.14&quot;</span><br></code></pre></td></tr></table></figure><h4 id="2启动本地服务的问题"><a class="markdownIt-Anchor" href="#2启动本地服务的问题"></a> 2.启动本地服务的问题</h4><p>运行<code>npm run start</code>命令之后，会出现这个错误：<br><img src="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/%E6%89%BE%E4%B8%8D%E5%88%B0%E6%96%87%E4%BB%B6.png" alt="启动服务出错"></p><p>但是浏览器中输入<strong>localhost:3001</strong>依旧可以正常访问，说明打包和启动服务过程没有问题，看上去应该是环境变量的问题，并且跟脚本中命令里的<code>&quot;start&quot;: &quot;webpack-dev-server --open development&quot;</code>有关，查看<strong>webpack-dev-server</strong>文档后，是直接使用了<code>webpack-dev-server</code>命令。</p><p><code>--open</code>命令是告诉 dev-server 在服务器启动后打开浏览器；对于<code>development</code>，对比<strong>webpack中文文档</strong>后，发现这个<code>development</code>是用在<strong>mode</strong>中：<br><img src="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/mode.png" alt="文档内容"></p><p>而<strong>webpack-dev-server</strong>其实是webpack在开发环境中使用的一个包，提供实时重新加载功能，应该代码编辑完之后进行增量编译的意思。</p><p>所以将脚本命令改为<code>&quot;start&quot;: &quot;webpack-dev-server&quot;</code>即可，然后在<strong>webpack.config.js</strong>文件中的devServer部分配置改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">devServer: &#123;<br>        port: 3001,<br>        open:<span class="hljs-literal">true</span>, //自动打开浏览器       <br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="3部署到github-page"><a class="markdownIt-Anchor" href="#3部署到github-page"></a> 3.部署到GitHub Page</h4><p>按照参考链接1的步骤对组件开发完毕后，部署时发现报错：<br><img src="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/gh-pages-error.png" alt="Error：gh-pages"></p><p>在仓库中也没有发现gh-pages这个分支，卸载重装gh-pages包依旧报错。其实应该先在GitHub上的仓库中手动创建gh-pages分支，再运行部署的命令。</p><h4 id="npm-login报错"><a class="markdownIt-Anchor" href="#npm-login报错"></a> npm login报错</h4><p>报错信息：<code>500 Internal Server Error - PUT https://registry.npm.taobao.org</code></p><p>原因是，之前使用的淘宝镜像改变了原本的地址，需要通过:<code>npm config set registry https://registry.npmjs.org/</code>命令换成原本的镜像地址。</p><h4 id="4无法发布"><a class="markdownIt-Anchor" href="#4无法发布"></a> 4.无法发布</h4><p><img src="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/publish-error.png" alt="发布报错"></p><p>原因在于新注册的账号没有验证邮箱，如果手机端无法验证，就在网页端，或者去npm登录之后再发一次验证的邮件。</p><h4 id="5git-push出现的问题"><a class="markdownIt-Anchor" href="#5git-push出现的问题"></a> 5.git push出现的问题</h4><p><strong>Error1：</strong><br><img src="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/gitpush.png" alt><br>原因是没有将本地的分支与远程仓库的分支进行关联，解决方法是使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote add origin git@github.com:github—name/repository-name.git<br></code></pre></td></tr></table></figure><p><strong>Error2：</strong><br><img src="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/push-error.png" alt><br>出现这个错误的原因是git本地仓库的当前版本低于远程仓库的版本，需要通过git pull来更新，将远程仓库的内容拉取到本地代码。</p><p><strong>Error3：</strong><br><img src="/2021/07/08/%E5%88%9B%E5%BB%BA%E5%B9%B6%E5%8F%91%E5%B8%83%E4%B8%80%E4%B8%AAreact%E7%BB%84%E4%BB%B6%E5%88%B0npm/pull-error.png" alt><br>原因是两个分支是两个不同的版本，具有不同的提交历史，需要使用下面的命令，可以允许不相关历史，强制合并：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">$git pull origin <span class="hljs-keyword">master</span> <span class="hljs-title">--allow-unrelated-histories</span><br></code></pre></td></tr></table></figure><p>但是合并后，远程仓库与本地仓库不同的地方需要进行手动更改。</p><p>另一种安全的解决办法是使用<code>git stash</code>命令，参见：<br><a href="https://blog.csdn.net/qq_36898043/article/details/79431168?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-4.control">git stash和git stash pop</a></p><h2 id="最终发布"><a class="markdownIt-Anchor" href="#最终发布"></a> 🔵最终发布</h2><p>最终的测试包已经发布：<a href="https://www.npmjs.com/package/@dreamfields/npm-test">https://www.npmjs.com/package/@dreamfields/npm-test</a></p>]]></content>
    
    
    <categories>
      
      <category>Configuration</category>
      
      <category>Front-end</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webpack</tag>
      
      <tag>react</tag>
      
      <tag>npm</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
